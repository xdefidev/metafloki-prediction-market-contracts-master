{
  "id": "b1fb0ec41b556a3d2f890427eed4e807",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.0",
  "solcLongVersion": "0.8.0+commit.c7dfd78e",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/HarmonyPrediction.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity ^0.8.0;\npragma abicoder v2;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\nimport \"./interfaces/AggregatorV3Interface.sol\";\n\n/**\n * @title MetaFlokiPrediction\n */\ncontract MetaFlokiPrediction is Ownable, Pausable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    AggregatorV3Interface public oracle;\n\n    bool public genesisLockOnce = false;\n    bool public genesisStartOnce = false;\n\n    address public adminAddress; // address of the admin\n    address public operatorAddress; // address of the operator\n\n    uint256 public bufferSeconds; // number of seconds for valid execution of a prediction round\n    uint256 public intervalSeconds; // interval in seconds between two prediction rounds\n\n    uint256 public minBetAmount; // minimum betting amount (denominated in wei)\n    uint256 public treasuryFee; // treasury rate (e.g. 200 = 2%, 150 = 1.50%)\n    uint256 public treasuryAmount; // treasury amount that was not claimed\n\n    uint256 public currentEpoch; // current epoch for prediction round\n\n    uint256 public oracleLatestRoundId; // converted from uint80 (Chainlink)\n    uint256 public oracleUpdateAllowance; // seconds\n\n    uint256 public constant MAX_TREASURY_FEE = 1000; // 10%\n\n    mapping(uint256 => mapping(address => BetInfo)) public ledger;\n    mapping(uint256 => Round) public rounds;\n    mapping(address => uint256[]) public userRounds;\n\n    enum Position {\n        Bull,\n        Bear\n    }\n\n    struct Round {\n        uint256 epoch;\n        uint256 startTimestamp;\n        uint256 lockTimestamp;\n        uint256 closeTimestamp;\n        int256 lockPrice;\n        int256 closePrice;\n        uint256 lockOracleId;\n        uint256 closeOracleId;\n        uint256 totalAmount;\n        uint256 bullAmount;\n        uint256 bearAmount;\n        uint256 rewardBaseCalAmount;\n        uint256 rewardAmount;\n        bool oracleCalled;\n    }\n\n    struct BetInfo {\n        Position position;\n        uint256 amount;\n        bool claimed; // default false\n    }\n\n    event BetBear(\n        address indexed sender,\n        uint256 indexed epoch,\n        uint256 amount\n    );\n    event BetBull(\n        address indexed sender,\n        uint256 indexed epoch,\n        uint256 amount\n    );\n    event Claim(address indexed sender, uint256 indexed epoch, uint256 amount);\n    event EndRound(\n        uint256 indexed epoch,\n        uint256 indexed roundId,\n        int256 price\n    );\n    event LockRound(\n        uint256 indexed epoch,\n        uint256 indexed roundId,\n        int256 price\n    );\n\n    event NewAdminAddress(address admin);\n    event NewBufferAndIntervalSeconds(\n        uint256 bufferSeconds,\n        uint256 intervalSeconds\n    );\n    event NewMinBetAmount(uint256 indexed epoch, uint256 minBetAmount);\n    event NewTreasuryFee(uint256 indexed epoch, uint256 treasuryFee);\n    event NewOperatorAddress(address operator);\n    event NewOracle(address oracle);\n    event NewOracleUpdateAllowance(uint256 oracleUpdateAllowance);\n\n    event Pause(uint256 indexed epoch);\n    event RewardsCalculated(\n        uint256 indexed epoch,\n        uint256 rewardBaseCalAmount,\n        uint256 rewardAmount,\n        uint256 treasuryAmount\n    );\n\n    event StartRound(uint256 indexed epoch);\n    event TokenRecovery(address indexed token, uint256 amount);\n    event TreasuryClaim(uint256 amount);\n    event Unpause(uint256 indexed epoch);\n\n    modifier onlyAdmin() {\n        require(msg.sender == adminAddress, \"Not admin\");\n        _;\n    }\n\n    modifier onlyAdminOrOperator() {\n        require(\n            msg.sender == adminAddress || msg.sender == operatorAddress,\n            \"Not operator/admin\"\n        );\n        _;\n    }\n\n    modifier onlyOperator() {\n        require(msg.sender == operatorAddress, \"Not operator\");\n        _;\n    }\n\n    modifier notContract() {\n        require(!_isContract(msg.sender), \"Contract not allowed\");\n        require(msg.sender == tx.origin, \"Proxy contract not allowed\");\n        _;\n    }\n\n    /**\n     * @notice Constructor\n     * @param _oracleAddress: oracle address\n     * @param _adminAddress: admin address\n     * @param _operatorAddress: operator address\n     * @param _intervalSeconds: number of time within an interval\n     * @param _bufferSeconds: buffer of time for resolution of price\n     * @param _minBetAmount: minimum bet amounts (in wei)\n     * @param _oracleUpdateAllowance: oracle update allowance\n     * @param _treasuryFee: treasury fee (1000 = 10%)\n     */\n    constructor(\n        address _oracleAddress,\n        address _adminAddress,\n        address _operatorAddress,\n        uint256 _intervalSeconds,\n        uint256 _bufferSeconds,\n        uint256 _minBetAmount,\n        uint256 _oracleUpdateAllowance,\n        uint256 _treasuryFee\n    ) {\n        require(_treasuryFee <= MAX_TREASURY_FEE, \"Treasury fee too high\");\n\n        oracle = AggregatorV3Interface(_oracleAddress);\n        adminAddress = _adminAddress;\n        operatorAddress = _operatorAddress;\n        intervalSeconds = _intervalSeconds;\n        bufferSeconds = _bufferSeconds;\n        minBetAmount = _minBetAmount;\n        oracleUpdateAllowance = _oracleUpdateAllowance;\n        treasuryFee = _treasuryFee;\n    }\n\n    /**\n     * @notice Bet bear position\n     * @param epoch: epoch\n     */\n    function betBear(uint256 epoch)\n        external\n        payable\n        whenNotPaused\n        nonReentrant\n        notContract\n    {\n        require(epoch == currentEpoch, \"Bet is too early/late\");\n        require(_bettable(epoch), \"Round not bettable\");\n        require(\n            msg.value >= minBetAmount,\n            \"Bet amount must be greater than minBetAmount\"\n        );\n        require(\n            ledger[epoch][msg.sender].amount == 0,\n            \"Can only bet once per round\"\n        );\n\n        // Update round data\n        uint256 amount = msg.value;\n        Round storage round = rounds[epoch];\n        round.totalAmount = round.totalAmount + amount;\n        round.bearAmount = round.bearAmount + amount;\n\n        // Update user data\n        BetInfo storage betInfo = ledger[epoch][msg.sender];\n        betInfo.position = Position.Bear;\n        betInfo.amount = amount;\n        userRounds[msg.sender].push(epoch);\n\n        emit BetBear(msg.sender, epoch, amount);\n    }\n\n    /**\n     * @notice Bet bull position\n     * @param epoch: epoch\n     */\n    function betBull(uint256 epoch)\n        external\n        payable\n        whenNotPaused\n        nonReentrant\n        notContract\n    {\n        require(epoch == currentEpoch, \"Bet is too early/late\");\n        require(_bettable(epoch), \"Round not bettable\");\n        require(\n            msg.value >= minBetAmount,\n            \"Bet amount must be greater than minBetAmount\"\n        );\n        require(\n            ledger[epoch][msg.sender].amount == 0,\n            \"Can only bet once per round\"\n        );\n\n        // Update round data\n        uint256 amount = msg.value;\n        Round storage round = rounds[epoch];\n        round.totalAmount = round.totalAmount + amount;\n        round.bullAmount = round.bullAmount + amount;\n\n        // Update user data\n        BetInfo storage betInfo = ledger[epoch][msg.sender];\n        betInfo.position = Position.Bull;\n        betInfo.amount = amount;\n        userRounds[msg.sender].push(epoch);\n\n        emit BetBull(msg.sender, epoch, amount);\n    }\n\n    /**\n     * @notice Claim reward for an array of epochs\n     * @param epochs: array of epochs\n     */\n    function claim(uint256[] calldata epochs)\n        external\n        nonReentrant\n        notContract\n    {\n        uint256 reward; // Initializes reward\n\n        for (uint256 i = 0; i < epochs.length; i++) {\n            require(\n                rounds[epochs[i]].startTimestamp != 0,\n                \"Round has not started\"\n            );\n            require(\n                block.timestamp > rounds[epochs[i]].closeTimestamp,\n                \"Round has not ended\"\n            );\n\n            uint256 addedReward = 0;\n\n            // Round valid, claim rewards\n            if (rounds[epochs[i]].oracleCalled) {\n                require(\n                    claimable(epochs[i], msg.sender),\n                    \"Not eligible for claim\"\n                );\n                Round memory round = rounds[epochs[i]];\n                addedReward =\n                    (ledger[epochs[i]][msg.sender].amount *\n                        round.rewardAmount) /\n                    round.rewardBaseCalAmount;\n            }\n            // Round invalid, refund bet amount\n            else {\n                require(\n                    refundable(epochs[i], msg.sender),\n                    \"Not eligible for refund\"\n                );\n                addedReward = ledger[epochs[i]][msg.sender].amount;\n            }\n\n            ledger[epochs[i]][msg.sender].claimed = true;\n            reward += addedReward;\n\n            emit Claim(msg.sender, epochs[i], addedReward);\n        }\n\n        if (reward > 0) {\n            _safeTransferOne(address(msg.sender), reward);\n        }\n    }\n\n    /**\n     * @notice Start the next round n, lock price for round n-1, end round n-2\n     * @dev Callable by operator\n     */\n    function executeRound() external whenNotPaused onlyOperator {\n        require(\n            genesisStartOnce && genesisLockOnce,\n            \"Can only run after genesisStartRound and genesisLockRound is triggered\"\n        );\n\n        (uint80 currentRoundId, int256 currentPrice) = _getPriceFromOracle();\n\n        oracleLatestRoundId = uint256(currentRoundId);\n\n        // CurrentEpoch refers to previous round (n-1)\n        _safeLockRound(currentEpoch, currentRoundId, currentPrice);\n        _safeEndRound(currentEpoch - 1, currentRoundId, currentPrice);\n        _calculateRewards(currentEpoch - 1);\n\n        // Increment currentEpoch to current round (n)\n        currentEpoch = currentEpoch + 1;\n        _safeStartRound(currentEpoch);\n    }\n\n    /**\n     * @notice Lock genesis round\n     * @dev Callable by operator\n     */\n    function genesisLockRound() external whenNotPaused onlyOperator {\n        require(\n            genesisStartOnce,\n            \"Can only run after genesisStartRound is triggered\"\n        );\n        require(!genesisLockOnce, \"Can only run genesisLockRound once\");\n\n        (uint80 currentRoundId, int256 currentPrice) = _getPriceFromOracle();\n\n        oracleLatestRoundId = uint256(currentRoundId);\n\n        _safeLockRound(currentEpoch, currentRoundId, currentPrice);\n\n        currentEpoch = currentEpoch + 1;\n        _startRound(currentEpoch);\n        genesisLockOnce = true;\n    }\n\n    /**\n     * @notice Start genesis round\n     * @dev Callable by admin or operator\n     */\n    function genesisStartRound() external whenNotPaused onlyOperator {\n        require(!genesisStartOnce, \"Can only run genesisStartRound once\");\n\n        currentEpoch = currentEpoch + 1;\n        _startRound(currentEpoch);\n        genesisStartOnce = true;\n    }\n\n    /**\n     * @notice called by the admin to pause, triggers stopped state\n     * @dev Callable by admin or operator\n     */\n    function pause() external whenNotPaused onlyAdminOrOperator {\n        _pause();\n\n        emit Pause(currentEpoch);\n    }\n\n    /**\n     * @notice Claim all rewards in treasury\n     * @dev Callable by admin\n     */\n    function claimTreasury() external nonReentrant onlyAdmin {\n        uint256 currentTreasuryAmount = treasuryAmount;\n        treasuryAmount = 0;\n        _safeTransferOne(adminAddress, currentTreasuryAmount);\n\n        emit TreasuryClaim(currentTreasuryAmount);\n    }\n\n    /**\n     * @notice called by the admin to unpause, returns to normal state\n     * Reset genesis state. Once paused, the rounds would need to be kickstarted by genesis\n     */\n    function unpause() external whenPaused onlyAdmin {\n        genesisStartOnce = false;\n        genesisLockOnce = false;\n        _unpause();\n\n        emit Unpause(currentEpoch);\n    }\n\n    /**\n     * @notice Set buffer and interval (in seconds)\n     * @dev Callable by admin\n     */\n    function setBufferAndIntervalSeconds(\n        uint256 _bufferSeconds,\n        uint256 _intervalSeconds\n    ) external whenPaused onlyAdmin {\n        require(\n            _bufferSeconds < _intervalSeconds,\n            \"bufferSeconds must be inferior to intervalSeconds\"\n        );\n        bufferSeconds = _bufferSeconds;\n        intervalSeconds = _intervalSeconds;\n\n        emit NewBufferAndIntervalSeconds(_bufferSeconds, _intervalSeconds);\n    }\n\n    /**\n     * @notice Set minBetAmount\n     * @dev Callable by admin\n     */\n    function setMinBetAmount(uint256 _minBetAmount)\n        external\n        whenPaused\n        onlyAdmin\n    {\n        require(_minBetAmount != 0, \"Must be superior to 0\");\n        minBetAmount = _minBetAmount;\n\n        emit NewMinBetAmount(currentEpoch, minBetAmount);\n    }\n\n    /**\n     * @notice Set operator address\n     * @dev Callable by admin\n     */\n    function setOperator(address _operatorAddress) external onlyAdmin {\n        require(_operatorAddress != address(0), \"Cannot be zero address\");\n        operatorAddress = _operatorAddress;\n\n        emit NewOperatorAddress(_operatorAddress);\n    }\n\n    /**\n     * @notice Set Oracle address\n     * @dev Callable by admin\n     */\n    function setOracle(address _oracle) external whenPaused onlyAdmin {\n        require(_oracle != address(0), \"Cannot be zero address\");\n        oracleLatestRoundId = 0;\n        oracle = AggregatorV3Interface(_oracle);\n\n        // Dummy check to make sure the interface implements this function properly\n        oracle.latestRoundData();\n\n        emit NewOracle(_oracle);\n    }\n\n    /**\n     * @notice Set oracle update allowance\n     * @dev Callable by admin\n     */\n    function setOracleUpdateAllowance(uint256 _oracleUpdateAllowance)\n        external\n        whenPaused\n        onlyAdmin\n    {\n        oracleUpdateAllowance = _oracleUpdateAllowance;\n\n        emit NewOracleUpdateAllowance(_oracleUpdateAllowance);\n    }\n\n    /**\n     * @notice Set treasury fee\n     * @dev Callable by admin\n     */\n    function setTreasuryFee(uint256 _treasuryFee)\n        external\n        whenPaused\n        onlyAdmin\n    {\n        require(_treasuryFee <= MAX_TREASURY_FEE, \"Treasury fee too high\");\n        treasuryFee = _treasuryFee;\n\n        emit NewTreasuryFee(currentEpoch, treasuryFee);\n    }\n\n    /**\n     * @notice It allows the owner to recover tokens sent to the contract by mistake\n     * @param _token: token address\n     * @param _amount: token amount\n     * @dev Callable by owner\n     */\n    function recoverToken(address _token, uint256 _amount) external onlyOwner {\n        IERC20(_token).safeTransfer(address(msg.sender), _amount);\n\n        emit TokenRecovery(_token, _amount);\n    }\n\n    function getBlockTimestamp() public view returns (uint256) {\n        return block.timestamp;\n    }\n\n    /**\n     * @notice Set admin address\n     * @dev Callable by owner\n     */\n    function setAdmin(address _adminAddress) external onlyOwner {\n        require(_adminAddress != address(0), \"Cannot be zero address\");\n        adminAddress = _adminAddress;\n\n        emit NewAdminAddress(_adminAddress);\n    }\n\n    /**\n     * @notice Returns round epochs and bet information for a user that has participated\n     * @param user: user address\n     * @param cursor: cursor\n     * @param size: size\n     */\n    function getUserRounds(\n        address user,\n        uint256 cursor,\n        uint256 size\n    )\n        external\n        view\n        returns (\n            uint256[] memory,\n            BetInfo[] memory,\n            uint256\n        )\n    {\n        uint256 length = size;\n\n        if (length > userRounds[user].length - cursor) {\n            length = userRounds[user].length - cursor;\n        }\n\n        uint256[] memory values = new uint256[](length);\n        BetInfo[] memory betInfo = new BetInfo[](length);\n\n        for (uint256 i = 0; i < length; i++) {\n            values[i] = userRounds[user][cursor + i];\n            betInfo[i] = ledger[values[i]][user];\n        }\n\n        return (values, betInfo, cursor + length);\n    }\n\n    /**\n     * @notice Returns round epochs length\n     * @param user: user address\n     */\n    function getUserRoundsLength(address user) external view returns (uint256) {\n        return userRounds[user].length;\n    }\n\n    /**\n     * @notice Get the claimable stats of specific epoch and user account\n     * @param epoch: epoch\n     * @param user: user address\n     */\n    function claimable(uint256 epoch, address user) public view returns (bool) {\n        BetInfo memory betInfo = ledger[epoch][user];\n        Round memory round = rounds[epoch];\n        if (round.lockPrice == round.closePrice) {\n            return false;\n        }\n        return\n            round.oracleCalled &&\n            betInfo.amount != 0 &&\n            !betInfo.claimed &&\n            ((round.closePrice > round.lockPrice &&\n                betInfo.position == Position.Bull) ||\n                (round.closePrice < round.lockPrice &&\n                    betInfo.position == Position.Bear));\n    }\n\n    /**\n     * @notice Get the refundable stats of specific epoch and user account\n     * @param epoch: epoch\n     * @param user: user address\n     */\n    function refundable(uint256 epoch, address user)\n        public\n        view\n        returns (bool)\n    {\n        BetInfo memory betInfo = ledger[epoch][user];\n        Round memory round = rounds[epoch];\n        return\n            !round.oracleCalled &&\n            !betInfo.claimed &&\n            block.timestamp > round.closeTimestamp + bufferSeconds &&\n            betInfo.amount != 0;\n    }\n\n    /**\n     * @notice Calculate rewards for round\n     * @param epoch: epoch\n     */\n    function _calculateRewards(uint256 epoch) internal {\n        require(\n            rounds[epoch].rewardBaseCalAmount == 0 &&\n                rounds[epoch].rewardAmount == 0,\n            \"Rewards calculated\"\n        );\n        Round storage round = rounds[epoch];\n        uint256 rewardBaseCalAmount;\n        uint256 treasuryAmt;\n        uint256 rewardAmount;\n\n        // Bull wins\n        if (round.closePrice > round.lockPrice) {\n            rewardBaseCalAmount = round.bullAmount;\n            treasuryAmt = (round.totalAmount * treasuryFee) / 10000;\n            rewardAmount = round.totalAmount - treasuryAmt;\n        }\n        // Bear wins\n        else if (round.closePrice < round.lockPrice) {\n            rewardBaseCalAmount = round.bearAmount;\n            treasuryAmt = (round.totalAmount * treasuryFee) / 10000;\n            rewardAmount = round.totalAmount - treasuryAmt;\n        }\n        // House wins\n        else {\n            rewardBaseCalAmount = 0;\n            rewardAmount = 0;\n            treasuryAmt = round.totalAmount;\n        }\n        round.rewardBaseCalAmount = rewardBaseCalAmount;\n        round.rewardAmount = rewardAmount;\n\n        // Add to treasury\n        treasuryAmount += treasuryAmt;\n\n        emit RewardsCalculated(\n            epoch,\n            rewardBaseCalAmount,\n            rewardAmount,\n            treasuryAmt\n        );\n    }\n\n    /**\n     * @notice End round\n     * @param epoch: epoch\n     * @param roundId: roundId\n     * @param price: price of the round\n     */\n    function _safeEndRound(\n        uint256 epoch,\n        uint256 roundId,\n        int256 price\n    ) internal {\n        require(\n            rounds[epoch].lockTimestamp != 0,\n            \"Can only end round after round has locked\"\n        );\n        require(\n            block.timestamp >= rounds[epoch].closeTimestamp,\n            \"Can only end round after closeTimestamp\"\n        );\n        require(\n            block.timestamp <= rounds[epoch].closeTimestamp + bufferSeconds,\n            \"Can only end round within bufferSeconds\"\n        );\n        Round storage round = rounds[epoch];\n        round.closePrice = price;\n        round.closeOracleId = roundId;\n        round.oracleCalled = true;\n\n        emit EndRound(epoch, roundId, round.closePrice);\n    }\n\n    /**\n     * @notice Lock round\n     * @param epoch: epoch\n     * @param roundId: roundId\n     * @param price: price of the round\n     */\n    function _safeLockRound(\n        uint256 epoch,\n        uint256 roundId,\n        int256 price\n    ) internal {\n        require(\n            rounds[epoch].startTimestamp != 0,\n            \"Can only lock round after round has started\"\n        );\n        require(\n            block.timestamp >= rounds[epoch].lockTimestamp,\n            \"Can only lock round after lockTimestamp\"\n        );\n        require(\n            block.timestamp <= rounds[epoch].lockTimestamp + bufferSeconds,\n            \"Can only lock round within bufferSeconds\"\n        );\n        Round storage round = rounds[epoch];\n        round.closeTimestamp = block.timestamp + intervalSeconds;\n        round.lockPrice = price;\n        round.lockOracleId = roundId;\n\n        emit LockRound(epoch, roundId, round.lockPrice);\n    }\n\n    /**\n     * @notice Start round\n     * Previous round n-2 must end\n     * @param epoch: epoch\n     */\n    function _safeStartRound(uint256 epoch) internal {\n        require(\n            genesisStartOnce,\n            \"Can only run after genesisStartRound is triggered\"\n        );\n        require(\n            rounds[epoch - 2].closeTimestamp != 0,\n            \"Can only start round after round n-2 has ended\"\n        );\n        require(\n            block.timestamp >= rounds[epoch - 2].closeTimestamp,\n            \"Can only start new round after round n-2 closeTimestamp\"\n        );\n        _startRound(epoch);\n    }\n\n    /**\n     * @notice Transfer One in a safe way\n     * @param to: address to transfer One to\n     * @param value: One amount to transfer (in wei)\n     */\n    function _safeTransferOne(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(\"\");\n        require(success, \"TransferHelper: One_TRANSFER_FAILED\");\n    }\n\n    /**\n     * @notice Start round\n     * Previous round n-2 must end\n     * @param epoch: epoch\n     */\n    function _startRound(uint256 epoch) internal {\n        Round storage round = rounds[epoch];\n        round.startTimestamp = block.timestamp;\n        round.lockTimestamp = block.timestamp + intervalSeconds;\n        round.closeTimestamp = block.timestamp + (2 * intervalSeconds);\n        round.epoch = epoch;\n        round.totalAmount = 0;\n\n        emit StartRound(epoch);\n    }\n\n    /**\n     * @notice Determine if a round is valid for receiving bets\n     * Round must have started and locked\n     * Current timestamp must be within startTimestamp and closeTimestamp\n     */\n    function _bettable(uint256 epoch) internal view returns (bool) {\n        return\n            rounds[epoch].startTimestamp != 0 &&\n            rounds[epoch].lockTimestamp != 0 &&\n            block.timestamp > rounds[epoch].startTimestamp &&\n            block.timestamp < rounds[epoch].lockTimestamp;\n    }\n\n    function getLatestOracleRounds() public view returns (uint80, uint256) {\n        (uint80 roundId, , , , ) = oracle.latestRoundData();\n        return (roundId, oracleLatestRoundId);\n    }\n\n    /**\n     * @notice Get latest recorded price from oracle\n     * If it falls below allowed buffer or has not updated, it would be invalid.\n     */\n    function _getPriceFromOracle() internal view returns (uint80, int256) {\n        uint256 leastAllowedTimestamp = block.timestamp + oracleUpdateAllowance;\n        (uint80 roundId, int256 price, , uint256 timestamp, ) = oracle\n            .latestRoundData();\n        require(\n            timestamp <= leastAllowedTimestamp,\n            \"Oracle update exceeded max timestamp allowance\"\n        );\n        require(\n            uint256(roundId) > oracleLatestRoundId,\n            \"Oracle update roundId must be larger than oracleLatestRoundId\"\n        );\n        return (roundId, price);\n    }\n\n    /**\n     * @notice Returns true if `account` is a contract.\n     * @param account: account address\n     */\n    function _isContract(address account) internal view returns (bool) {\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _setOwner(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _setOwner(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _setOwner(newOwner);\n    }\n\n    function _setOwner(address newOwner) private {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/security/Pausable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused(), \"Pausable: paused\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        require(paused(), \"Pausable: not paused\");\n        _;\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and make it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
      },
      "contracts/interfaces/AggregatorV3Interface.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n\n  function decimals()\n    external\n    view\n    returns (\n      uint8\n    );\n\n  function description()\n    external\n    view\n    returns (\n      string memory\n    );\n\n  function version()\n    external\n    view\n    returns (\n      uint256\n    );\n\n  // getRoundData and latestRoundData should both raise \"No data present\"\n  // if they do not have data to report, instead of returning unset values\n  // which could be misinterpreted as actual reported values.\n  function getRoundData(\n    uint80 _roundId\n  )\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Address.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "evmVersion": "istanbul",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          }
        }
      },
      "@openzeppelin/contracts/security/Pausable.sol": {
        "Pausable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "paused()": "5c975abb"
            }
          }
        }
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "ReentrancyGuard": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          }
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          }
        }
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "SafeERC20": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203dd08fe40693942fff9c1da577bcfc5e0377c3a97bf518f1f3be6108655d821764736f6c63430008000033",
              "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE 0xD0 DUP16 0xE4 MOD SWAP4 SWAP5 0x2F SELFDESTRUCT SWAP13 SAR 0xA5 PUSH24 0xBCFC5E0377C3A97BF518F1F3BE6108655D821764736F6C63 NUMBER STOP ADDMOD STOP STOP CALLER ",
              "sourceMap": "578:3270:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;578:3270:4;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203dd08fe40693942fff9c1da577bcfc5e0377c3a97bf518f1f3be6108655d821764736f6c63430008000033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE 0xD0 DUP16 0xE4 MOD SWAP4 SWAP5 0x2F SELFDESTRUCT SWAP13 SAR 0xA5 PUSH24 0xBCFC5E0377C3A97BF518F1F3BE6108655D821764736F6C63 NUMBER STOP ADDMOD STOP STOP CALLER ",
              "sourceMap": "578:3270:4:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          }
        }
      },
      "@openzeppelin/contracts/utils/Address.sol": {
        "Address": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c8baa73e898fadab2c80d32bf7da3bd6b9aa8fef97fa46211721ebba6ed0a2df64736f6c63430008000033",
              "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 0xBA 0xA7 RETURNDATACOPY DUP10 DUP16 0xAD 0xAB 0x2C DUP1 0xD3 0x2B 0xF7 0xDA EXTCODESIZE 0xD6 0xB9 0xAA DUP16 0xEF SWAP8 STATICCALL CHAINID 0x21 OR 0x21 0xEB 0xBA PUSH15 0xD0A2DF64736F6C6343000800003300 ",
              "sourceMap": "126:7729:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;126:7729:5;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c8baa73e898fadab2c80d32bf7da3bd6b9aa8fef97fa46211721ebba6ed0a2df64736f6c63430008000033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 0xBA 0xA7 RETURNDATACOPY DUP10 DUP16 0xAD 0xAB 0x2C DUP1 0xD3 0x2B 0xF7 0xDA EXTCODESIZE 0xD6 0xB9 0xAA DUP16 0xEF SWAP8 STATICCALL CHAINID 0x21 OR 0x21 0xEB 0xBA PUSH15 0xD0A2DF64736F6C6343000800003300 ",
              "sourceMap": "126:7729:5:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          }
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          }
        }
      },
      "contracts/HarmonyPrediction.sol": {
        "MetaFlokiPrediction": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_oracleAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_adminAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_operatorAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_intervalSeconds",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_bufferSeconds",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_minBetAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_oracleUpdateAllowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_treasuryFee",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "epoch",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "BetBear",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "epoch",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "BetBull",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "epoch",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Claim",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "epoch",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "roundId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "price",
                  "type": "int256"
                }
              ],
              "name": "EndRound",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "epoch",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "roundId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "price",
                  "type": "int256"
                }
              ],
              "name": "LockRound",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "admin",
                  "type": "address"
                }
              ],
              "name": "NewAdminAddress",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "bufferSeconds",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "intervalSeconds",
                  "type": "uint256"
                }
              ],
              "name": "NewBufferAndIntervalSeconds",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "epoch",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "minBetAmount",
                  "type": "uint256"
                }
              ],
              "name": "NewMinBetAmount",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "NewOperatorAddress",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "oracle",
                  "type": "address"
                }
              ],
              "name": "NewOracle",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "oracleUpdateAllowance",
                  "type": "uint256"
                }
              ],
              "name": "NewOracleUpdateAllowance",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "epoch",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "treasuryFee",
                  "type": "uint256"
                }
              ],
              "name": "NewTreasuryFee",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "epoch",
                  "type": "uint256"
                }
              ],
              "name": "Pause",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "epoch",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "rewardBaseCalAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "rewardAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "treasuryAmount",
                  "type": "uint256"
                }
              ],
              "name": "RewardsCalculated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "epoch",
                  "type": "uint256"
                }
              ],
              "name": "StartRound",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TokenRecovery",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TreasuryClaim",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "epoch",
                  "type": "uint256"
                }
              ],
              "name": "Unpause",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "MAX_TREASURY_FEE",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "adminAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "epoch",
                  "type": "uint256"
                }
              ],
              "name": "betBear",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "epoch",
                  "type": "uint256"
                }
              ],
              "name": "betBull",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "bufferSeconds",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256[]",
                  "name": "epochs",
                  "type": "uint256[]"
                }
              ],
              "name": "claim",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "claimTreasury",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "epoch",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "claimable",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "currentEpoch",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "executeRound",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "genesisLockOnce",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "genesisLockRound",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "genesisStartOnce",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "genesisStartRound",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getBlockTimestamp",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getLatestOracleRounds",
              "outputs": [
                {
                  "internalType": "uint80",
                  "name": "",
                  "type": "uint80"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "cursor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "size",
                  "type": "uint256"
                }
              ],
              "name": "getUserRounds",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum MetaFlokiPrediction.Position",
                      "name": "position",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "claimed",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct MetaFlokiPrediction.BetInfo[]",
                  "name": "",
                  "type": "tuple[]"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "getUserRoundsLength",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "intervalSeconds",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "ledger",
              "outputs": [
                {
                  "internalType": "enum MetaFlokiPrediction.Position",
                  "name": "position",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "claimed",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "minBetAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "operatorAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "oracle",
              "outputs": [
                {
                  "internalType": "contract AggregatorV3Interface",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "oracleLatestRoundId",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "oracleUpdateAllowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "recoverToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "epoch",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "refundable",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "rounds",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "epoch",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lockTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "closeTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "lockPrice",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "closePrice",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "lockOracleId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "closeOracleId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "bullAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "bearAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rewardBaseCalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rewardAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "oracleCalled",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_adminAddress",
                  "type": "address"
                }
              ],
              "name": "setAdmin",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_bufferSeconds",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_intervalSeconds",
                  "type": "uint256"
                }
              ],
              "name": "setBufferAndIntervalSeconds",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_minBetAmount",
                  "type": "uint256"
                }
              ],
              "name": "setMinBetAmount",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_operatorAddress",
                  "type": "address"
                }
              ],
              "name": "setOperator",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_oracle",
                  "type": "address"
                }
              ],
              "name": "setOracle",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_oracleUpdateAllowance",
                  "type": "uint256"
                }
              ],
              "name": "setOracleUpdateAllowance",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_treasuryFee",
                  "type": "uint256"
                }
              ],
              "name": "setTreasuryFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "treasuryAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "treasuryFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unpause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "userRounds",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1254:9",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:9",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "76:117:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "86:22:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "101:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "95:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "95:13:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "86:5:9"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "171:16:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "180:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "183:1:9",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "173:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "173:12:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "173:12:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "130:5:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "141:5:9"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "156:3:9",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "161:1:9",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "152:3:9"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "152:11:9"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "165:1:9",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "148:3:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "148:19:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "137:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "137:31:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "127:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "127:42:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "120:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "120:50:9"
                              },
                              "nodeType": "YulIf",
                              "src": "117:2:9"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "55:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "66:5:9",
                            "type": ""
                          }
                        ],
                        "src": "14:179:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "398:504:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "445:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "454:6:9"
                                        },
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "462:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "447:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "447:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "447:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "419:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "428:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "415:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "415:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "440:3:9",
                                    "type": "",
                                    "value": "256"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "411:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "411:33:9"
                              },
                              "nodeType": "YulIf",
                              "src": "408:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "480:52:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "522:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "490:31:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "490:42:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "480:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "541:61:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "587:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "598:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "583:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "583:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "551:31:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "551:51:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "541:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "611:61:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "657:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "668:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "653:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "653:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "621:31:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "621:51:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "611:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "681:35:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "701:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "712:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "697:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "697:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "691:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "691:25:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "681:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "725:36:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "745:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "756:3:9",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "741:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "741:19:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "735:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "735:26:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "725:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "770:36:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "790:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "801:3:9",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "786:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "786:19:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "780:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "780:26:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value5",
                                  "nodeType": "YulIdentifier",
                                  "src": "770:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "815:36:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "835:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "846:3:9",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "831:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "831:19:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "825:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "825:26:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value6",
                                  "nodeType": "YulIdentifier",
                                  "src": "815:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "860:36:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "880:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "891:3:9",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "876:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "876:19:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "870:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "870:26:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value7",
                                  "nodeType": "YulIdentifier",
                                  "src": "860:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "308:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "319:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "331:6:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "339:6:9",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "347:6:9",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "355:6:9",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "363:6:9",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "371:6:9",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "379:6:9",
                            "type": ""
                          },
                          {
                            "name": "value7",
                            "nodeType": "YulTypedName",
                            "src": "387:6:9",
                            "type": ""
                          }
                        ],
                        "src": "198:704:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1081:171:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1098:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1109:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1091:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1091:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1091:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1132:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1143:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1128:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1128:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1148:2:9",
                                    "type": "",
                                    "value": "21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1121:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1121:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1121:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1171:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1182:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1167:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1167:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1187:23:9",
                                    "type": "",
                                    "value": "Treasury fee too high"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1160:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1160:51:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1160:51:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1220:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1232:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1243:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1228:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1228:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1220:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_11bdebae3580e3cc0aa83f4abe624d8a87da76af0e4eb2ea8382d5e81bd9d2ff__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1058:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1072:4:9",
                            "type": ""
                          }
                        ],
                        "src": "907:345:9"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(value4, value4) }\n        value0 := abi_decode_t_address_fromMemory(headStart)\n        value1 := abi_decode_t_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_t_address_fromMemory(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := mload(add(headStart, 128))\n        value5 := mload(add(headStart, 160))\n        value6 := mload(add(headStart, 192))\n        value7 := mload(add(headStart, 224))\n    }\n    function abi_encode_tuple_t_stringliteral_11bdebae3580e3cc0aa83f4abe624d8a87da76af0e4eb2ea8382d5e81bd9d2ff__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Treasury fee too high\")\n        tail := add(headStart, 96)\n    }\n}",
                  "id": 9,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60806040526002805461ffff60a01b191690553480156200001f57600080fd5b5060405162003e5f38038062003e5f833981016040819052620000429162000162565b6200005662000050620000f1565b620000f5565b6000805460ff60a01b19169055600180556103e8811115620000955760405162461bcd60e51b81526004016200008c90620001dc565b60405180910390fd5b600280546001600160a01b03199081166001600160a01b039a8b1617909155600380548216988a1698909817909755600480549097169590971694909417909455600691909155600555600791909155600c5560085562000213565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200015d57600080fd5b919050565b600080600080600080600080610100898b0312156200017f578384fd5b6200018a8962000145565b97506200019a60208a0162000145565b9650620001aa60408a0162000145565b9550606089015194506080890151935060a0890151925060c0890151915060e089015190509295985092959890939650565b60208082526015908201527f54726561737572792066656520746f6f20686967680000000000000000000000604082015260600190565b613c3c80620002236000396000f3fe6080604052600436106102665760003560e01c80637d1cd04f11610144578063cc32d176116100b6578063ec3247031161007a578063ec324703146106ad578063f2b3c809146106c2578063f2fde38b146106d7578063f7fdec28146106f7578063fa968eea1461070c578063fc6f94681461072157610266565b8063cc32d1761461062e578063cf2f503914610643578063d9d55eac14610663578063dd1f759614610678578063eaba23611461069857610266565b80638da5cb5b116101085780638da5cb5b14610577578063951fd6001461058c578063a0c7f71c146105bb578063aa6b873a146105db578063b29a8140146105ee578063b3ab15fb1461060e57610266565b80637d1cd04f146104de5780637dc0d1d0146104f35780638456cb5914610508578063890dc7661461051d5780638c65c81f1461053d57610266565b80636ba4c138116101dd57806376671808116101a1578063766718081461043f57806377e741c714610454578063796b89b9146104745780637adbf973146104895780637b3205f5146104a95780637bf41254146104be57610266565b80636ba4c1381461039b5780636c188593146103bb578063704b6c02146103db578063715018a6146103fb5780637285c58b1461041057610266565b8063368acb091161022f578063368acb091461031f5780633f4ba83a14610334578063452fd75a1461034957806357fb096f1461035e5780635c975abb14610371578063605540111461038657610266565b80623bdc741461026b5780630f74174f14610282578063127effb2146102ad578063273867d4146102cf57806329b72441146102fc575b600080fd5b34801561027757600080fd5b50610280610736565b005b34801561028e57600080fd5b506102976107ee565b6040516102a49190613047565b60405180910390f35b3480156102b957600080fd5b506102c26107fe565b6040516102a49190612f78565b3480156102db57600080fd5b506102ef6102ea366004612d80565b61080d565b6040516102a49190613076565b34801561030857600080fd5b5061031161082c565b6040516102a4929190613b1e565b34801561032b57600080fd5b506102ef6108c9565b34801561034057600080fd5b506102806108cf565b34801561035557600080fd5b50610280610961565b61028061036c366004612e84565b610a0b565b34801561037d57600080fd5b50610297610c02565b34801561039257600080fd5b506102ef610c12565b3480156103a757600080fd5b506102806103b6366004612df5565b610c18565b3480156103c757600080fd5b506102806103d6366004612e84565b6110fc565b3480156103e757600080fd5b506102806103f6366004612d80565b6111aa565b34801561040757600080fd5b50610280611265565b34801561041c57600080fd5b5061043061042b366004612e9c565b6112b0565b6040516102a493929190613052565b34801561044b57600080fd5b506102ef6112e1565b34801561046057600080fd5b5061028061046f366004612e84565b6112e7565b34801561048057600080fd5b506102ef61138f565b34801561049557600080fd5b506102806104a4366004612d80565b611393565b3480156104b557600080fd5b506102806114d4565b3480156104ca57600080fd5b506102976104d9366004612e9c565b6115ef565b3480156104ea57600080fd5b506102ef61177b565b3480156104ff57600080fd5b506102c2611781565b34801561051457600080fd5b50610280611790565b34801561052957600080fd5b50610280610538366004612ec7565b61182a565b34801561054957600080fd5b5061055d610558366004612e84565b6118df565b6040516102a49e9d9c9b9a99989796959493929190613ab9565b34801561058357600080fd5b506102c261194f565b34801561059857600080fd5b506105ac6105a7366004612dc3565b61195e565b6040516102a493929190612fa5565b3480156105c757600080fd5b506102976105d6366004612e9c565b611c13565b6102806105e9366004612e84565b611e13565b3480156105fa57600080fd5b50610280610609366004612d9a565b611ffb565b34801561061a57600080fd5b50610280610629366004612d80565b612093565b34801561063a57600080fd5b506102ef61212e565b34801561064f57600080fd5b5061028061065e366004612e84565b612134565b34801561066f57600080fd5b506102806121b7565b34801561068457600080fd5b506102ef610693366004612d9a565b6122c1565b3480156106a457600080fd5b506102ef6122f2565b3480156106b957600080fd5b506102ef6122f8565b3480156106ce57600080fd5b506102ef6122fe565b3480156106e357600080fd5b506102806106f2366004612d80565b612304565b34801561070357600080fd5b50610297612375565b34801561071857600080fd5b506102ef612385565b34801561072d57600080fd5b506102c261238b565b600260015414156107625760405162461bcd60e51b815260040161075990613998565b60405180910390fd5b60026001556003546001600160a01b031633146107915760405162461bcd60e51b815260040161075990613a72565b6009805460009091556003546107b0906001600160a01b03168261239a565b7fb9197c6b8e21274bd1e2d9c956a88af5cfee510f630fab3f046300f88b422361816040516107df9190613076565b60405180910390a15060018055565b600254600160a01b900460ff1681565b6004546001600160a01b031681565b6001600160a01b0381166000908152600f60205260409020545b919050565b6000806000600260009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561087f57600080fd5b505afa158015610893573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b79190612ee8565b5050600b549295509193505050509091565b60095481565b6108d7610c02565b6108f35760405162461bcd60e51b8152600401610759906130b2565b6003546001600160a01b0316331461091d5760405162461bcd60e51b815260040161075990613a72565b6002805461ffff60a01b1916905561093361241b565b600a546040517faaa520fdd7d2c83061d632fa017b0432407e798818af63ea908589fceda39ab790600090a2565b610969610c02565b156109865760405162461bcd60e51b815260040161075990613655565b6004546001600160a01b031633146109b05760405162461bcd60e51b815260040161075990613a4c565b600254600160a81b900460ff16156109da5760405162461bcd60e51b8152600401610759906137d3565b600a546109e8906001613b37565b600a8190556109f69061248c565b6002805460ff60a81b1916600160a81b179055565b610a13610c02565b15610a305760405162461bcd60e51b815260040161075990613655565b60026001541415610a535760405162461bcd60e51b815260040161075990613998565b6002600155610a613361250a565b15610a7e5760405162461bcd60e51b81526004016107599061331a565b333214610a9d5760405162461bcd60e51b8152600401610759906136af565b600a548114610abe5760405162461bcd60e51b8152600401610759906139cf565b610ac781612510565b610ae35760405162461bcd60e51b81526004016107599061375e565b600754341015610b055760405162461bcd60e51b815260040161075990613594565b6000818152600d6020908152604080832033845290915290206001015415610b3f5760405162461bcd60e51b815260040161075990613917565b6000818152600e602052604090206008810154349190610b60908390613b37565b60088201556009810154610b75908390613b37565b60098201556000838152600d6020908152604080832033808552908352818420805460ff191681556001808201889055600f855283862080549182018155865293909420909201869055518591907f438122d8cff518d18388099a5181f0d17a12b4f1b55faedf6e4a6acee0060c1290610bf0908790613076565b60405180910390a35050600180555050565b600054600160a01b900460ff1690565b600c5481565b60026001541415610c3b5760405162461bcd60e51b815260040161075990613998565b6002600155610c493361250a565b15610c665760405162461bcd60e51b81526004016107599061331a565b333214610c855760405162461bcd60e51b8152600401610759906136af565b6000805b828110156110e257600e6000858584818110610cb557634e487b7160e01b600052603260045260246000fd5b9050602002013581526020019081526020016000206001015460001415610cee5760405162461bcd60e51b8152600401610759906138e8565b600e6000858584818110610d1257634e487b7160e01b600052603260045260246000fd5b905060200201358152602001908152602001600020600301544211610d495760405162461bcd60e51b8152600401610759906135e0565b6000600e6000868685818110610d6f57634e487b7160e01b600052603260045260246000fd5b60209081029290920135835250810191909152604001600020600d015460ff1615610f4e57610dc4858584818110610db757634e487b7160e01b600052603260045260246000fd5b9050602002013533611c13565b610de05760405162461bcd60e51b815260040161075990613399565b6000600e6000878786818110610e0657634e487b7160e01b600052603260045260246000fd5b905060200201358152602001908152602001600020604051806101c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b8201548152602001600c8201548152602001600d820160009054906101000a900460ff1615151515815250509050806101600151816101800151600d6000898988818110610ef657634e487b7160e01b600052603260045260246000fd5b9050602002013581526020019081526020016000206000336001600160a01b03166001600160a01b0316815260200190815260200160002060010154610f3c9190613b6f565b610f469190613b4f565b915050610ffd565b610f7e858584818110610f7157634e487b7160e01b600052603260045260246000fd5b90506020020135336115ef565b610f9a5760405162461bcd60e51b8152600401610759906130e0565b600d6000868685818110610fbe57634e487b7160e01b600052603260045260246000fd5b9050602002013581526020019081526020016000206000336001600160a01b03166001600160a01b031681526020019081526020016000206001015490505b6001600d600087878681811061102357634e487b7160e01b600052603260045260246000fd5b6020908102929092013583525081810192909252604090810160009081203382529092529020600201805460ff19169115159190911790556110658184613b37565b925084848381811061108757634e487b7160e01b600052603260045260246000fd5b90506020020135336001600160a01b03167f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf7836040516110c79190613076565b60405180910390a350806110da81613bd5565b915050610c89565b5080156110f3576110f3338261239a565b50506001805550565b611104610c02565b6111205760405162461bcd60e51b8152600401610759906130b2565b6003546001600160a01b0316331461114a5760405162461bcd60e51b815260040161075990613a72565b806111675760405162461bcd60e51b815260040161075990613816565b6007819055600a546040517f90eb87c560a0213754ceb3a7fa3012f01acab0a35602c1e1995adf69dabc9d509061119f908490613076565b60405180910390a250565b6111b261257b565b6001600160a01b03166111c361194f565b6001600160a01b0316146111e95760405162461bcd60e51b815260040161075990613729565b6001600160a01b03811661120f5760405162461bcd60e51b81526004016107599061367f565b600380546001600160a01b0319166001600160a01b0383161790556040517f137b621413925496477d46e5055ac0d56178bdd724ba8bf843afceef18268ba39061125a908390612f78565b60405180910390a150565b61126d61257b565b6001600160a01b031661127e61194f565b6001600160a01b0316146112a45760405162461bcd60e51b815260040161075990613729565b6112ae600061257f565b565b600d60209081526000928352604080842090915290825290208054600182015460029092015460ff91821692911683565b600a5481565b6112ef610c02565b61130b5760405162461bcd60e51b8152600401610759906130b2565b6003546001600160a01b031633146113355760405162461bcd60e51b815260040161075990613a72565b6103e88111156113575760405162461bcd60e51b815260040161075990613117565b6008819055600a546040517fb1c4ee38d35556741133da7ff9b6f7ab0fa88d0406133126ff128f635490a8579061119f908490613076565b4290565b61139b610c02565b6113b75760405162461bcd60e51b8152600401610759906130b2565b6003546001600160a01b031633146113e15760405162461bcd60e51b815260040161075990613a72565b6001600160a01b0381166114075760405162461bcd60e51b81526004016107599061367f565b6000600b55600280546001600160a01b0319166001600160a01b03838116919091179182905560408051633fabe5a360e21b81529051929091169163feaf968c9160048082019260a092909190829003018186803b15801561146857600080fd5b505afa15801561147c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a09190612ee8565b50505050507fb3eacd0e351fafdfefdec84e1cd19679b38dbcd63ea7c2c24da17fd2bc3b3c0e8160405161125a9190612f78565b6114dc610c02565b156114f95760405162461bcd60e51b815260040161075990613655565b6004546001600160a01b031633146115235760405162461bcd60e51b815260040161075990613a4c565b600254600160a81b900460ff1680156115455750600254600160a01b900460ff165b6115615760405162461bcd60e51b815260040161075990613845565b60008061156c6125cf565b91509150816001600160501b0316600b81905550611596600a54836001600160501b0316836126cc565b6115b86001600a546115a89190613b8e565b836001600160501b0316836127d9565b6115cf6001600a546115ca9190613b8e565b6128d6565b600a546115dd906001613b37565b600a8190556115eb90612a2a565b5050565b6000828152600d602090815260408083206001600160a01b0385168452909152808220815160608101909252805483929190829060ff16600181111561164557634e487b7160e01b600052602160045260246000fd5b600181111561166457634e487b7160e01b600052602160045260246000fd5b815260018281015460208084019190915260029384015460ff908116151560409485015260008a8152600e835284902084516101c08101865281548152938101549284019290925293810154928201929092526003820154606082015260048201546080820152600582015460a0820152600682015460c0820152600782015460e082015260088201546101008201526009820154610120820152600a820154610140820152600b820154610160820152600c820154610180820152600d909101549091161580156101a08301819052929350909161174557508160400151155b80156117615750600554816060015161175e9190613b37565b42115b80156117705750602082015115155b925050505b92915050565b60065481565b6002546001600160a01b031681565b611798610c02565b156117b55760405162461bcd60e51b815260040161075990613655565b6003546001600160a01b03163314806117d857506004546001600160a01b031633145b6117f45760405162461bcd60e51b81526004016107599061346d565b6117fc612add565b600a546040517f68b095021b1f40fe513109f513c66692f0b3219aee674a69f4efc57badb8201d90600090a2565b611832610c02565b61184e5760405162461bcd60e51b8152600401610759906130b2565b6003546001600160a01b031633146118785760405162461bcd60e51b815260040161075990613a72565b8082106118975760405162461bcd60e51b815260040161075990613348565b600582905560068190556040517fe60149e0431fec12df63dfab5fce2a9cefe9a4d3df5f41cb626f579ae1f2b91a906118d39084908490613a95565b60405180910390a15050565b600e60205260009081526040902080546001820154600283015460038401546004850154600586015460068701546007880154600889015460098a0154600a8b0154600b8c0154600c8d0154600d909d01549b9c9a9b999a98999798969795969495939492939192909160ff168e565b6000546001600160a01b031690565b6001600160a01b0383166000908152600f602052604081205460609182918490611989908790613b8e565b8111156119b7576001600160a01b0387166000908152600f60205260409020546119b4908790613b8e565b90505b60008167ffffffffffffffff8111156119e057634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611a09578160200160208202803683370190505b50905060008267ffffffffffffffff811115611a3557634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611a6e57816020015b611a5b612d30565b815260200190600190039081611a535790505b50905060005b83811015611bf4576001600160a01b038a166000908152600f60205260409020611a9e828b613b37565b81548110611abc57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154838281518110611ae757634e487b7160e01b600052603260045260246000fd5b602002602001018181525050600d6000848381518110611b1757634e487b7160e01b600052603260045260246000fd5b602090810291909101810151825281810192909252604090810160009081206001600160a01b038e168252909252908190208151606081019092528054829060ff166001811115611b7857634e487b7160e01b600052602160045260246000fd5b6001811115611b9757634e487b7160e01b600052602160045260246000fd5b81526001820154602082015260029091015460ff1615156040909101528251839083908110611bd657634e487b7160e01b600052603260045260246000fd5b60200260200101819052508080611bec90613bd5565b915050611a74565b508181611c01858b613b37565b95509550955050505093509350939050565b6000828152600d602090815260408083206001600160a01b0385168452909152808220815160608101909252805483929190829060ff166001811115611c6957634e487b7160e01b600052602160045260246000fd5b6001811115611c8857634e487b7160e01b600052602160045260246000fd5b815260018281015460208084019190915260029384015460ff908116151560409485015260008a8152600e835284902084516101c081018652815481529381015492840192909252938101549282019290925260038201546060820152600482015460808201819052600583015460a08301819052600684015460c0840152600784015460e084015260088401546101008401526009840154610120840152600a840154610140840152600b840154610160840152600c840154610180840152600d9093015490931615156101a08201529293501415611d6d57600092505050611775565b806101a001518015611d825750602082015115155b8015611d9057508160400151155b8015611770575080608001518160a00151138015611dce5750600082516001811115611dcc57634e487b7160e01b600052602160045260246000fd5b145b80611770575080608001518160a001511280156117705750600182516001811115611e0957634e487b7160e01b600052602160045260246000fd5b1495945050505050565b611e1b610c02565b15611e385760405162461bcd60e51b815260040161075990613655565b60026001541415611e5b5760405162461bcd60e51b815260040161075990613998565b6002600155611e693361250a565b15611e865760405162461bcd60e51b81526004016107599061331a565b333214611ea55760405162461bcd60e51b8152600401610759906136af565b600a548114611ec65760405162461bcd60e51b8152600401610759906139cf565b611ecf81612510565b611eeb5760405162461bcd60e51b81526004016107599061375e565b600754341015611f0d5760405162461bcd60e51b815260040161075990613594565b6000818152600d6020908152604080832033845290915290206001015415611f475760405162461bcd60e51b815260040161075990613917565b6000818152600e602052604090206008810154349190611f68908390613b37565b6008820155600a810154611f7d908390613b37565b600a8201556000838152600d6020908152604080832033808552908352818420805460ff191660019081178255808201889055600f855283862080549182018155865293909420909201869055518591907f0d8c1fe3e67ab767116a81f122b83c2557a8c2564019cb7c4f83de1aeb1f1f0d90610bf0908790613076565b61200361257b565b6001600160a01b031661201461194f565b6001600160a01b03161461203a5760405162461bcd60e51b815260040161075990613729565b61204e6001600160a01b0383163383612b3e565b816001600160a01b03167f14f11966a996e0629572e51064726d2057a80fbd34efc066682c06a71dbb6e98826040516120879190613076565b60405180910390a25050565b6003546001600160a01b031633146120bd5760405162461bcd60e51b815260040161075990613a72565b6001600160a01b0381166120e35760405162461bcd60e51b81526004016107599061367f565b600480546001600160a01b0319166001600160a01b0383161790556040517fc47d127c07bdd56c5ccba00463ce3bd3c1bca71b4670eea6e5d0c02e4aa156e29061125a908390612f78565b60085481565b61213c610c02565b6121585760405162461bcd60e51b8152600401610759906130b2565b6003546001600160a01b031633146121825760405162461bcd60e51b815260040161075990613a72565b600c8190556040517f93ccaceac092ffb842c46b8718667a13a80e9058dcd0bd403d0b47215b30da079061125a908390613076565b6121bf610c02565b156121dc5760405162461bcd60e51b815260040161075990613655565b6004546001600160a01b031633146122065760405162461bcd60e51b815260040161075990613a4c565b600254600160a81b900460ff1661222f5760405162461bcd60e51b815260040161075990613191565b600254600160a01b900460ff16156122595760405162461bcd60e51b815260040161075990613499565b6000806122646125cf565b91509150816001600160501b0316600b8190555061228e600a54836001600160501b0316836126cc565b600a5461229c906001613b37565b600a8190556122aa9061248c565b50506002805460ff60a01b1916600160a01b179055565b600f60205281600052604060002081815481106122dd57600080fd5b90600052602060002001600091509150505481565b60055481565b600b5481565b6103e881565b61230c61257b565b6001600160a01b031661231d61194f565b6001600160a01b0316146123435760405162461bcd60e51b815260040161075990613729565b6001600160a01b0381166123695760405162461bcd60e51b8152600401610759906131e2565b6123728161257f565b50565b600254600160a81b900460ff1681565b60075481565b6003546001600160a01b031681565b6000826001600160a01b0316826040516123b390612f75565b60006040518083038185875af1925050503d80600081146123f0576040519150601f19603f3d011682016040523d82523d6000602084013e6123f5565b606091505b50509050806124165760405162461bcd60e51b8152600401610759906136e6565b505050565b612423610c02565b61243f5760405162461bcd60e51b8152600401610759906130b2565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61247561257b565b6040516124829190612f78565b60405180910390a1565b6000818152600e6020526040902042600182018190556006546124ae91613b37565b6002808301919091556006546124c391613b6f565b6124cd9042613b37565b600382015581815560006008820181905560405183917f939f42374aa9bf1d8d8cd56d8a9110cb040cd8dfeae44080c6fcf2645e51b45291a25050565b3b151590565b6000818152600e60205260408120600101541580159061254057506000828152600e602052604090206002015415155b801561255c57506000828152600e602052604090206001015442115b80156117755750506000908152600e6020526040902060020154421090565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000600c54426125e29190613b37565b90506000806000600260009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561263757600080fd5b505afa15801561264b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061266f9190612ee8565b5093505092509250838111156126975760405162461bcd60e51b8152600401610759906139fe565b600b54836001600160501b0316116126c15760405162461bcd60e51b815260040161075990613276565b509093509150509091565b6000838152600e60205260409020600101546126fa5760405162461bcd60e51b815260040161075990613146565b6000838152600e602052604090206002015442101561272b5760405162461bcd60e51b8152600401610759906133c9565b6005546000848152600e602052604090206002015461274a9190613b37565b4211156127695760405162461bcd60e51b81526004016107599061360d565b6000838152600e602052604090206006546127849042613b37565b60038201556004810182905560068101839055604051839085907f482e76a65b448a42deef26e99e58fb20c85e26f075defff8df6aa80459b39006906127cb908690613076565b60405180910390a350505050565b6000838152600e60205260409020600201546128075760405162461bcd60e51b81526004016107599061378a565b6000838152600e60205260409020600301544210156128385760405162461bcd60e51b815260040161075990613521565b6005546000848152600e60205260409020600301546128579190613b37565b4211156128765760405162461bcd60e51b8152600401610759906132d3565b6000838152600e6020526040908190206005810183905560078101849055600d8101805460ff191660011790559051839085907fb6ff1fe915db84788cbbbc017f0d2bef9485fad9fd0bd8ce9340fde0d8410dd8906127cb908690613076565b6000818152600e60205260409020600b015415801561290457506000818152600e60205260409020600c0154155b6129205760405162461bcd60e51b815260040161075990613568565b6000818152600e6020526040812060048101546005820154919291829182911315612984578360090154925061271060085485600801546129619190613b6f565b61296b9190613b4f565b915081846008015461297d9190613b8e565b90506129bd565b8360040154846005015412156129b05783600a0154925061271060085485600801546129619190613b6f565b5050506008810154600090815b600b8401839055600c8401819055600980548391906000906129e0908490613b37565b92505081905550847f6dfdfcb09c8804d0058826cd2539f1acfbe3cb887c9be03d928035bce0f1a58d848385604051612a1b93929190613aa3565b60405180910390a25050505050565b600254600160a81b900460ff16612a535760405162461bcd60e51b815260040161075990613191565b600e6000612a62600284613b8e565b81526020019081526020016000206003015460001415612a945760405162461bcd60e51b815260040161075990613228565b600e6000612aa3600284613b8e565b815260200190815260200160002060030154421015612ad45760405162461bcd60e51b815260040161075990613410565b6123728161248c565b612ae5610c02565b15612b025760405162461bcd60e51b815260040161075990613655565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861247561257b565b6124168363a9059cbb60e01b8484604051602401612b5d929190612f8c565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526000612be4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612c1e9092919063ffffffff16565b8051909150156124165780806020019051810190612c029190612e64565b6124165760405162461bcd60e51b81526004016107599061394e565b6060612c2d8484600085612c37565b90505b9392505050565b606082471015612c595760405162461bcd60e51b8152600401610759906134db565b612c628561250a565b612c7e5760405162461bcd60e51b8152600401610759906138b1565b600080866001600160a01b03168587604051612c9a9190612f59565b60006040518083038185875af1925050503d8060008114612cd7576040519150601f19603f3d011682016040523d82523d6000602084013e612cdc565b606091505b5091509150612cec828286612cf7565b979650505050505050565b60608315612d06575081612c30565b825115612d165782518084602001fd5b8160405162461bcd60e51b8152600401610759919061307f565b6040805160608101909152806000815260006020820181905260409091015290565b80356001600160a01b038116811461082757600080fd5b80516001600160501b038116811461082757600080fd5b600060208284031215612d91578081fd5b612c3082612d52565b60008060408385031215612dac578081fd5b612db583612d52565b946020939093013593505050565b600080600060608486031215612dd7578081fd5b612de084612d52565b95602085013595506040909401359392505050565b60008060208385031215612e07578182fd5b823567ffffffffffffffff80821115612e1e578384fd5b818501915085601f830112612e31578384fd5b813581811115612e3f578485fd5b8660208083028501011115612e52578485fd5b60209290920196919550909350505050565b600060208284031215612e75578081fd5b81518015158114612c30578182fd5b600060208284031215612e95578081fd5b5035919050565b60008060408385031215612eae578182fd5b82359150612ebe60208401612d52565b90509250929050565b60008060408385031215612ed9578182fd5b50508035926020909101359150565b600080600080600060a08688031215612eff578081fd5b612f0886612d69565b9450602086015193506040860151925060608601519150612f2b60808701612d69565b90509295509295909350565b60028110612f5557634e487b7160e01b600052602160045260246000fd5b9052565b60008251612f6b818460208701613ba5565b9190910192915050565b90565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b60608082528451828201819052600091906020906080850190828901855b82811015612fdf57815184529284019290840190600101612fc3565b50505084810382860152865180825287830191830190855b8181101561303057835161300c848251612f37565b80860151848701526040908101511515908401529284019291850191600101612ff7565b505080945050505050826040830152949350505050565b901515815260200190565b606081016130608286612f37565b8360208301528215156040830152949350505050565b90815260200190565b600060208252825180602084015261309e816040850160208701613ba5565b601f01601f19169190910160400192915050565b60208082526014908201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604082015260600190565b60208082526017908201527f4e6f7420656c696769626c6520666f7220726566756e64000000000000000000604082015260600190565b6020808252601590820152740a8e4cac2e6eae4f240cccaca40e8dede40d0d2ced605b1b604082015260600190565b6020808252602b908201527f43616e206f6e6c79206c6f636b20726f756e6420616674657220726f756e642060408201526a1a185cc81cdd185c9d195960aa1b606082015260800190565b60208082526031908201527f43616e206f6e6c792072756e2061667465722067656e657369735374617274526040820152701bdd5b99081a5cc81d1c9a59d9d95c9959607a1b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252602e908201527f43616e206f6e6c7920737461727420726f756e6420616674657220726f756e6460408201526d081b8b4c881a185cc8195b99195960921b606082015260800190565b6020808252603d908201527f4f7261636c652075706461746520726f756e644964206d757374206265206c6160408201527f72676572207468616e206f7261636c654c6174657374526f756e644964000000606082015260800190565b60208082526027908201527f43616e206f6e6c7920656e6420726f756e642077697468696e206275666665726040820152665365636f6e647360c81b606082015260800190565b60208082526014908201527310dbdb9d1c9858dd081b9bdd08185b1b1bddd95960621b604082015260600190565b60208082526031908201527f6275666665725365636f6e6473206d75737420626520696e666572696f7220746040820152706f20696e74657276616c5365636f6e647360781b606082015260800190565b6020808252601690820152754e6f7420656c696769626c6520666f7220636c61696d60501b604082015260600190565b60208082526027908201527f43616e206f6e6c79206c6f636b20726f756e64206166746572206c6f636b546960408201526606d657374616d760cc1b606082015260800190565b60208082526037908201527f43616e206f6e6c79207374617274206e657720726f756e64206166746572207260408201527f6f756e64206e2d3220636c6f736554696d657374616d70000000000000000000606082015260800190565b6020808252601290820152712737ba1037b832b930ba37b917b0b236b4b760711b604082015260600190565b60208082526022908201527f43616e206f6e6c792072756e2067656e657369734c6f636b526f756e64206f6e604082015261636560f01b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b60208082526027908201527f43616e206f6e6c7920656e6420726f756e6420616674657220636c6f7365546960408201526606d657374616d760cc1b606082015260800190565b60208082526012908201527114995dd85c991cc818d85b18dd5b185d195960721b604082015260600190565b6020808252602c908201527f42657420616d6f756e74206d7573742062652067726561746572207468616e2060408201526b1b5a5b90995d105b5bdd5b9d60a21b606082015260800190565b602080825260139082015272149bdd5b99081a185cc81b9bdd08195b991959606a1b604082015260600190565b60208082526028908201527f43616e206f6e6c79206c6f636b20726f756e642077697468696e206275666665604082015267725365636f6e647360c01b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526016908201527543616e6e6f74206265207a65726f206164647265737360501b604082015260600190565b6020808252601a908201527f50726f787920636f6e7472616374206e6f7420616c6c6f776564000000000000604082015260600190565b60208082526023908201527f5472616e7366657248656c7065723a204f6e655f5452414e534645525f46414960408201526213115160ea1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260129082015271526f756e64206e6f74206265747461626c6560701b604082015260600190565b60208082526029908201527f43616e206f6e6c7920656e6420726f756e6420616674657220726f756e642068604082015268185cc81b1bd8dad95960ba1b606082015260800190565b60208082526023908201527f43616e206f6e6c792072756e2067656e657369735374617274526f756e64206f6040820152626e636560e81b606082015260800190565b60208082526015908201527404d757374206265207375706572696f7220746f203605c1b604082015260600190565b60208082526046908201527f43616e206f6e6c792072756e2061667465722067656e6573697353746172745260408201527f6f756e6420616e642067656e657369734c6f636b526f756e642069732074726960608201526519d9d95c995960d21b608082015260a00190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b602080825260159082015274149bdd5b99081a185cc81b9bdd081cdd185c9d1959605a1b604082015260600190565b6020808252601b908201527f43616e206f6e6c7920626574206f6e63652070657220726f756e640000000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526015908201527442657420697320746f6f206561726c792f6c61746560581b604082015260600190565b6020808252602e908201527f4f7261636c6520757064617465206578636565646564206d61782074696d657360408201526d74616d7020616c6c6f77616e636560901b606082015260800190565b6020808252600c908201526b2737ba1037b832b930ba37b960a11b604082015260600190565b6020808252600990820152682737ba1030b236b4b760b91b604082015260600190565b918252602082015260400190565b9283526020830191909152604082015260600190565b9d8e5260208e019c909c5260408d019a909a5260608c019890985260808b019690965260a08a019490945260c089019290925260e088015261010087015261012086015261014085015261016084015261018083015215156101a08201526101c00190565b6001600160501b03929092168252602082015260400190565b60008219821115613b4a57613b4a613bf0565b500190565b600082613b6a57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615613b8957613b89613bf0565b500290565b600082821015613ba057613ba0613bf0565b500390565b60005b83811015613bc0578181015183820152602001613ba8565b83811115613bcf576000848401525b50505050565b6000600019821415613be957613be9613bf0565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212208cdf84d51a04afc9f952857c3770c1534875e430725c5ddb5c71f2daced3dbc864736f6c63430008000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3E5F CODESIZE SUB DUP1 PUSH3 0x3E5F DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x42 SWAP2 PUSH3 0x162 JUMP JUMPDEST PUSH3 0x56 PUSH3 0x50 PUSH3 0xF1 JUMP JUMPDEST PUSH3 0xF5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP1 SSTORE PUSH2 0x3E8 DUP2 GT ISZERO PUSH3 0x95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x8C SWAP1 PUSH3 0x1DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP11 DUP12 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD DUP3 AND SWAP9 DUP11 AND SWAP9 SWAP1 SWAP9 OR SWAP1 SWAP8 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP1 SWAP8 AND SWAP6 SWAP1 SWAP8 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP5 SSTORE PUSH1 0x6 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x5 SSTORE PUSH1 0x7 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xC SSTORE PUSH1 0x8 SSTORE PUSH3 0x213 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH3 0x17F JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH3 0x18A DUP10 PUSH3 0x145 JUMP JUMPDEST SWAP8 POP PUSH3 0x19A PUSH1 0x20 DUP11 ADD PUSH3 0x145 JUMP JUMPDEST SWAP7 POP PUSH3 0x1AA PUSH1 0x40 DUP11 ADD PUSH3 0x145 JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD MLOAD SWAP5 POP PUSH1 0x80 DUP10 ADD MLOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD MLOAD SWAP3 POP PUSH1 0xC0 DUP10 ADD MLOAD SWAP2 POP PUSH1 0xE0 DUP10 ADD MLOAD SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH32 0x54726561737572792066656520746F6F20686967680000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH2 0x3C3C DUP1 PUSH3 0x223 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x266 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D1CD04F GT PUSH2 0x144 JUMPI DUP1 PUSH4 0xCC32D176 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xEC324703 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xEC324703 EQ PUSH2 0x6AD JUMPI DUP1 PUSH4 0xF2B3C809 EQ PUSH2 0x6C2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6D7 JUMPI DUP1 PUSH4 0xF7FDEC28 EQ PUSH2 0x6F7 JUMPI DUP1 PUSH4 0xFA968EEA EQ PUSH2 0x70C JUMPI DUP1 PUSH4 0xFC6F9468 EQ PUSH2 0x721 JUMPI PUSH2 0x266 JUMP JUMPDEST DUP1 PUSH4 0xCC32D176 EQ PUSH2 0x62E JUMPI DUP1 PUSH4 0xCF2F5039 EQ PUSH2 0x643 JUMPI DUP1 PUSH4 0xD9D55EAC EQ PUSH2 0x663 JUMPI DUP1 PUSH4 0xDD1F7596 EQ PUSH2 0x678 JUMPI DUP1 PUSH4 0xEABA2361 EQ PUSH2 0x698 JUMPI PUSH2 0x266 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x577 JUMPI DUP1 PUSH4 0x951FD600 EQ PUSH2 0x58C JUMPI DUP1 PUSH4 0xA0C7F71C EQ PUSH2 0x5BB JUMPI DUP1 PUSH4 0xAA6B873A EQ PUSH2 0x5DB JUMPI DUP1 PUSH4 0xB29A8140 EQ PUSH2 0x5EE JUMPI DUP1 PUSH4 0xB3AB15FB EQ PUSH2 0x60E JUMPI PUSH2 0x266 JUMP JUMPDEST DUP1 PUSH4 0x7D1CD04F EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x4F3 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x508 JUMPI DUP1 PUSH4 0x890DC766 EQ PUSH2 0x51D JUMPI DUP1 PUSH4 0x8C65C81F EQ PUSH2 0x53D JUMPI PUSH2 0x266 JUMP JUMPDEST DUP1 PUSH4 0x6BA4C138 GT PUSH2 0x1DD JUMPI DUP1 PUSH4 0x76671808 GT PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x76671808 EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0x77E741C7 EQ PUSH2 0x454 JUMPI DUP1 PUSH4 0x796B89B9 EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0x7ADBF973 EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0x7B3205F5 EQ PUSH2 0x4A9 JUMPI DUP1 PUSH4 0x7BF41254 EQ PUSH2 0x4BE JUMPI PUSH2 0x266 JUMP JUMPDEST DUP1 PUSH4 0x6BA4C138 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0x6C188593 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0x704B6C02 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x7285C58B EQ PUSH2 0x410 JUMPI PUSH2 0x266 JUMP JUMPDEST DUP1 PUSH4 0x368ACB09 GT PUSH2 0x22F JUMPI DUP1 PUSH4 0x368ACB09 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x452FD75A EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x57FB096F EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x60554011 EQ PUSH2 0x386 JUMPI PUSH2 0x266 JUMP JUMPDEST DUP1 PUSH3 0x3BDC74 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xF74174F EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x127EFFB2 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x273867D4 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x29B72441 EQ PUSH2 0x2FC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x736 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x3047 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C2 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x2F78 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0x2EA CALLDATASIZE PUSH1 0x4 PUSH2 0x2D80 JUMP JUMPDEST PUSH2 0x80D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x3076 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH2 0x82C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B1E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0x8C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x8CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x961 JUMP JUMPDEST PUSH2 0x280 PUSH2 0x36C CALLDATASIZE PUSH1 0x4 PUSH2 0x2E84 JUMP JUMPDEST PUSH2 0xA0B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0xC02 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0xC12 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x3B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF5 JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x3D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E84 JUMP JUMPDEST PUSH2 0x10FC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x3F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D80 JUMP JUMPDEST PUSH2 0x11AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x1265 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x430 PUSH2 0x42B CALLDATASIZE PUSH1 0x4 PUSH2 0x2E9C JUMP JUMPDEST PUSH2 0x12B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3052 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0x12E1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x460 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x46F CALLDATASIZE PUSH1 0x4 PUSH2 0x2E84 JUMP JUMPDEST PUSH2 0x12E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0x138F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x4A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D80 JUMP JUMPDEST PUSH2 0x1393 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x14D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x4D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E9C JUMP JUMPDEST PUSH2 0x15EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0x177B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C2 PUSH2 0x1781 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x514 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x1790 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x538 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC7 JUMP JUMPDEST PUSH2 0x182A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55D PUSH2 0x558 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E84 JUMP JUMPDEST PUSH2 0x18DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP15 SWAP14 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3AB9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C2 PUSH2 0x194F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x598 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5AC PUSH2 0x5A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DC3 JUMP JUMPDEST PUSH2 0x195E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2FA5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x5D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E9C JUMP JUMPDEST PUSH2 0x1C13 JUMP JUMPDEST PUSH2 0x280 PUSH2 0x5E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E84 JUMP JUMPDEST PUSH2 0x1E13 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x609 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9A JUMP JUMPDEST PUSH2 0x1FFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x629 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D80 JUMP JUMPDEST PUSH2 0x2093 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0x212E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x65E CALLDATASIZE PUSH1 0x4 PUSH2 0x2E84 JUMP JUMPDEST PUSH2 0x2134 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x21B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x684 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0x693 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9A JUMP JUMPDEST PUSH2 0x22C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0x22F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0x22F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0x22FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x6F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D80 JUMP JUMPDEST PUSH2 0x2304 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x2375 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0x2385 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C2 PUSH2 0x238B JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x762 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3998 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x791 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3A72 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x0 SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD PUSH2 0x7B0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0x239A JUMP JUMPDEST PUSH32 0xB9197C6B8E21274BD1E2D9C956A88AF5CFEE510F630FAB3F046300F88B422361 DUP2 PUSH1 0x40 MLOAD PUSH2 0x7DF SWAP2 SWAP1 PUSH2 0x3076 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x87F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x893 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8B7 SWAP2 SWAP1 PUSH2 0x2EE8 JUMP JUMPDEST POP POP PUSH1 0xB SLOAD SWAP3 SWAP6 POP SWAP2 SWAP4 POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x8D7 PUSH2 0xC02 JUMP JUMPDEST PUSH2 0x8F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x30B2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x91D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3A72 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH2 0x933 PUSH2 0x241B JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH32 0xAAA520FDD7D2C83061D632FA017B0432407E798818AF63EA908589FCEDA39AB7 SWAP1 PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x969 PUSH2 0xC02 JUMP JUMPDEST ISZERO PUSH2 0x986 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3655 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3A4C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x9DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x37D3 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x9E8 SWAP1 PUSH1 0x1 PUSH2 0x3B37 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH2 0x9F6 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xA13 PUSH2 0xC02 JUMP JUMPDEST ISZERO PUSH2 0xA30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3655 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xA53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3998 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0xA61 CALLER PUSH2 0x250A JUMP JUMPDEST ISZERO PUSH2 0xA7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x331A JUMP JUMPDEST CALLER ORIGIN EQ PUSH2 0xA9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x36AF JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 EQ PUSH2 0xABE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x39CF JUMP JUMPDEST PUSH2 0xAC7 DUP2 PUSH2 0x2510 JUMP JUMPDEST PUSH2 0xAE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x375E JUMP JUMPDEST PUSH1 0x7 SLOAD CALLVALUE LT ISZERO PUSH2 0xB05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3594 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0xB3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3917 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 DUP2 ADD SLOAD CALLVALUE SWAP2 SWAP1 PUSH2 0xB60 SWAP1 DUP4 SWAP1 PUSH2 0x3B37 JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0xB75 SWAP1 DUP4 SWAP1 PUSH2 0x3B37 JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH1 0x1 DUP1 DUP3 ADD DUP9 SWAP1 SSTORE PUSH1 0xF DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE DUP7 MSTORE SWAP4 SWAP1 SWAP5 KECCAK256 SWAP1 SWAP3 ADD DUP7 SWAP1 SSTORE MLOAD DUP6 SWAP2 SWAP1 PUSH32 0x438122D8CFF518D18388099A5181F0D17A12B4F1B55FAEDF6E4A6ACEE0060C12 SWAP1 PUSH2 0xBF0 SWAP1 DUP8 SWAP1 PUSH2 0x3076 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xC3B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3998 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0xC49 CALLER PUSH2 0x250A JUMP JUMPDEST ISZERO PUSH2 0xC66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x331A JUMP JUMPDEST CALLER ORIGIN EQ PUSH2 0xC85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x36AF JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x10E2 JUMPI PUSH1 0xE PUSH1 0x0 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xCB5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xCEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x38E8 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xD12 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP GT PUSH2 0xD49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x35E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xD6F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 PUSH1 0xD ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF4E JUMPI PUSH2 0xDC4 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xDB7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD CALLER PUSH2 0x1C13 JUMP JUMPDEST PUSH2 0xDE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3399 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP8 DUP8 DUP7 DUP2 DUP2 LT PUSH2 0xE06 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH2 0x160 ADD MLOAD DUP2 PUSH2 0x180 ADD MLOAD PUSH1 0xD PUSH1 0x0 DUP10 DUP10 DUP9 DUP2 DUP2 LT PUSH2 0xEF6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xF3C SWAP2 SWAP1 PUSH2 0x3B6F JUMP JUMPDEST PUSH2 0xF46 SWAP2 SWAP1 PUSH2 0x3B4F JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFFD JUMP JUMPDEST PUSH2 0xF7E DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xF71 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD CALLER PUSH2 0x15EF JUMP JUMPDEST PUSH2 0xF9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x30E0 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xFBE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH1 0x0 DUP8 DUP8 DUP7 DUP2 DUP2 LT PUSH2 0x1023 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1065 DUP2 DUP5 PUSH2 0x3B37 JUMP JUMPDEST SWAP3 POP DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x1087 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x10C7 SWAP2 SWAP1 PUSH2 0x3076 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP DUP1 PUSH2 0x10DA DUP2 PUSH2 0x3BD5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC89 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x10F3 JUMPI PUSH2 0x10F3 CALLER DUP3 PUSH2 0x239A JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1104 PUSH2 0xC02 JUMP JUMPDEST PUSH2 0x1120 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x30B2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x114A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3A72 JUMP JUMPDEST DUP1 PUSH2 0x1167 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3816 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH32 0x90EB87C560A0213754CEB3A7FA3012F01ACAB0A35602C1E1995ADF69DABC9D50 SWAP1 PUSH2 0x119F SWAP1 DUP5 SWAP1 PUSH2 0x3076 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x11B2 PUSH2 0x257B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11C3 PUSH2 0x194F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x11E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3729 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x120F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x367F JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x137B621413925496477D46E5055AC0D56178BDD724BA8BF843AFCEEF18268BA3 SWAP1 PUSH2 0x125A SWAP1 DUP4 SWAP1 PUSH2 0x2F78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x126D PUSH2 0x257B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x127E PUSH2 0x194F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x12A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3729 JUMP JUMPDEST PUSH2 0x12AE PUSH1 0x0 PUSH2 0x257F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP3 SWAP2 AND DUP4 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x12EF PUSH2 0xC02 JUMP JUMPDEST PUSH2 0x130B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x30B2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1335 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3A72 JUMP JUMPDEST PUSH2 0x3E8 DUP2 GT ISZERO PUSH2 0x1357 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3117 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH32 0xB1C4EE38D35556741133DA7FF9B6F7AB0FA88D0406133126FF128F635490A857 SWAP1 PUSH2 0x119F SWAP1 DUP5 SWAP1 PUSH2 0x3076 JUMP JUMPDEST TIMESTAMP SWAP1 JUMP JUMPDEST PUSH2 0x139B PUSH2 0xC02 JUMP JUMPDEST PUSH2 0x13B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x30B2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3A72 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1407 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x367F JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP1 SWAP2 AND SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x147C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14A0 SWAP2 SWAP1 PUSH2 0x2EE8 JUMP JUMPDEST POP POP POP POP POP PUSH32 0xB3EACD0E351FAFDFEFDEC84E1CD19679B38DBCD63EA7C2C24DA17FD2BC3B3C0E DUP2 PUSH1 0x40 MLOAD PUSH2 0x125A SWAP2 SWAP1 PUSH2 0x2F78 JUMP JUMPDEST PUSH2 0x14DC PUSH2 0xC02 JUMP JUMPDEST ISZERO PUSH2 0x14F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3655 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1523 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3A4C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1545 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x1561 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3845 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x156C PUSH2 0x25CF JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x1596 PUSH1 0xA SLOAD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP4 PUSH2 0x26CC JUMP JUMPDEST PUSH2 0x15B8 PUSH1 0x1 PUSH1 0xA SLOAD PUSH2 0x15A8 SWAP2 SWAP1 PUSH2 0x3B8E JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP4 PUSH2 0x27D9 JUMP JUMPDEST PUSH2 0x15CF PUSH1 0x1 PUSH1 0xA SLOAD PUSH2 0x15CA SWAP2 SWAP1 PUSH2 0x3B8E JUMP JUMPDEST PUSH2 0x28D6 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x15DD SWAP1 PUSH1 0x1 PUSH2 0x3B37 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH2 0x15EB SWAP1 PUSH2 0x2A2A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP4 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1645 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1664 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x1 DUP3 DUP2 ADD SLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 SWAP4 DUP5 ADD SLOAD PUSH1 0xFF SWAP1 DUP2 AND ISZERO ISZERO PUSH1 0x40 SWAP5 DUP6 ADD MSTORE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0xE DUP4 MSTORE DUP5 SWAP1 KECCAK256 DUP5 MLOAD PUSH2 0x1C0 DUP2 ADD DUP7 MSTORE DUP2 SLOAD DUP2 MSTORE SWAP4 DUP2 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP4 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x8 DUP3 ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x9 DUP3 ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0xA DUP3 ADD SLOAD PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0xB DUP3 ADD SLOAD PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0xC DUP3 ADD SLOAD PUSH2 0x180 DUP3 ADD MSTORE PUSH1 0xD SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 AND ISZERO DUP1 ISZERO PUSH2 0x1A0 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH2 0x1745 JUMPI POP DUP2 PUSH1 0x40 ADD MLOAD ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1761 JUMPI POP PUSH1 0x5 SLOAD DUP2 PUSH1 0x60 ADD MLOAD PUSH2 0x175E SWAP2 SWAP1 PUSH2 0x3B37 JUMP JUMPDEST TIMESTAMP GT JUMPDEST DUP1 ISZERO PUSH2 0x1770 JUMPI POP PUSH1 0x20 DUP3 ADD MLOAD ISZERO ISZERO JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1798 PUSH2 0xC02 JUMP JUMPDEST ISZERO PUSH2 0x17B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3655 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x17D8 JUMPI POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x17F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x346D JUMP JUMPDEST PUSH2 0x17FC PUSH2 0x2ADD JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH32 0x68B095021B1F40FE513109F513C66692F0B3219AEE674A69F4EFC57BADB8201D SWAP1 PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x1832 PUSH2 0xC02 JUMP JUMPDEST PUSH2 0x184E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x30B2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1878 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3A72 JUMP JUMPDEST DUP1 DUP3 LT PUSH2 0x1897 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3348 JUMP JUMPDEST PUSH1 0x5 DUP3 SWAP1 SSTORE PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE60149E0431FEC12DF63DFAB5FCE2A9CEFE9A4D3DF5F41CB626F579AE1F2B91A SWAP1 PUSH2 0x18D3 SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH2 0x3A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 DUP9 ADD SLOAD PUSH1 0x8 DUP10 ADD SLOAD PUSH1 0x9 DUP11 ADD SLOAD PUSH1 0xA DUP12 ADD SLOAD PUSH1 0xB DUP13 ADD SLOAD PUSH1 0xC DUP14 ADD SLOAD PUSH1 0xD SWAP1 SWAP14 ADD SLOAD SWAP12 SWAP13 SWAP11 SWAP12 SWAP10 SWAP11 SWAP9 SWAP10 SWAP8 SWAP9 SWAP7 SWAP8 SWAP6 SWAP7 SWAP5 SWAP6 SWAP4 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP15 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x60 SWAP2 DUP3 SWAP2 DUP5 SWAP1 PUSH2 0x1989 SWAP1 DUP8 SWAP1 PUSH2 0x3B8E JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x19B7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x19B4 SWAP1 DUP8 SWAP1 PUSH2 0x3B8E JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19E0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A09 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A35 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A6E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1A5B PUSH2 0x2D30 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1A53 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BF4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1A9E DUP3 DUP12 PUSH2 0x3B37 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1ABC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1AE7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0xD PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B17 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1B78 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1B97 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1BD6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x1BEC SWAP1 PUSH2 0x3BD5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1A74 JUMP JUMPDEST POP DUP2 DUP2 PUSH2 0x1C01 DUP6 DUP12 PUSH2 0x3B37 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP4 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1C69 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1C88 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x1 DUP3 DUP2 ADD SLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 SWAP4 DUP5 ADD SLOAD PUSH1 0xFF SWAP1 DUP2 AND ISZERO ISZERO PUSH1 0x40 SWAP5 DUP6 ADD MSTORE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0xE DUP4 MSTORE DUP5 SWAP1 KECCAK256 DUP5 MLOAD PUSH2 0x1C0 DUP2 ADD DUP7 MSTORE DUP2 SLOAD DUP2 MSTORE SWAP4 DUP2 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP4 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xA0 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x6 DUP5 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 DUP5 ADD SLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x8 DUP5 ADD SLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0x9 DUP5 ADD SLOAD PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0xA DUP5 ADD SLOAD PUSH2 0x140 DUP5 ADD MSTORE PUSH1 0xB DUP5 ADD SLOAD PUSH2 0x160 DUP5 ADD MSTORE PUSH1 0xC DUP5 ADD SLOAD PUSH2 0x180 DUP5 ADD MSTORE PUSH1 0xD SWAP1 SWAP4 ADD SLOAD SWAP1 SWAP4 AND ISZERO ISZERO PUSH2 0x1A0 DUP3 ADD MSTORE SWAP3 SWAP4 POP EQ ISZERO PUSH2 0x1D6D JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x1775 JUMP JUMPDEST DUP1 PUSH2 0x1A0 ADD MLOAD DUP1 ISZERO PUSH2 0x1D82 JUMPI POP PUSH1 0x20 DUP3 ADD MLOAD ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1D90 JUMPI POP DUP2 PUSH1 0x40 ADD MLOAD ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1770 JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH1 0xA0 ADD MLOAD SGT DUP1 ISZERO PUSH2 0x1DCE JUMPI POP PUSH1 0x0 DUP3 MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1DCC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ JUMPDEST DUP1 PUSH2 0x1770 JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH1 0xA0 ADD MLOAD SLT DUP1 ISZERO PUSH2 0x1770 JUMPI POP PUSH1 0x1 DUP3 MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1E09 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E1B PUSH2 0xC02 JUMP JUMPDEST ISZERO PUSH2 0x1E38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3655 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1E5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3998 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0x1E69 CALLER PUSH2 0x250A JUMP JUMPDEST ISZERO PUSH2 0x1E86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x331A JUMP JUMPDEST CALLER ORIGIN EQ PUSH2 0x1EA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x36AF JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 EQ PUSH2 0x1EC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x39CF JUMP JUMPDEST PUSH2 0x1ECF DUP2 PUSH2 0x2510 JUMP JUMPDEST PUSH2 0x1EEB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x375E JUMP JUMPDEST PUSH1 0x7 SLOAD CALLVALUE LT ISZERO PUSH2 0x1F0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3594 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0x1F47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3917 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 DUP2 ADD SLOAD CALLVALUE SWAP2 SWAP1 PUSH2 0x1F68 SWAP1 DUP4 SWAP1 PUSH2 0x3B37 JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x1F7D SWAP1 DUP4 SWAP1 PUSH2 0x3B37 JUMP JUMPDEST PUSH1 0xA DUP3 ADD SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR DUP3 SSTORE DUP1 DUP3 ADD DUP9 SWAP1 SSTORE PUSH1 0xF DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE DUP7 MSTORE SWAP4 SWAP1 SWAP5 KECCAK256 SWAP1 SWAP3 ADD DUP7 SWAP1 SSTORE MLOAD DUP6 SWAP2 SWAP1 PUSH32 0xD8C1FE3E67AB767116A81F122B83C2557A8C2564019CB7C4F83DE1AEB1F1F0D SWAP1 PUSH2 0xBF0 SWAP1 DUP8 SWAP1 PUSH2 0x3076 JUMP JUMPDEST PUSH2 0x2003 PUSH2 0x257B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2014 PUSH2 0x194F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x203A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3729 JUMP JUMPDEST PUSH2 0x204E PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER DUP4 PUSH2 0x2B3E JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x14F11966A996E0629572E51064726D2057A80FBD34EFC066682C06A71DBB6E98 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2087 SWAP2 SWAP1 PUSH2 0x3076 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x20BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3A72 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x20E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x367F JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xC47D127C07BDD56C5CCBA00463CE3BD3C1BCA71B4670EEA6E5D0C02E4AA156E2 SWAP1 PUSH2 0x125A SWAP1 DUP4 SWAP1 PUSH2 0x2F78 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x213C PUSH2 0xC02 JUMP JUMPDEST PUSH2 0x2158 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x30B2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2182 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3A72 JUMP JUMPDEST PUSH1 0xC DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x93CCACEAC092FFB842C46B8718667A13A80E9058DCD0BD403D0B47215B30DA07 SWAP1 PUSH2 0x125A SWAP1 DUP4 SWAP1 PUSH2 0x3076 JUMP JUMPDEST PUSH2 0x21BF PUSH2 0xC02 JUMP JUMPDEST ISZERO PUSH2 0x21DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3655 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2206 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3A4C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x222F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3191 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2259 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3499 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2264 PUSH2 0x25CF JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x228E PUSH1 0xA SLOAD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP4 PUSH2 0x26CC JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x229C SWAP1 PUSH1 0x1 PUSH2 0x3B37 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH2 0x22AA SWAP1 PUSH2 0x248C JUMP JUMPDEST POP POP PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x22DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH2 0x230C PUSH2 0x257B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x231D PUSH2 0x194F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2343 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3729 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2369 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x31E2 JUMP JUMPDEST PUSH2 0x2372 DUP2 PUSH2 0x257F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x23B3 SWAP1 PUSH2 0x2F75 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x23F0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23F5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2416 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x36E6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2423 PUSH2 0xC02 JUMP JUMPDEST PUSH2 0x243F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x30B2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x2475 PUSH2 0x257B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2482 SWAP2 SWAP1 PUSH2 0x2F78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x1 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH2 0x24AE SWAP2 PUSH2 0x3B37 JUMP JUMPDEST PUSH1 0x2 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x6 SLOAD PUSH2 0x24C3 SWAP2 PUSH2 0x3B6F JUMP JUMPDEST PUSH2 0x24CD SWAP1 TIMESTAMP PUSH2 0x3B37 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SSTORE DUP2 DUP2 SSTORE PUSH1 0x0 PUSH1 0x8 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP4 SWAP2 PUSH32 0x939F42374AA9BF1D8D8CD56D8A9110CB040CD8DFEAE44080C6FCF2645E51B452 SWAP2 LOG2 POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2540 JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x255C JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP GT JUMPDEST DUP1 ISZERO PUSH2 0x1775 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP LT SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC SLOAD TIMESTAMP PUSH2 0x25E2 SWAP2 SWAP1 PUSH2 0x3B37 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x264B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x266F SWAP2 SWAP1 PUSH2 0x2EE8 JUMP JUMPDEST POP SWAP4 POP POP SWAP3 POP SWAP3 POP DUP4 DUP2 GT ISZERO PUSH2 0x2697 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x39FE JUMP JUMPDEST PUSH1 0xB SLOAD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND GT PUSH2 0x26C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3276 JUMP JUMPDEST POP SWAP1 SWAP4 POP SWAP2 POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x26FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3146 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x272B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x33C9 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x274A SWAP2 SWAP1 PUSH2 0x3B37 JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x2769 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x360D JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 SLOAD PUSH2 0x2784 SWAP1 TIMESTAMP PUSH2 0x3B37 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x6 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP4 SWAP1 DUP6 SWAP1 PUSH32 0x482E76A65B448A42DEEF26E99E58FB20C85E26F075DEFFF8DF6AA80459B39006 SWAP1 PUSH2 0x27CB SWAP1 DUP7 SWAP1 PUSH2 0x3076 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x2807 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x378A JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x2838 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3521 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2857 SWAP2 SWAP1 PUSH2 0x3B37 JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x2876 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x32D3 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x7 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0xD DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 MLOAD DUP4 SWAP1 DUP6 SWAP1 PUSH32 0xB6FF1FE915DB84788CBBBC017F0D2BEF9485FAD9FD0BD8CE9340FDE0D8410DD8 SWAP1 PUSH2 0x27CB SWAP1 DUP7 SWAP1 PUSH2 0x3076 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xB ADD SLOAD ISZERO DUP1 ISZERO PUSH2 0x2904 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xC ADD SLOAD ISZERO JUMPDEST PUSH2 0x2920 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3568 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x5 DUP3 ADD SLOAD SWAP2 SWAP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 SGT ISZERO PUSH2 0x2984 JUMPI DUP4 PUSH1 0x9 ADD SLOAD SWAP3 POP PUSH2 0x2710 PUSH1 0x8 SLOAD DUP6 PUSH1 0x8 ADD SLOAD PUSH2 0x2961 SWAP2 SWAP1 PUSH2 0x3B6F JUMP JUMPDEST PUSH2 0x296B SWAP2 SWAP1 PUSH2 0x3B4F JUMP JUMPDEST SWAP2 POP DUP2 DUP5 PUSH1 0x8 ADD SLOAD PUSH2 0x297D SWAP2 SWAP1 PUSH2 0x3B8E JUMP JUMPDEST SWAP1 POP PUSH2 0x29BD JUMP JUMPDEST DUP4 PUSH1 0x4 ADD SLOAD DUP5 PUSH1 0x5 ADD SLOAD SLT ISZERO PUSH2 0x29B0 JUMPI DUP4 PUSH1 0xA ADD SLOAD SWAP3 POP PUSH2 0x2710 PUSH1 0x8 SLOAD DUP6 PUSH1 0x8 ADD SLOAD PUSH2 0x2961 SWAP2 SWAP1 PUSH2 0x3B6F JUMP JUMPDEST POP POP POP PUSH1 0x8 DUP2 ADD SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST PUSH1 0xB DUP5 ADD DUP4 SWAP1 SSTORE PUSH1 0xC DUP5 ADD DUP2 SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD DUP4 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x29E0 SWAP1 DUP5 SWAP1 PUSH2 0x3B37 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH32 0x6DFDFCB09C8804D0058826CD2539F1ACFBE3CB887C9BE03D928035BCE0F1A58D DUP5 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2A1B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3AA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2A53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3191 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 PUSH2 0x2A62 PUSH1 0x2 DUP5 PUSH2 0x3B8E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x2A94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3228 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 PUSH2 0x2AA3 PUSH1 0x2 DUP5 PUSH2 0x3B8E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x2AD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3410 JUMP JUMPDEST PUSH2 0x2372 DUP2 PUSH2 0x248C JUMP JUMPDEST PUSH2 0x2AE5 PUSH2 0xC02 JUMP JUMPDEST ISZERO PUSH2 0x2B02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3655 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x2475 PUSH2 0x257B JUMP JUMPDEST PUSH2 0x2416 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2B5D SWAP3 SWAP2 SWAP1 PUSH2 0x2F8C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH1 0x0 PUSH2 0x2BE4 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2C1E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2416 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2C02 SWAP2 SWAP1 PUSH2 0x2E64 JUMP JUMPDEST PUSH2 0x2416 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x394E JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2C2D DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2C37 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2C59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x34DB JUMP JUMPDEST PUSH2 0x2C62 DUP6 PUSH2 0x250A JUMP JUMPDEST PUSH2 0x2C7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x38B1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2C9A SWAP2 SWAP1 PUSH2 0x2F59 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2CD7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2CDC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2CEC DUP3 DUP3 DUP7 PUSH2 0x2CF7 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2D06 JUMPI POP DUP2 PUSH2 0x2C30 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x2D16 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP2 SWAP1 PUSH2 0x307F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x827 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x827 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D91 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2C30 DUP3 PUSH2 0x2D52 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2DAC JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2DB5 DUP4 PUSH2 0x2D52 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2DD7 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2DE0 DUP5 PUSH2 0x2D52 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E07 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2E1E JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2E31 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2E3F JUMPI DUP5 DUP6 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x2E52 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E75 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2C30 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E95 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2EAE JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2EBE PUSH1 0x20 DUP5 ADD PUSH2 0x2D52 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2ED9 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2EFF JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2F08 DUP7 PUSH2 0x2D69 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x2F2B PUSH1 0x80 DUP8 ADD PUSH2 0x2D69 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x2F55 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2F6B DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3BA5 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 MSTORE DUP5 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x80 DUP6 ADD SWAP1 DUP3 DUP10 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2FDF JUMPI DUP2 MLOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2FC3 JUMP JUMPDEST POP POP POP DUP5 DUP2 SUB DUP3 DUP7 ADD MSTORE DUP7 MLOAD DUP1 DUP3 MSTORE DUP8 DUP4 ADD SWAP2 DUP4 ADD SWAP1 DUP6 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3030 JUMPI DUP4 MLOAD PUSH2 0x300C DUP5 DUP3 MLOAD PUSH2 0x2F37 JUMP JUMPDEST DUP1 DUP7 ADD MLOAD DUP5 DUP8 ADD MSTORE PUSH1 0x40 SWAP1 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP5 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP6 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2FF7 JUMP JUMPDEST POP POP DUP1 SWAP5 POP POP POP POP POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x3060 DUP3 DUP7 PUSH2 0x2F37 JUMP JUMPDEST DUP4 PUSH1 0x20 DUP4 ADD MSTORE DUP3 ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x309E DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x3BA5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F7420656C696769626C6520666F7220726566756E64000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0xA8E4CAC2E6EAE4F240CCCACA40E8DEDE40D0D2CED PUSH1 0x5B SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C79206C6F636B20726F756E6420616674657220726F756E6420 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x1A185CC81CDD185C9D1959 PUSH1 0xAA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792072756E2061667465722067656E65736973537461727452 PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1BDD5B99081A5CC81D1C9A59D9D95C9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C7920737461727420726F756E6420616674657220726F756E64 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x81B8B4C881A185CC8195B991959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3D SWAP1 DUP3 ADD MSTORE PUSH32 0x4F7261636C652075706461746520726F756E644964206D757374206265206C61 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x72676572207468616E206F7261636C654C6174657374526F756E644964000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C7920656E6420726F756E642077697468696E20627566666572 PUSH1 0x40 DUP3 ADD MSTORE PUSH7 0x5365636F6E6473 PUSH1 0xC8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x10DBDB9D1C9858DD081B9BDD08185B1B1BDDD959 PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x6275666665725365636F6E6473206D75737420626520696E666572696F722074 PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x6F20696E74657276616C5365636F6E6473 PUSH1 0x78 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x4E6F7420656C696769626C6520666F7220636C61696D PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C79206C6F636B20726F756E64206166746572206C6F636B5469 PUSH1 0x40 DUP3 ADD MSTORE PUSH7 0x6D657374616D7 PUSH1 0xCC SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x37 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C79207374617274206E657720726F756E642061667465722072 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6F756E64206E2D3220636C6F736554696D657374616D70000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x2737BA1037B832B930BA37B917B0B236B4B7 PUSH1 0x71 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792072756E2067656E657369734C6F636B526F756E64206F6E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C7920656E6420726F756E6420616674657220636C6F73655469 PUSH1 0x40 DUP3 ADD MSTORE PUSH7 0x6D657374616D7 PUSH1 0xCC SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x14995DD85C991CC818D85B18DD5B185D1959 PUSH1 0x72 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x42657420616D6F756E74206D7573742062652067726561746572207468616E20 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x1B5A5B90995D105B5BDD5B9D PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x149BDD5B99081A185CC81B9BDD08195B991959 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C79206C6F636B20726F756E642077697468696E206275666665 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x725365636F6E6473 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x43616E6E6F74206265207A65726F2061646472657373 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x50726F787920636F6E7472616374206E6F7420616C6C6F776564000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A204F6E655F5452414E534645525F464149 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x131151 PUSH1 0xEA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x526F756E64206E6F74206265747461626C65 PUSH1 0x70 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C7920656E6420726F756E6420616674657220726F756E642068 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x185CC81B1BD8DAD959 PUSH1 0xBA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792072756E2067656E657369735374617274526F756E64206F PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x6E6365 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x4D757374206265207375706572696F7220746F203 PUSH1 0x5C SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x46 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792072756E2061667465722067656E65736973537461727452 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6F756E6420616E642067656E657369734C6F636B526F756E6420697320747269 PUSH1 0x60 DUP3 ADD MSTORE PUSH6 0x19D9D95C9959 PUSH1 0xD2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x149BDD5B99081A185CC81B9BDD081CDD185C9D1959 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C7920626574206F6E63652070657220726F756E640000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x42657420697320746F6F206561726C792F6C617465 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x4F7261636C6520757064617465206578636565646564206D61782074696D6573 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x74616D7020616C6C6F77616E6365 PUSH1 0x90 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x2737BA1037B832B930BA37B9 PUSH1 0xA1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x2737BA1030B236B4B7 PUSH1 0xB9 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP14 DUP15 MSTORE PUSH1 0x20 DUP15 ADD SWAP13 SWAP1 SWAP13 MSTORE PUSH1 0x40 DUP14 ADD SWAP11 SWAP1 SWAP11 MSTORE PUSH1 0x60 DUP13 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x80 DUP12 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0xA0 DUP11 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xC0 DUP10 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xE0 DUP9 ADD MSTORE PUSH2 0x100 DUP8 ADD MSTORE PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x140 DUP6 ADD MSTORE PUSH2 0x160 DUP5 ADD MSTORE PUSH2 0x180 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x1A0 DUP3 ADD MSTORE PUSH2 0x1C0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3B4A JUMPI PUSH2 0x3B4A PUSH2 0x3BF0 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3B6A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3B89 JUMPI PUSH2 0x3B89 PUSH2 0x3BF0 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3BA0 JUMPI PUSH2 0x3BA0 PUSH2 0x3BF0 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3BC0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3BA8 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3BCF JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x3BE9 JUMPI PUSH2 0x3BE9 PUSH2 0x3BF0 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 0xDF DUP5 0xD5 BYTE DIV 0xAF 0xC9 0xF9 MSTORE DUP6 PUSH29 0x3770C1534875E430725C5DDB5C71F2DACED3DBC864736F6C6343000800 STOP CALLER ",
              "sourceMap": "466:23859:7:-:0;;;614:35;;;-1:-1:-1;;;;655:36:7;;;4733:718;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:0;877:12;:10;:12::i;:::-;867:9;:23::i;:::-;934:5:1;924:15;;-1:-1:-1;;;;924:15:1;;;;1742:22:2;;1486:4:7;5033:32;;;5025:66;;;;-1:-1:-1;;;5025:66:7;;;;;;;:::i;:::-;;;;;;;;;5102:6;:46;;-1:-1:-1;;;;;;5102:46:7;;;-1:-1:-1;;;;;5102:46:7;;;;;;;5158:12;:28;;;;;;;;;;;;;;5196:15;:34;;;;;;;;;;;;;;;;5240:15;:34;;;;5284:13;:30;5324:12;:28;;;;5362:21;:46;5418:11;:26;466:23859;;587:96:6;666:10;587:96;:::o;2041:169:0:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;14:179:9:-;95:13;;-1:-1:-1;;;;;137:31:9;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:704::-;;;;;;;;;440:3;428:9;419:7;415:23;411:33;408:2;;;462:6;454;447:22;408:2;490:42;522:9;490:42;:::i;:::-;480:52;;551:51;598:2;587:9;583:18;551:51;:::i;:::-;541:61;;621:51;668:2;657:9;653:18;621:51;:::i;:::-;611:61;;712:2;701:9;697:18;691:25;681:35;;756:3;745:9;741:19;735:26;725:36;;801:3;790:9;786:19;780:26;770:36;;846:3;835:9;831:19;825:26;815:36;;891:3;880:9;876:19;870:26;860:36;;398:504;;;;;;;;;;;:::o;907:345::-;1109:2;1091:21;;;1148:2;1128:18;;;1121:30;1187:23;1182:2;1167:18;;1160:51;1243:2;1228:18;;1081:171::o;:::-;466:23859:7;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:26498:9",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:9",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "65:124:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "75:29:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "97:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "84:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "84:20:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "75:5:9"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "167:16:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "176:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "179:1:9",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "169:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "169:12:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "169:12:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "126:5:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "137:5:9"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "152:3:9",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "157:1:9",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "148:3:9"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "148:11:9"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "161:1:9",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "144:3:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "144:19:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "133:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "133:31:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "123:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "123:42:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "116:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "116:50:9"
                              },
                              "nodeType": "YulIf",
                              "src": "113:2:9"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "44:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "55:5:9",
                            "type": ""
                          }
                        ],
                        "src": "14:175:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "255:120:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "265:22:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "280:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "274:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "274:13:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "265:5:9"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "353:16:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "362:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "365:1:9",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "355:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "355:12:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "355:12:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "309:5:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "320:5:9"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "327:22:9",
                                            "type": "",
                                            "value": "0xffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "316:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "316:34:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "306:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "306:45:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "299:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "299:53:9"
                              },
                              "nodeType": "YulIf",
                              "src": "296:2:9"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint80_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "234:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "245:5:9",
                            "type": ""
                          }
                        ],
                        "src": "194:181:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "450:128:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "496:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "505:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "513:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "498:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "498:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "498:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "471:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "480:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "467:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "467:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "492:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "463:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "463:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "460:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "531:41:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "562:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "541:20:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "541:31:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "531:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "416:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "427:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "439:6:9",
                            "type": ""
                          }
                        ],
                        "src": "380:198:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "670:179:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "716:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "725:6:9"
                                        },
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "733:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "718:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "718:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "718:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "691:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "700:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "687:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "687:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "712:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "683:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "683:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "680:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "751:41:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "782:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "761:20:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "761:31:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "751:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "801:42:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "828:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "839:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "824:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "824:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "811:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "811:32:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "801:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "628:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "639:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "651:6:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "659:6:9",
                            "type": ""
                          }
                        ],
                        "src": "583:266:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "958:230:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1004:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value2",
                                          "nodeType": "YulIdentifier",
                                          "src": "1013:6:9"
                                        },
                                        {
                                          "name": "value2",
                                          "nodeType": "YulIdentifier",
                                          "src": "1021:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1006:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1006:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1006:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "979:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "988:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "975:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "975:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1000:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "971:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "971:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "968:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1039:41:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1070:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1049:20:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1049:31:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1039:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1089:42:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1116:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1127:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1112:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1112:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1099:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1099:32:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1089:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1140:42:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1167:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1178:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1163:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1163:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1150:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1150:32:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1140:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "908:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "919:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "931:6:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "939:6:9",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "947:6:9",
                            "type": ""
                          }
                        ],
                        "src": "854:334:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1298:561:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1344:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1353:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1361:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1346:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1346:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1346:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1319:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1328:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1315:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1315:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1340:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1311:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1311:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "1308:2:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1379:37:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1406:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1393:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1393:23:9"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "1383:6:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1425:28:9",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1435:18:9",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1429:2:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1480:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1489:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1497:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1482:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1482:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1482:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1468:6:9"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1476:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1465:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1465:14:9"
                              },
                              "nodeType": "YulIf",
                              "src": "1462:2:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1515:32:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1529:9:9"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1540:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1525:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1525:22:9"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "1519:2:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1595:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1604:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1612:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1597:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1597:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1597:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "1574:2:9"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1578:4:9",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1570:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1570:13:9"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1585:7:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1566:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1566:27:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1559:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1559:35:9"
                              },
                              "nodeType": "YulIf",
                              "src": "1556:2:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1630:30:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1657:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1644:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1644:16:9"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "1634:6:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1687:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1696:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1704:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1689:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1689:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1689:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1675:6:9"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1683:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1672:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1672:14:9"
                              },
                              "nodeType": "YulIf",
                              "src": "1669:2:9"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1772:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1781:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1789:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1774:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1774:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1774:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "1736:2:9"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "1744:6:9"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1752:2:9",
                                                "type": "",
                                                "value": "32"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mul",
                                              "nodeType": "YulIdentifier",
                                              "src": "1740:3:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1740:15:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1732:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1732:24:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1758:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1728:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1728:33:9"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1763:7:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1725:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1725:46:9"
                              },
                              "nodeType": "YulIf",
                              "src": "1722:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1807:21:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1821:2:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1825:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1817:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1817:11:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1807:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1837:16:9",
                              "value": {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "1847:6:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1837:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1256:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1267:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1279:6:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1287:6:9",
                            "type": ""
                          }
                        ],
                        "src": "1193:666:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1942:219:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1988:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1997:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2005:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1990:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1990:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1990:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1963:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1972:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1959:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1959:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1984:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1955:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1955:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "1952:2:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2023:29:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2042:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2036:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2036:16:9"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "2027:5:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2105:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2114:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2122:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2107:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2107:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2107:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2074:5:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nodeType": "YulIdentifier",
                                                "src": "2095:5:9"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nodeType": "YulIdentifier",
                                              "src": "2088:6:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2088:13:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "2081:6:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2081:21:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "2071:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2071:32:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2064:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2064:40:9"
                              },
                              "nodeType": "YulIf",
                              "src": "2061:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2140:15:9",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2150:5:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2140:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1908:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1919:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1931:6:9",
                            "type": ""
                          }
                        ],
                        "src": "1864:297:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2236:120:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2282:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2291:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2299:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2284:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2284:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2284:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2257:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2266:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2253:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2253:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2278:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2249:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2249:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "2246:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2317:33:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2340:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2327:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2327:23:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2317:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2202:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2213:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2225:6:9",
                            "type": ""
                          }
                        ],
                        "src": "2166:190:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2448:179:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2494:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2503:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2511:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2496:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2496:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2496:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2469:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2478:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2465:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2465:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2490:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2461:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2461:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "2458:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2529:33:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2552:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2539:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2539:23:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2529:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2571:50:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2606:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2617:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2602:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2602:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2581:20:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2581:40:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2571:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2406:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2417:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2429:6:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2437:6:9",
                            "type": ""
                          }
                        ],
                        "src": "2361:266:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2719:171:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2765:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2774:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2782:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2767:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2767:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2767:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2740:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2749:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2736:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2736:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2761:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2732:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2732:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "2729:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2800:33:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2823:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2810:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2810:23:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2800:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2842:42:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2869:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2880:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2865:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2865:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2852:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2852:32:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2842:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2677:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2688:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2700:6:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2708:6:9",
                            "type": ""
                          }
                        ],
                        "src": "2632:258:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3041:341:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3088:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "3097:6:9"
                                        },
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "3105:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3090:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3090:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3090:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3062:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3071:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3058:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3058:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3083:3:9",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3054:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3054:33:9"
                              },
                              "nodeType": "YulIf",
                              "src": "3051:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3123:51:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3164:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_uint80_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "3133:30:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3133:41:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3123:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3183:35:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3203:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3214:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3199:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3199:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3193:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3193:25:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3183:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3227:35:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3247:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3258:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3243:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3243:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3237:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3237:25:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "3227:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3271:35:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3291:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3302:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3287:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3287:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3281:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3281:25:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "3271:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3315:61:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3360:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3371:3:9",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3356:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3356:19:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_uint80_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "3325:30:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3325:51:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "3315:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2975:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2986:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2998:6:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3006:6:9",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "3014:6:9",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "3022:6:9",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "3030:6:9",
                            "type": ""
                          }
                        ],
                        "src": "2895:487:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3440:186:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3482:111:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3503:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "3510:3:9",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "3515:10:9",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "3506:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3506:20:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "3496:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3496:31:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3496:31:9"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3547:1:9",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3550:4:9",
                                          "type": "",
                                          "value": "0x21"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "3540:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3540:15:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3540:15:9"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3575:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3578:4:9",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3568:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3568:15:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3568:15:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3463:5:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3470:1:9",
                                        "type": "",
                                        "value": "2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "3460:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3460:12:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3453:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3453:20:9"
                              },
                              "nodeType": "YulIf",
                              "src": "3450:2:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3609:3:9"
                                  },
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3614:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3602:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3602:18:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3602:18:9"
                            }
                          ]
                        },
                        "name": "abi_encode_t_enum$_Position",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3424:5:9",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3431:3:9",
                            "type": ""
                          }
                        ],
                        "src": "3387:239:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3768:137:9",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3778:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "3798:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3792:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3792:13:9"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "3782:6:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "3840:6:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3848:4:9",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3836:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3836:17:9"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3855:3:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3860:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "3814:21:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3814:53:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3814:53:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3876:23:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3887:3:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3892:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3883:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3883:16:9"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "3876:3:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3744:3:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3749:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "3760:3:9",
                            "type": ""
                          }
                        ],
                        "src": "3631:274:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4101:14:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4103:10:9",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4110:3:9"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "4103:3:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4085:3:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "4093:3:9",
                            "type": ""
                          }
                        ],
                        "src": "3910:205:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4221:102:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4231:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4243:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4254:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4239:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4239:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4231:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4273:9:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "4288:6:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4304:3:9",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4309:1:9",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "4300:3:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4300:11:9"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4313:1:9",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "4296:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4296:19:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4284:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4284:32:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4266:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4266:51:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4266:51:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4190:9:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4201:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4212:4:9",
                            "type": ""
                          }
                        ],
                        "src": "4120:203:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4457:145:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4467:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4479:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4490:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4475:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4475:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4467:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4509:9:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "4524:6:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4540:3:9",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4545:1:9",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "4536:3:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4536:11:9"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4549:1:9",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "4532:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4532:19:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4520:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4520:32:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4502:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4502:51:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4502:51:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4573:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4584:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4569:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4569:18:9"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4589:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4562:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4562:34:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4562:34:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4418:9:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4429:6:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4437:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4448:4:9",
                            "type": ""
                          }
                        ],
                        "src": "4328:274:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4912:1202:9",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4922:12:9",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4932:2:9",
                                "type": "",
                                "value": "96"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4926:2:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4943:32:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4961:9:9"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4972:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4957:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4957:18:9"
                              },
                              "variables": [
                                {
                                  "name": "tail_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4947:6:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4991:9:9"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5002:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4984:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4984:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4984:21:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5014:17:9",
                              "value": {
                                "name": "tail_1",
                                "nodeType": "YulIdentifier",
                                "src": "5025:6:9"
                              },
                              "variables": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulTypedName",
                                  "src": "5018:3:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5040:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5060:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5054:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5054:13:9"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "5044:6:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "tail_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5083:6:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5091:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5076:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5076:22:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5076:22:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5107:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5118:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5129:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5114:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5114:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5107:3:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5142:14:9",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5152:4:9",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "5146:2:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5165:29:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5183:6:9"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "5191:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5179:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5179:15:9"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "5169:6:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5203:13:9",
                              "value": {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "5212:4:9"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "5207:1:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5274:120:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "5295:3:9"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "srcPtr",
                                              "nodeType": "YulIdentifier",
                                              "src": "5306:6:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "5300:5:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5300:13:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "5288:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5288:26:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5288:26:9"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "5327:19:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "5338:3:9"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "5343:2:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5334:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5334:12:9"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "5327:3:9"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "5359:25:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "5373:6:9"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "5381:2:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5369:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5369:15:9"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "5359:6:9"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "5236:1:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5239:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5233:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5233:13:9"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "5247:18:9",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "5249:14:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "5258:1:9"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5261:1:9",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5254:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5254:9:9"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "5249:1:9"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "5229:3:9",
                                "statements": []
                              },
                              "src": "5225:169:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5414:9:9"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "5425:2:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5410:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5410:18:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "5434:3:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5439:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5430:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5430:19:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5403:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5403:47:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5403:47:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5459:16:9",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5472:3:9"
                              },
                              "variables": [
                                {
                                  "name": "pos_1",
                                  "nodeType": "YulTypedName",
                                  "src": "5463:5:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5484:29:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5506:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5500:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5500:13:9"
                              },
                              "variables": [
                                {
                                  "name": "length_1",
                                  "nodeType": "YulTypedName",
                                  "src": "5488:8:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5529:3:9"
                                  },
                                  {
                                    "name": "length_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5534:8:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5522:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5522:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5522:21:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5552:21:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5565:3:9"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "5570:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5561:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5561:12:9"
                              },
                              "variableNames": [
                                {
                                  "name": "pos_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "5552:5:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5582:31:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5602:6:9"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "5610:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5598:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5598:15:9"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr_1",
                                  "nodeType": "YulTypedName",
                                  "src": "5586:8:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5622:15:9",
                              "value": {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "5633:4:9"
                              },
                              "variables": [
                                {
                                  "name": "i_1",
                                  "nodeType": "YulTypedName",
                                  "src": "5626:3:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5703:338:9",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "5717:25:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "5733:8:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "5727:5:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5727:15:9"
                                    },
                                    "variables": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulTypedName",
                                        "src": "5721:2:9",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "_3",
                                              "nodeType": "YulIdentifier",
                                              "src": "5789:2:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "5783:5:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5783:9:9"
                                        },
                                        {
                                          "name": "pos_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "5794:5:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_encode_t_enum$_Position",
                                        "nodeType": "YulIdentifier",
                                        "src": "5755:27:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5755:45:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5755:45:9"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "pos_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "5824:5:9"
                                            },
                                            {
                                              "name": "_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "5831:2:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "5820:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5820:14:9"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "_3",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5846:2:9"
                                                },
                                                {
                                                  "name": "_2",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5850:2:9"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "5842:3:9"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "5842:11:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "5836:5:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5836:18:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "5813:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5813:42:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5813:42:9"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "5868:14:9",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5878:4:9",
                                      "type": "",
                                      "value": "0x40"
                                    },
                                    "variables": [
                                      {
                                        "name": "_4",
                                        "nodeType": "YulTypedName",
                                        "src": "5872:2:9",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "pos_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "5906:5:9"
                                            },
                                            {
                                              "name": "_4",
                                              "nodeType": "YulIdentifier",
                                              "src": "5913:2:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "5902:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5902:14:9"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "arguments": [
                                                        {
                                                          "name": "_3",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "5942:2:9"
                                                        },
                                                        {
                                                          "name": "_4",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "5946:2:9"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "add",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "5938:3:9"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "5938:11:9"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "mload",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "5932:5:9"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "5932:18:9"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "iszero",
                                                "nodeType": "YulIdentifier",
                                                "src": "5925:6:9"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "5925:26:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "iszero",
                                            "nodeType": "YulIdentifier",
                                            "src": "5918:6:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5918:34:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "5895:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5895:58:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5895:58:9"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "5966:23:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pos_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "5979:5:9"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "5986:2:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5975:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5975:14:9"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5966:5:9"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "6002:29:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "6018:8:9"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "6028:2:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "6014:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6014:17:9"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "6002:8:9"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5657:3:9"
                                  },
                                  {
                                    "name": "length_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5662:8:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5654:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5654:17:9"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "5672:22:9",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "5674:18:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "5685:3:9"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5690:1:9",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5681:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5681:11:9"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5674:3:9"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "5650:3:9",
                                "statements": []
                              },
                              "src": "5646:395:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6050:13:9",
                              "value": {
                                "name": "pos_1",
                                "nodeType": "YulIdentifier",
                                "src": "6058:5:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6050:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6083:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6094:4:9",
                                        "type": "",
                                        "value": "0x40"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6079:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6079:20:9"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "6101:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6072:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6072:36:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6072:36:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_struct$_BetInfo_$965_memory_ptr_$dyn_memory_ptr_t_uint256__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_struct$_BetInfo_$965_memory_ptr_$dyn_memory_ptr_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4865:9:9",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "4876:6:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4884:6:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4892:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4903:4:9",
                            "type": ""
                          }
                        ],
                        "src": "4607:1507:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6214:92:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6224:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6236:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6247:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6232:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6232:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6224:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6266:9:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "6291:6:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "6284:6:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6284:14:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "6277:6:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6277:22:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6259:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6259:41:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6259:41:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6183:9:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6194:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6205:4:9",
                            "type": ""
                          }
                        ],
                        "src": "6119:187:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6442:102:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6452:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6464:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6475:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6460:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6460:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6452:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6494:9:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "6509:6:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "6525:3:9",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "6530:1:9",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "6521:3:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "6521:11:9"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6534:1:9",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "6517:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6517:19:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "6505:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6505:32:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6487:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6487:51:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6487:51:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_AggregatorV3Interface_$2869__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6411:9:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6422:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6433:4:9",
                            "type": ""
                          }
                        ],
                        "src": "6311:233:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6710:199:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6720:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6732:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6743:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6728:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6728:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6720:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "6783:6:9"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6791:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_enum$_Position",
                                  "nodeType": "YulIdentifier",
                                  "src": "6755:27:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6755:46:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6755:46:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6821:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6832:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6817:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6817:18:9"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6837:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6810:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6810:34:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6810:34:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6864:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6875:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6860:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6860:18:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value2",
                                            "nodeType": "YulIdentifier",
                                            "src": "6894:6:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "6887:6:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6887:14:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "6880:6:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6880:22:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6853:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6853:50:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6853:50:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_enum$_Position_$928_t_uint256_t_bool__to_t_uint8_t_uint256_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6663:9:9",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "6674:6:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "6682:6:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6690:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6701:4:9",
                            "type": ""
                          }
                        ],
                        "src": "6549:360:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7013:76:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7023:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7035:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7046:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7031:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7031:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7023:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7065:9:9"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7076:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7058:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7058:25:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7058:25:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6982:9:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6993:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7004:4:9",
                            "type": ""
                          }
                        ],
                        "src": "6914:175:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7215:262:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7232:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7243:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7225:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7225:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7225:21:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7255:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7275:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7269:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7269:13:9"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "7259:6:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7302:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7313:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7298:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7298:18:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7318:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7291:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7291:34:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7291:34:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "7360:6:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7368:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7356:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7356:15:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7377:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7388:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7373:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7373:18:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7393:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "7334:21:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7334:66:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7334:66:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7409:62:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7425:9:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "7444:6:9"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "7452:2:9",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "7440:3:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "7440:15:9"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "7461:2:9",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "7457:3:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "7457:7:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "7436:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7436:29:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7421:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7421:45:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7468:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7417:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7417:54:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7409:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7184:9:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7195:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7206:4:9",
                            "type": ""
                          }
                        ],
                        "src": "7094:383:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7656:170:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7673:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7684:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7666:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7666:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7666:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7707:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7718:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7703:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7703:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7723:2:9",
                                    "type": "",
                                    "value": "20"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7696:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7696:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7696:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7746:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7757:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7742:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7742:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7762:22:9",
                                    "type": "",
                                    "value": "Pausable: not paused"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7735:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7735:50:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7735:50:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7794:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7806:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7817:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7802:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7802:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7794:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7633:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7647:4:9",
                            "type": ""
                          }
                        ],
                        "src": "7482:344:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8005:173:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8022:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8033:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8015:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8015:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8015:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8056:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8067:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8052:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8052:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8072:2:9",
                                    "type": "",
                                    "value": "23"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8045:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8045:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8045:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8095:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8106:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8091:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8091:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8111:25:9",
                                    "type": "",
                                    "value": "Not eligible for refund"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8084:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8084:53:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8084:53:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8146:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8158:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8169:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8154:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8154:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8146:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_10916da313aec2d89ae884214021eae2adcdb0000848c813099dbdefabcb1887__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7982:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7996:4:9",
                            "type": ""
                          }
                        ],
                        "src": "7831:347:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8357:171:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8374:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8385:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8367:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8367:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8367:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8408:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8419:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8404:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8404:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8424:2:9",
                                    "type": "",
                                    "value": "21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8397:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8397:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8397:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8447:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8458:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8443:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8443:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8463:23:9",
                                    "type": "",
                                    "value": "Treasury fee too high"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8436:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8436:51:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8436:51:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8496:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8508:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8519:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8504:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8504:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8496:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_11bdebae3580e3cc0aa83f4abe624d8a87da76af0e4eb2ea8382d5e81bd9d2ff__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8334:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8348:4:9",
                            "type": ""
                          }
                        ],
                        "src": "8183:345:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8707:233:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8724:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8735:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8717:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8717:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8717:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8758:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8769:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8754:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8754:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8774:2:9",
                                    "type": "",
                                    "value": "43"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8747:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8747:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8747:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8797:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8808:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8793:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8793:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8813:34:9",
                                    "type": "",
                                    "value": "Can only lock round after round "
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8786:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8786:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8786:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8868:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8879:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8864:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8864:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8884:13:9",
                                    "type": "",
                                    "value": "has started"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8857:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8857:41:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8857:41:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8907:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8919:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8930:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8915:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8915:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8907:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_16f79d9e996c484c6ab868c786817e96a6590ee714435b79b344480dba01cfa6__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8684:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8698:4:9",
                            "type": ""
                          }
                        ],
                        "src": "8533:407:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9119:239:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9136:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9147:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9129:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9129:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9129:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9170:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9181:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9166:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9166:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9186:2:9",
                                    "type": "",
                                    "value": "49"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9159:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9159:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9159:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9209:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9220:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9205:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9205:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9225:34:9",
                                    "type": "",
                                    "value": "Can only run after genesisStartR"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9198:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9198:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9198:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9280:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9291:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9276:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9276:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9296:19:9",
                                    "type": "",
                                    "value": "ound is triggered"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9269:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9269:47:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9269:47:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9325:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9337:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9348:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9333:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9333:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9325:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_226e65b5af697b001702a7d9d66fa2076db3b23ec51e12a83cc0a19f174024ab__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9096:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9110:4:9",
                            "type": ""
                          }
                        ],
                        "src": "8945:413:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9537:228:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9554:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9565:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9547:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9547:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9547:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9588:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9599:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9584:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9584:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9604:2:9",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9577:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9577:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9577:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9627:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9638:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9623:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9623:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9643:34:9",
                                    "type": "",
                                    "value": "Ownable: new owner is the zero a"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9616:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9616:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9616:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9698:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9709:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9694:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9694:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9714:8:9",
                                    "type": "",
                                    "value": "ddress"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9687:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9687:36:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9687:36:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9732:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9744:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9755:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9740:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9740:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9732:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9514:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9528:4:9",
                            "type": ""
                          }
                        ],
                        "src": "9363:402:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9944:236:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9961:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9972:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9954:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9954:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9954:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9995:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10006:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9991:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9991:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10011:2:9",
                                    "type": "",
                                    "value": "46"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9984:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9984:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9984:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10034:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10045:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10030:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10030:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10050:34:9",
                                    "type": "",
                                    "value": "Can only start round after round"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10023:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10023:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10023:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10105:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10116:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10101:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10101:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10121:16:9",
                                    "type": "",
                                    "value": " n-2 has ended"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10094:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10094:44:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10094:44:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10147:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10159:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10170:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10155:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10155:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10147:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_25e36640e6894539ca9141c17c2fb43b389e358f68c3c034f58f90400971fe8d__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9921:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9935:4:9",
                            "type": ""
                          }
                        ],
                        "src": "9770:410:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10359:251:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10376:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10387:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10369:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10369:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10369:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10410:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10421:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10406:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10406:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10426:2:9",
                                    "type": "",
                                    "value": "61"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10399:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10399:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10399:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10449:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10460:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10445:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10445:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10465:34:9",
                                    "type": "",
                                    "value": "Oracle update roundId must be la"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10438:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10438:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10438:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10520:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10531:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10516:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10516:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10536:31:9",
                                    "type": "",
                                    "value": "rger than oracleLatestRoundId"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10509:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10509:59:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10509:59:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10577:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10589:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10600:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10585:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10585:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10577:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_26bf7200ac9064fd4cd504d65207afe4b5d3eae2249dd8e9100c923d5898f73e__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10336:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10350:4:9",
                            "type": ""
                          }
                        ],
                        "src": "10185:425:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10789:229:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10806:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10817:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10799:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10799:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10799:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10840:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10851:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10836:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10836:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10856:2:9",
                                    "type": "",
                                    "value": "39"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10829:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10829:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10829:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10879:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10890:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10875:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10875:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10895:34:9",
                                    "type": "",
                                    "value": "Can only end round within buffer"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10868:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10868:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10868:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10950:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10961:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10946:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10946:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10966:9:9",
                                    "type": "",
                                    "value": "Seconds"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10939:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10939:37:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10939:37:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10985:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10997:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11008:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10993:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10993:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10985:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_305b29a5e5f4ae7fa6be0480743fbd9163344a67bcc8501056392462fe190019__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10766:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10780:4:9",
                            "type": ""
                          }
                        ],
                        "src": "10615:403:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11197:170:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11214:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11225:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11207:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11207:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11207:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11248:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11259:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11244:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11244:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11264:2:9",
                                    "type": "",
                                    "value": "20"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11237:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11237:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11237:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11287:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11298:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11283:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11283:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11303:22:9",
                                    "type": "",
                                    "value": "Contract not allowed"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11276:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11276:50:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11276:50:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11335:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11347:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11358:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11343:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11343:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11335:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_3121f7b79283aa0596509798902a70205287bb5aa7cf6024beaaf19d6d89ba68__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11174:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11188:4:9",
                            "type": ""
                          }
                        ],
                        "src": "11023:344:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11546:239:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11563:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11574:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11556:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11556:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11556:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11597:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11608:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11593:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11593:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11613:2:9",
                                    "type": "",
                                    "value": "49"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11586:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11586:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11586:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11636:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11647:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11632:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11632:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11652:34:9",
                                    "type": "",
                                    "value": "bufferSeconds must be inferior t"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11625:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11625:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11625:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11707:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11718:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11703:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11703:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11723:19:9",
                                    "type": "",
                                    "value": "o intervalSeconds"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11696:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11696:47:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11696:47:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11752:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11764:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11775:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11760:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11760:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11752:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_33274a361372ebeacba5c8e2184d7f229ddb12fab7235d1315991afd5a00ecae__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11523:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11537:4:9",
                            "type": ""
                          }
                        ],
                        "src": "11372:413:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11964:172:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11981:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11992:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11974:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11974:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11974:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12015:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12026:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12011:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12011:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12031:2:9",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12004:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12004:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12004:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12054:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12065:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12050:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12050:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12070:24:9",
                                    "type": "",
                                    "value": "Not eligible for claim"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12043:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12043:52:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12043:52:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12104:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12116:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12127:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12112:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12112:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12104:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_4485251d168175c070f4245faf8e035abbbbeb2b93ec5dd30a17635d7bf82fa6__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11941:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11955:4:9",
                            "type": ""
                          }
                        ],
                        "src": "11790:346:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12315:229:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12332:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12343:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12325:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12325:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12325:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12366:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12377:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12362:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12362:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12382:2:9",
                                    "type": "",
                                    "value": "39"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12355:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12355:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12355:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12405:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12416:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12401:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12401:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12421:34:9",
                                    "type": "",
                                    "value": "Can only lock round after lockTi"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12394:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12394:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12394:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12476:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12487:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12472:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12472:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12492:9:9",
                                    "type": "",
                                    "value": "mestamp"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12465:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12465:37:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12465:37:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12511:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12523:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12534:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12519:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12519:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12511:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_4615b616084e6afd7e2bfca1c1e6bf78f2c06f5fdc371de5a933a8c06c2f3c13__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12292:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12306:4:9",
                            "type": ""
                          }
                        ],
                        "src": "12141:403:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12723:245:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12740:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12751:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12733:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12733:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12733:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12774:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12785:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12770:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12770:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12790:2:9",
                                    "type": "",
                                    "value": "55"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12763:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12763:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12763:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12813:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12824:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12809:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12809:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12829:34:9",
                                    "type": "",
                                    "value": "Can only start new round after r"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12802:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12802:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12802:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12884:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12895:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12880:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12880:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12900:25:9",
                                    "type": "",
                                    "value": "ound n-2 closeTimestamp"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12873:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12873:53:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12873:53:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12935:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12947:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12958:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12943:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12943:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12935:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_48314e39a2428c78f4a19c0e2084c27c66b28314dadb8ba08949064279800d81__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12700:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12714:4:9",
                            "type": ""
                          }
                        ],
                        "src": "12549:419:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13147:168:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13164:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13175:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13157:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13157:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13157:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13198:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13209:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13194:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13194:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13214:2:9",
                                    "type": "",
                                    "value": "18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13187:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13187:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13187:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13237:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13248:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13233:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13233:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13253:20:9",
                                    "type": "",
                                    "value": "Not operator/admin"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13226:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13226:48:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13226:48:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13283:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13295:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13306:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13291:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13291:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13283:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_49d662e2e497c75dff2142bf1640750ac7d04cac14a37cbabfe479aeb27de903__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13124:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13138:4:9",
                            "type": ""
                          }
                        ],
                        "src": "12973:342:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13494:224:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13511:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13522:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13504:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13504:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13504:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13545:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13556:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13541:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13541:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13561:2:9",
                                    "type": "",
                                    "value": "34"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13534:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13534:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13534:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13584:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13595:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13580:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13580:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13600:34:9",
                                    "type": "",
                                    "value": "Can only run genesisLockRound on"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13573:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13573:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13573:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13655:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13666:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13651:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13651:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13671:4:9",
                                    "type": "",
                                    "value": "ce"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13644:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13644:32:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13644:32:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13685:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13697:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13708:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13693:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13693:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13685:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_54c1dd6be5b30f20d2093c3e980ed73015a2bbe4a9e8d6c4aca1b60af3f18649__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13471:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13485:4:9",
                            "type": ""
                          }
                        ],
                        "src": "13320:398:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13897:228:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13914:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13925:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13907:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13907:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13907:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13948:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13959:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13944:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13944:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13964:2:9",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13937:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13937:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13937:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13987:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13998:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13983:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13983:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14003:34:9",
                                    "type": "",
                                    "value": "Address: insufficient balance fo"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13976:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13976:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13976:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14058:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14069:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14054:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14054:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14074:8:9",
                                    "type": "",
                                    "value": "r call"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14047:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14047:36:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14047:36:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14092:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14104:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14115:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14100:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14100:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14092:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13874:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13888:4:9",
                            "type": ""
                          }
                        ],
                        "src": "13723:402:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14304:229:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14321:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14332:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14314:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14314:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14314:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14355:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14366:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14351:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14351:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14371:2:9",
                                    "type": "",
                                    "value": "39"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14344:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14344:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14344:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14394:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14405:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14390:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14390:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14410:34:9",
                                    "type": "",
                                    "value": "Can only end round after closeTi"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14383:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14383:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14383:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14465:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14476:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14461:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14461:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14481:9:9",
                                    "type": "",
                                    "value": "mestamp"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14454:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14454:37:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14454:37:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14500:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14512:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14523:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14508:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14508:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14500:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_5aeb1b443dcf74ebb83f5c8c495d0ea37b2ffe70aeaa05c678145c1dbd7a2459__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14281:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14295:4:9",
                            "type": ""
                          }
                        ],
                        "src": "14130:403:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14712:168:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14729:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14740:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14722:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14722:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14722:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14763:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14774:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14759:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14759:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14779:2:9",
                                    "type": "",
                                    "value": "18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14752:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14752:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14752:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14802:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14813:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14798:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14798:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14818:20:9",
                                    "type": "",
                                    "value": "Rewards calculated"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14791:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14791:48:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14791:48:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14848:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14860:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14871:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14856:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14856:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14848:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_5d7676630e3121bb49b4e3f5dacd5e86304058e320b99ad1413edecdac7e31f1__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14689:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14703:4:9",
                            "type": ""
                          }
                        ],
                        "src": "14538:342:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15059:234:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15076:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15087:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15069:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15069:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15069:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15110:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15121:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15106:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15106:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15126:2:9",
                                    "type": "",
                                    "value": "44"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15099:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15099:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15099:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15149:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15160:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15145:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15145:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "15165:34:9",
                                    "type": "",
                                    "value": "Bet amount must be greater than "
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15138:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15138:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15138:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15220:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15231:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15216:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15216:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "15236:14:9",
                                    "type": "",
                                    "value": "minBetAmount"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15209:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15209:42:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15209:42:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15260:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15272:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15283:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15268:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15268:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15260:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_5fe536c9da26cf95bc38483dac26360eaee1c4fa3afa56386df6147c7417b834__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "15036:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "15050:4:9",
                            "type": ""
                          }
                        ],
                        "src": "14885:408:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15472:169:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15489:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15500:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15482:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15482:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15482:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15523:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15534:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15519:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15519:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15539:2:9",
                                    "type": "",
                                    "value": "19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15512:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15512:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15512:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15562:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15573:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15558:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15558:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "15578:21:9",
                                    "type": "",
                                    "value": "Round has not ended"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15551:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15551:49:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15551:49:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15609:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15621:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15632:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15617:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15617:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15609:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_620bac5ce7ce07e7a24266f5d1f82fa5a6fdb12107b06bacff04582c4c3dd298__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "15449:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "15463:4:9",
                            "type": ""
                          }
                        ],
                        "src": "15298:343:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15820:230:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15837:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15848:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15830:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15830:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15830:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15871:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15882:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15867:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15867:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15887:2:9",
                                    "type": "",
                                    "value": "40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15860:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15860:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15860:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15910:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15921:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15906:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15906:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "15926:34:9",
                                    "type": "",
                                    "value": "Can only lock round within buffe"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15899:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15899:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15899:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15981:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15992:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15977:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15977:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "15997:10:9",
                                    "type": "",
                                    "value": "rSeconds"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15970:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15970:38:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15970:38:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16017:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16029:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16040:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16025:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16025:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16017:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_65d9ebfb7b417d357c54ae150ee53f546dcdaa39c58b14378727fa7829cd41f8__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "15797:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "15811:4:9",
                            "type": ""
                          }
                        ],
                        "src": "15646:404:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16229:166:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16246:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16257:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16239:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16239:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16239:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16280:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16291:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16276:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16276:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16296:2:9",
                                    "type": "",
                                    "value": "16"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16269:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16269:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16269:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16319:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16330:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16315:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16315:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "16335:18:9",
                                    "type": "",
                                    "value": "Pausable: paused"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16308:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16308:46:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16308:46:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16363:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16375:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16386:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16371:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16371:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16363:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "16206:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "16220:4:9",
                            "type": ""
                          }
                        ],
                        "src": "16055:340:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16574:172:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16591:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16602:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16584:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16584:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16584:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16625:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16636:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16621:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16621:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16641:2:9",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16614:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16614:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16614:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16664:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16675:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16660:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16660:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "16680:24:9",
                                    "type": "",
                                    "value": "Cannot be zero address"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16653:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16653:52:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16653:52:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16714:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16726:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16737:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16722:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16722:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16714:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "16551:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "16565:4:9",
                            "type": ""
                          }
                        ],
                        "src": "16400:346:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16925:176:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16942:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16953:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16935:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16935:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16935:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16976:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16987:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16972:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16972:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16992:2:9",
                                    "type": "",
                                    "value": "26"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16965:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16965:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16965:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17015:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17026:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17011:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17011:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "17031:28:9",
                                    "type": "",
                                    "value": "Proxy contract not allowed"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17004:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17004:56:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17004:56:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17069:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17081:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17092:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17077:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17077:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "17069:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_805913a464b2b4d6ef9cb52137d9a1509b46d9c4cc7c32415f075bb6c16a902c__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "16902:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "16916:4:9",
                            "type": ""
                          }
                        ],
                        "src": "16751:350:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17280:225:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17297:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17308:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17290:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17290:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17290:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17331:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17342:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17327:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17327:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17347:2:9",
                                    "type": "",
                                    "value": "35"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17320:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17320:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17320:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17370:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17381:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17366:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17366:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "17386:34:9",
                                    "type": "",
                                    "value": "TransferHelper: One_TRANSFER_FAI"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17359:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17359:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17359:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17441:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17452:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17437:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17437:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "17457:5:9",
                                    "type": "",
                                    "value": "LED"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17430:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17430:33:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17430:33:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17472:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17484:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17495:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17480:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17480:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "17472:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9467863e3764bbf747d24553c19d99fc49cca97052f5c00c2434168c38e42324__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "17257:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "17271:4:9",
                            "type": ""
                          }
                        ],
                        "src": "17106:399:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17684:182:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17701:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17712:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17694:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17694:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17694:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17735:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17746:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17731:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17731:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17751:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17724:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17724:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17724:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17774:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17785:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17770:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17770:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "17790:34:9",
                                    "type": "",
                                    "value": "Ownable: caller is not the owner"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17763:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17763:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17763:62:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17834:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17846:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17857:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17842:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17842:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "17834:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "17661:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "17675:4:9",
                            "type": ""
                          }
                        ],
                        "src": "17510:356:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18045:168:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18062:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18073:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18055:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18055:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18055:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18096:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18107:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18092:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18092:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18112:2:9",
                                    "type": "",
                                    "value": "18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18085:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18085:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18085:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18135:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18146:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18131:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18131:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "18151:20:9",
                                    "type": "",
                                    "value": "Round not bettable"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18124:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18124:48:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18124:48:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18181:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18193:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18204:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18189:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18189:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18181:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_a2d0442ca18c3ecfac48145ee9309c30cdc48c9f8ead495b5b73042b901b9c63__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "18022:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "18036:4:9",
                            "type": ""
                          }
                        ],
                        "src": "17871:342:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18392:231:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18409:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18420:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18402:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18402:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18402:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18443:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18454:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18439:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18439:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18459:2:9",
                                    "type": "",
                                    "value": "41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18432:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18432:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18432:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18482:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18493:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18478:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18478:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "18498:34:9",
                                    "type": "",
                                    "value": "Can only end round after round h"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18471:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18471:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18471:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18553:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18564:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18549:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18549:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "18569:11:9",
                                    "type": "",
                                    "value": "as locked"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18542:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18542:39:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18542:39:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18590:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18602:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18613:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18598:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18598:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18590:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_a41dd959f6b8d59908b2f9cf13a8d0d10d9949d4d11b448e785beca06fef42a1__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "18369:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "18383:4:9",
                            "type": ""
                          }
                        ],
                        "src": "18218:405:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18802:225:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18819:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18830:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18812:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18812:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18812:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18853:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18864:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18849:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18849:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18869:2:9",
                                    "type": "",
                                    "value": "35"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18842:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18842:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18842:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18892:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18903:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18888:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18888:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "18908:34:9",
                                    "type": "",
                                    "value": "Can only run genesisStartRound o"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18881:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18881:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18881:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18963:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18974:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18959:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18959:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "18979:5:9",
                                    "type": "",
                                    "value": "nce"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18952:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18952:33:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18952:33:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18994:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19006:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19017:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19002:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19002:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18994:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_a9ea304ddc1d813a52e1a9668db582745527adccdd0906ce8d85b183192c0132__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "18779:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "18793:4:9",
                            "type": ""
                          }
                        ],
                        "src": "18628:399:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19206:171:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19223:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19234:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19216:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19216:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19216:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19257:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19268:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19253:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19253:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19273:2:9",
                                    "type": "",
                                    "value": "21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19246:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19246:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19246:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19296:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19307:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19292:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19292:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "19312:23:9",
                                    "type": "",
                                    "value": "Must be superior to 0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19285:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19285:51:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19285:51:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19345:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19357:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19368:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19353:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19353:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19345:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_b0163f2fb50c6c5784d12ab9af56eb359b1d810de577e2657eccb92b9a70f495__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "19183:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "19197:4:9",
                            "type": ""
                          }
                        ],
                        "src": "19032:345:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19556:300:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19573:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19584:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19566:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19566:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19566:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19607:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19618:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19603:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19603:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19623:2:9",
                                    "type": "",
                                    "value": "70"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19596:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19596:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19596:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19646:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19657:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19642:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19642:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "19662:34:9",
                                    "type": "",
                                    "value": "Can only run after genesisStartR"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19635:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19635:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19635:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19717:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19728:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19713:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19713:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "19733:34:9",
                                    "type": "",
                                    "value": "ound and genesisLockRound is tri"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19706:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19706:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19706:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19788:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19799:3:9",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19784:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19784:19:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "19805:8:9",
                                    "type": "",
                                    "value": "ggered"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19777:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19777:37:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19777:37:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19823:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19835:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19846:3:9",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19831:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19831:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19823:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_b0f2a84e88f57bf6d829bd69a411a43d04b00c018b197d9d18656699d1a2cb4f__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "19533:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "19547:4:9",
                            "type": ""
                          }
                        ],
                        "src": "19382:474:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20035:179:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20052:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20063:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20045:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20045:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20045:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20086:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20097:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20082:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20082:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20102:2:9",
                                    "type": "",
                                    "value": "29"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20075:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20075:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20075:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20125:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20136:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20121:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20121:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "20141:31:9",
                                    "type": "",
                                    "value": "Address: call to non-contract"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20114:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20114:59:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20114:59:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20182:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20194:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20205:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20190:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20190:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "20182:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "20012:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "20026:4:9",
                            "type": ""
                          }
                        ],
                        "src": "19861:353:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20393:171:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20410:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20421:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20403:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20403:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20403:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20444:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20455:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20440:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20440:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20460:2:9",
                                    "type": "",
                                    "value": "21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20433:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20433:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20433:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20483:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20494:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20479:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20479:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "20499:23:9",
                                    "type": "",
                                    "value": "Round has not started"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20472:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20472:51:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20472:51:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20532:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20544:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20555:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20540:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20540:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "20532:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_d1836faf5a24c20648fe1feea8bcbadf99f3e9a49b28354c8afadd4a78cb02f7__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "20370:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "20384:4:9",
                            "type": ""
                          }
                        ],
                        "src": "20219:345:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20743:177:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20760:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20771:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20753:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20753:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20753:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20794:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20805:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20790:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20790:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20810:2:9",
                                    "type": "",
                                    "value": "27"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20783:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20783:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20783:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20833:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20844:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20829:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20829:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "20849:29:9",
                                    "type": "",
                                    "value": "Can only bet once per round"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20822:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20822:57:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20822:57:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20888:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20900:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20911:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20896:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20896:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "20888:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_dd575bd5a920bf4d27ada0ef8c9f7ed8b7e1c23b2b408d861af2e5d02b5f7232__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "20720:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "20734:4:9",
                            "type": ""
                          }
                        ],
                        "src": "20569:351:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21099:232:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21116:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21127:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21109:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21109:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21109:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21150:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21161:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21146:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21146:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21166:2:9",
                                    "type": "",
                                    "value": "42"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21139:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21139:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21139:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21189:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21200:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21185:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21185:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "21205:34:9",
                                    "type": "",
                                    "value": "SafeERC20: ERC20 operation did n"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21178:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21178:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21178:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21260:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21271:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21256:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21256:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "21276:12:9",
                                    "type": "",
                                    "value": "ot succeed"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21249:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21249:40:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21249:40:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21298:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21310:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21321:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21306:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21306:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "21298:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "21076:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "21090:4:9",
                            "type": ""
                          }
                        ],
                        "src": "20925:406:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21510:181:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21527:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21538:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21520:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21520:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21520:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21561:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21572:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21557:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21557:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21577:2:9",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21550:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21550:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21550:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21600:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21611:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21596:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21596:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "21616:33:9",
                                    "type": "",
                                    "value": "ReentrancyGuard: reentrant call"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21589:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21589:61:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21589:61:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21659:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21671:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21682:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21667:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21667:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "21659:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "21487:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "21501:4:9",
                            "type": ""
                          }
                        ],
                        "src": "21336:355:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21870:171:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21887:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21898:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21880:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21880:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21880:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21921:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21932:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21917:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21917:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21937:2:9",
                                    "type": "",
                                    "value": "21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21910:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21910:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21910:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21960:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21971:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21956:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21956:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "21976:23:9",
                                    "type": "",
                                    "value": "Bet is too early/late"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21949:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21949:51:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21949:51:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22009:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22021:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22032:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22017:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22017:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "22009:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f0f9d6116fd050471235a880137dc204da2444049ba6e5a27070933145ecf8b2__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "21847:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "21861:4:9",
                            "type": ""
                          }
                        ],
                        "src": "21696:345:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22220:236:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22237:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22248:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22230:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22230:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22230:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22271:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22282:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22267:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22267:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22287:2:9",
                                    "type": "",
                                    "value": "46"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22260:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22260:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22260:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22310:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22321:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22306:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22306:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "22326:34:9",
                                    "type": "",
                                    "value": "Oracle update exceeded max times"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22299:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22299:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22299:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22381:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22392:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22377:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22377:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "22397:16:9",
                                    "type": "",
                                    "value": "tamp allowance"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22370:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22370:44:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22370:44:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22423:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22435:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22446:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22431:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22431:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "22423:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f33570aeabdc7840b27baeee2ba18f1f51901a851210e95175d48a2543a633e7__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "22197:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "22211:4:9",
                            "type": ""
                          }
                        ],
                        "src": "22046:410:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22635:162:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22652:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22663:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22645:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22645:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22645:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22686:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22697:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22682:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22682:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22702:2:9",
                                    "type": "",
                                    "value": "12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22675:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22675:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22675:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22725:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22736:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22721:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22721:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "22741:14:9",
                                    "type": "",
                                    "value": "Not operator"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22714:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22714:42:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22714:42:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22765:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22777:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22788:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22773:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22773:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "22765:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f62ead2258bbb12f965d46919f1c0f382053ba2024e91da3661aec8b15585f38__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "22612:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "22626:4:9",
                            "type": ""
                          }
                        ],
                        "src": "22461:336:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22976:158:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22993:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23004:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22986:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22986:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22986:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "23027:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "23038:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "23023:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23023:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23043:1:9",
                                    "type": "",
                                    "value": "9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23016:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23016:29:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23016:29:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "23065:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "23076:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "23061:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23061:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "23081:11:9",
                                    "type": "",
                                    "value": "Not admin"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23054:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23054:39:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23054:39:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "23102:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23114:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23125:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "23110:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23110:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "23102:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_fa7e120cf98867f00c0ac28b387a73caec64b93b1889065f7b4c5e5232c0bad6__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "22953:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "22967:4:9",
                            "type": ""
                          }
                        ],
                        "src": "22802:332:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23240:76:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "23250:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23262:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23273:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "23258:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23258:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "23250:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23292:9:9"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "23303:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23285:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23285:25:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23285:25:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "23209:9:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "23220:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "23231:4:9",
                            "type": ""
                          }
                        ],
                        "src": "23139:177:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23450:119:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "23460:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23472:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23483:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "23468:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23468:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "23460:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23502:9:9"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "23513:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23495:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23495:25:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23495:25:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "23540:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "23551:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "23536:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23536:18:9"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "23556:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23529:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23529:34:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23529:34:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "23411:9:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "23422:6:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "23430:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "23441:4:9",
                            "type": ""
                          }
                        ],
                        "src": "23321:248:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23731:162:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "23741:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23753:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23764:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "23749:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23749:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "23741:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23783:9:9"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "23794:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23776:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23776:25:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23776:25:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "23821:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "23832:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "23817:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23817:18:9"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "23837:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23810:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23810:34:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23810:34:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "23864:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "23875:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "23860:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23860:18:9"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "23880:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23853:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23853:34:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23853:34:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "23684:9:9",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "23695:6:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "23703:6:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "23711:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "23722:4:9",
                            "type": ""
                          }
                        ],
                        "src": "23574:319:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24357:666:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "24367:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "24379:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24390:3:9",
                                    "type": "",
                                    "value": "448"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "24375:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24375:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "24367:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "24410:9:9"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "24421:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24403:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24403:25:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24403:25:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24448:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24459:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24444:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24444:18:9"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "24464:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24437:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24437:34:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24437:34:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24491:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24502:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24487:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24487:18:9"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "24507:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24480:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24480:34:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24480:34:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24534:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24545:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24530:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24530:18:9"
                                  },
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "24550:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24523:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24523:34:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24523:34:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24577:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24588:3:9",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24573:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24573:19:9"
                                  },
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "24594:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24566:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24566:35:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24566:35:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24621:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24632:3:9",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24617:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24617:19:9"
                                  },
                                  {
                                    "name": "value5",
                                    "nodeType": "YulIdentifier",
                                    "src": "24638:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24610:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24610:35:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24610:35:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24665:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24676:3:9",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24661:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24661:19:9"
                                  },
                                  {
                                    "name": "value6",
                                    "nodeType": "YulIdentifier",
                                    "src": "24682:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24654:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24654:35:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24654:35:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24709:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24720:3:9",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24705:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24705:19:9"
                                  },
                                  {
                                    "name": "value7",
                                    "nodeType": "YulIdentifier",
                                    "src": "24726:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24698:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24698:35:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24698:35:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24753:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24764:3:9",
                                        "type": "",
                                        "value": "256"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24749:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24749:19:9"
                                  },
                                  {
                                    "name": "value8",
                                    "nodeType": "YulIdentifier",
                                    "src": "24770:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24742:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24742:35:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24742:35:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24797:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24808:3:9",
                                        "type": "",
                                        "value": "288"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24793:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24793:19:9"
                                  },
                                  {
                                    "name": "value9",
                                    "nodeType": "YulIdentifier",
                                    "src": "24814:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24786:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24786:35:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24786:35:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24841:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24852:3:9",
                                        "type": "",
                                        "value": "320"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24837:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24837:19:9"
                                  },
                                  {
                                    "name": "value10",
                                    "nodeType": "YulIdentifier",
                                    "src": "24858:7:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24830:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24830:36:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24830:36:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24886:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24897:3:9",
                                        "type": "",
                                        "value": "352"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24882:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24882:19:9"
                                  },
                                  {
                                    "name": "value11",
                                    "nodeType": "YulIdentifier",
                                    "src": "24903:7:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24875:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24875:36:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24875:36:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24931:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24942:3:9",
                                        "type": "",
                                        "value": "384"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24927:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24927:19:9"
                                  },
                                  {
                                    "name": "value12",
                                    "nodeType": "YulIdentifier",
                                    "src": "24948:7:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24920:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24920:36:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24920:36:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24976:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24987:3:9",
                                        "type": "",
                                        "value": "416"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24972:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24972:19:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value13",
                                            "nodeType": "YulIdentifier",
                                            "src": "25007:7:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "25000:6:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "25000:15:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "24993:6:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24993:23:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24965:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24965:52:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24965:52:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_int256_t_int256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_int256_t_int256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "24218:9:9",
                            "type": ""
                          },
                          {
                            "name": "value13",
                            "nodeType": "YulTypedName",
                            "src": "24229:7:9",
                            "type": ""
                          },
                          {
                            "name": "value12",
                            "nodeType": "YulTypedName",
                            "src": "24238:7:9",
                            "type": ""
                          },
                          {
                            "name": "value11",
                            "nodeType": "YulTypedName",
                            "src": "24247:7:9",
                            "type": ""
                          },
                          {
                            "name": "value10",
                            "nodeType": "YulTypedName",
                            "src": "24256:7:9",
                            "type": ""
                          },
                          {
                            "name": "value9",
                            "nodeType": "YulTypedName",
                            "src": "24265:6:9",
                            "type": ""
                          },
                          {
                            "name": "value8",
                            "nodeType": "YulTypedName",
                            "src": "24273:6:9",
                            "type": ""
                          },
                          {
                            "name": "value7",
                            "nodeType": "YulTypedName",
                            "src": "24281:6:9",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "24289:6:9",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "24297:6:9",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "24305:6:9",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "24313:6:9",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "24321:6:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "24329:6:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "24337:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "24348:4:9",
                            "type": ""
                          }
                        ],
                        "src": "23898:1125:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25155:148:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "25165:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "25177:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25188:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "25173:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25173:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "25165:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "25207:9:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "25222:6:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25230:22:9",
                                        "type": "",
                                        "value": "0xffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "25218:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25218:35:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25200:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25200:54:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25200:54:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25274:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25285:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25270:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25270:18:9"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "25290:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25263:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25263:34:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25263:34:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint80_t_uint256__to_t_uint80_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "25116:9:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "25127:6:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "25135:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "25146:4:9",
                            "type": ""
                          }
                        ],
                        "src": "25028:275:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25356:80:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "25383:22:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "25385:16:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "25385:18:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "25385:18:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "25372:1:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "25379:1:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "25375:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25375:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "25369:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25369:13:9"
                              },
                              "nodeType": "YulIf",
                              "src": "25366:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "25414:16:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "25425:1:9"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "25428:1:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "25421:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25421:9:9"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "25414:3:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "25339:1:9",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "25342:1:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "25348:3:9",
                            "type": ""
                          }
                        ],
                        "src": "25308:128:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25487:171:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "25518:111:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "r",
                                          "nodeType": "YulIdentifier",
                                          "src": "25539:1:9"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "25546:3:9",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "25551:10:9",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "25542:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "25542:20:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "25532:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "25532:31:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "25532:31:9"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "25583:1:9",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "25586:4:9",
                                          "type": "",
                                          "value": "0x12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "25576:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "25576:15:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "25576:15:9"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "r",
                                          "nodeType": "YulIdentifier",
                                          "src": "25611:1:9"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "25614:4:9",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "25604:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "25604:15:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "25604:15:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "25507:1:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "25500:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25500:9:9"
                              },
                              "nodeType": "YulIf",
                              "src": "25497:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "25638:14:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "25647:1:9"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "25650:1:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "25643:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25643:9:9"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "25638:1:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "25472:1:9",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "25475:1:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "25481:1:9",
                            "type": ""
                          }
                        ],
                        "src": "25441:217:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25715:116:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "25774:22:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "25776:16:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "25776:18:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "25776:18:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "25746:1:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "25739:6:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "25739:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "25732:6:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25732:17:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "25754:1:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "25765:1:9",
                                                "type": "",
                                                "value": "0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "25761:3:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "25761:6:9"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "25769:1:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nodeType": "YulIdentifier",
                                          "src": "25757:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "25757:14:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "25751:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25751:21:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "25728:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25728:45:9"
                              },
                              "nodeType": "YulIf",
                              "src": "25725:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "25805:20:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "25820:1:9"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "25823:1:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "25816:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25816:9:9"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nodeType": "YulIdentifier",
                                  "src": "25805:7:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "25694:1:9",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "25697:1:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nodeType": "YulTypedName",
                            "src": "25703:7:9",
                            "type": ""
                          }
                        ],
                        "src": "25663:168:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25885:76:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "25907:22:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "25909:16:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "25909:18:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "25909:18:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "25901:1:9"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "25904:1:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "25898:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25898:8:9"
                              },
                              "nodeType": "YulIf",
                              "src": "25895:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "25938:17:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "25950:1:9"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "25953:1:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "25946:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25946:9:9"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "25938:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "25867:1:9",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "25870:1:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "25876:4:9",
                            "type": ""
                          }
                        ],
                        "src": "25836:125:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26019:205:9",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "26029:10:9",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "26038:1:9",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "26033:1:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "26098:63:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "26123:3:9"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "26128:1:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "26119:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "26119:11:9"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "26142:3:9"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "26147:1:9"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "26138:3:9"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "26138:11:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "26132:5:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "26132:18:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "26112:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "26112:39:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "26112:39:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "26059:1:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "26062:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "26056:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26056:13:9"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "26070:19:9",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "26072:15:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "26081:1:9"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "26084:2:9",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "26077:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "26077:10:9"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "26072:1:9"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "26052:3:9",
                                "statements": []
                              },
                              "src": "26048:113:9"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "26187:31:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "26200:3:9"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "26205:6:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "26196:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "26196:16:9"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "26214:1:9",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "26189:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "26189:27:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "26189:27:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "26176:1:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "26179:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "26173:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26173:13:9"
                              },
                              "nodeType": "YulIf",
                              "src": "26170:2:9"
                            }
                          ]
                        },
                        "name": "copy_memory_to_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "25997:3:9",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "26002:3:9",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "26007:6:9",
                            "type": ""
                          }
                        ],
                        "src": "25966:258:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26276:88:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "26307:22:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "26309:16:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "26309:18:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "26309:18:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "26292:5:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "26303:1:9",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "26299:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26299:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "26289:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26289:17:9"
                              },
                              "nodeType": "YulIf",
                              "src": "26286:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "26338:20:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "26349:5:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26356:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "26345:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26345:13:9"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "26338:3:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "26258:5:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "26268:3:9",
                            "type": ""
                          }
                        ],
                        "src": "26229:135:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26401:95:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26418:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "26425:3:9",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "26430:10:9",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "26421:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26421:20:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "26411:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26411:31:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26411:31:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26458:1:9",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26461:4:9",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "26451:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26451:15:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26451:15:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26482:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26485:4:9",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "26475:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26475:15:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26475:15:9"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "26369:127:9"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_t_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(value0, value0) }\n        if gt(add(add(_2, mul(length, 32)), 32), dataEnd) { revert(value0, value0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := abi_decode_t_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_t_uint80_fromMemory(add(headStart, 128))\n    }\n    function abi_encode_t_enum$_Position(value, pos)\n    {\n        if iszero(lt(value, 2))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_struct$_BetInfo_$965_memory_ptr_$dyn_memory_ptr_t_uint256__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_struct$_BetInfo_$965_memory_ptr_$dyn_memory_ptr_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        let _1 := 96\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 128)\n        let _2 := 0x20\n        let srcPtr := add(value0, _2)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _2)\n            srcPtr := add(srcPtr, _2)\n        }\n        mstore(add(headStart, _2), sub(pos, headStart))\n        let pos_1 := pos\n        let length_1 := mload(value1)\n        mstore(pos, length_1)\n        pos_1 := add(pos, _2)\n        let srcPtr_1 := add(value1, _2)\n        let i_1 := tail\n        for { } lt(i_1, length_1) { i_1 := add(i_1, 1) }\n        {\n            let _3 := mload(srcPtr_1)\n            abi_encode_t_enum$_Position(mload(_3), pos_1)\n            mstore(add(pos_1, _2), mload(add(_3, _2)))\n            let _4 := 0x40\n            mstore(add(pos_1, _4), iszero(iszero(mload(add(_3, _4)))))\n            pos_1 := add(pos_1, _1)\n            srcPtr_1 := add(srcPtr_1, _2)\n        }\n        tail := pos_1\n        mstore(add(headStart, 0x40), value2)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$2869__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_enum$_Position_$928_t_uint256_t_bool__to_t_uint8_t_uint256_t_bool__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        abi_encode_t_enum$_Position(value0, headStart)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n    }\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_10916da313aec2d89ae884214021eae2adcdb0000848c813099dbdefabcb1887__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Not eligible for refund\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_11bdebae3580e3cc0aa83f4abe624d8a87da76af0e4eb2ea8382d5e81bd9d2ff__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Treasury fee too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_16f79d9e996c484c6ab868c786817e96a6590ee714435b79b344480dba01cfa6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Can only lock round after round \")\n        mstore(add(headStart, 96), \"has started\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_226e65b5af697b001702a7d9d66fa2076db3b23ec51e12a83cc0a19f174024ab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"Can only run after genesisStartR\")\n        mstore(add(headStart, 96), \"ound is triggered\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_25e36640e6894539ca9141c17c2fb43b389e358f68c3c034f58f90400971fe8d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Can only start round after round\")\n        mstore(add(headStart, 96), \" n-2 has ended\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_26bf7200ac9064fd4cd504d65207afe4b5d3eae2249dd8e9100c923d5898f73e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"Oracle update roundId must be la\")\n        mstore(add(headStart, 96), \"rger than oracleLatestRoundId\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_305b29a5e5f4ae7fa6be0480743fbd9163344a67bcc8501056392462fe190019__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Can only end round within buffer\")\n        mstore(add(headStart, 96), \"Seconds\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3121f7b79283aa0596509798902a70205287bb5aa7cf6024beaaf19d6d89ba68__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Contract not allowed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_33274a361372ebeacba5c8e2184d7f229ddb12fab7235d1315991afd5a00ecae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"bufferSeconds must be inferior t\")\n        mstore(add(headStart, 96), \"o intervalSeconds\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4485251d168175c070f4245faf8e035abbbbeb2b93ec5dd30a17635d7bf82fa6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Not eligible for claim\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4615b616084e6afd7e2bfca1c1e6bf78f2c06f5fdc371de5a933a8c06c2f3c13__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Can only lock round after lockTi\")\n        mstore(add(headStart, 96), \"mestamp\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_48314e39a2428c78f4a19c0e2084c27c66b28314dadb8ba08949064279800d81__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 55)\n        mstore(add(headStart, 64), \"Can only start new round after r\")\n        mstore(add(headStart, 96), \"ound n-2 closeTimestamp\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_49d662e2e497c75dff2142bf1640750ac7d04cac14a37cbabfe479aeb27de903__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Not operator/admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_54c1dd6be5b30f20d2093c3e980ed73015a2bbe4a9e8d6c4aca1b60af3f18649__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Can only run genesisLockRound on\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5aeb1b443dcf74ebb83f5c8c495d0ea37b2ffe70aeaa05c678145c1dbd7a2459__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Can only end round after closeTi\")\n        mstore(add(headStart, 96), \"mestamp\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5d7676630e3121bb49b4e3f5dacd5e86304058e320b99ad1413edecdac7e31f1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Rewards calculated\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5fe536c9da26cf95bc38483dac26360eaee1c4fa3afa56386df6147c7417b834__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Bet amount must be greater than \")\n        mstore(add(headStart, 96), \"minBetAmount\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_620bac5ce7ce07e7a24266f5d1f82fa5a6fdb12107b06bacff04582c4c3dd298__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Round has not ended\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_65d9ebfb7b417d357c54ae150ee53f546dcdaa39c58b14378727fa7829cd41f8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Can only lock round within buffe\")\n        mstore(add(headStart, 96), \"rSeconds\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Cannot be zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_805913a464b2b4d6ef9cb52137d9a1509b46d9c4cc7c32415f075bb6c16a902c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Proxy contract not allowed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9467863e3764bbf747d24553c19d99fc49cca97052f5c00c2434168c38e42324__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"TransferHelper: One_TRANSFER_FAI\")\n        mstore(add(headStart, 96), \"LED\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a2d0442ca18c3ecfac48145ee9309c30cdc48c9f8ead495b5b73042b901b9c63__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Round not bettable\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a41dd959f6b8d59908b2f9cf13a8d0d10d9949d4d11b448e785beca06fef42a1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Can only end round after round h\")\n        mstore(add(headStart, 96), \"as locked\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a9ea304ddc1d813a52e1a9668db582745527adccdd0906ce8d85b183192c0132__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Can only run genesisStartRound o\")\n        mstore(add(headStart, 96), \"nce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b0163f2fb50c6c5784d12ab9af56eb359b1d810de577e2657eccb92b9a70f495__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Must be superior to 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b0f2a84e88f57bf6d829bd69a411a43d04b00c018b197d9d18656699d1a2cb4f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 70)\n        mstore(add(headStart, 64), \"Can only run after genesisStartR\")\n        mstore(add(headStart, 96), \"ound and genesisLockRound is tri\")\n        mstore(add(headStart, 128), \"ggered\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d1836faf5a24c20648fe1feea8bcbadf99f3e9a49b28354c8afadd4a78cb02f7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Round has not started\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_dd575bd5a920bf4d27ada0ef8c9f7ed8b7e1c23b2b408d861af2e5d02b5f7232__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Can only bet once per round\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f0f9d6116fd050471235a880137dc204da2444049ba6e5a27070933145ecf8b2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Bet is too early/late\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f33570aeabdc7840b27baeee2ba18f1f51901a851210e95175d48a2543a633e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Oracle update exceeded max times\")\n        mstore(add(headStart, 96), \"tamp allowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f62ead2258bbb12f965d46919f1c0f382053ba2024e91da3661aec8b15585f38__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Not operator\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fa7e120cf98867f00c0ac28b387a73caec64b93b1889065f7b4c5e5232c0bad6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"Not admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_int256_t_int256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_int256_t_int256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value13, value12, value11, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 448)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n        mstore(add(headStart, 256), value8)\n        mstore(add(headStart, 288), value9)\n        mstore(add(headStart, 320), value10)\n        mstore(add(headStart, 352), value11)\n        mstore(add(headStart, 384), value12)\n        mstore(add(headStart, 416), iszero(iszero(value13)))\n    }\n    function abi_encode_tuple_t_uint80_t_uint256__to_t_uint80_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
                  "id": 9,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436106102665760003560e01c80637d1cd04f11610144578063cc32d176116100b6578063ec3247031161007a578063ec324703146106ad578063f2b3c809146106c2578063f2fde38b146106d7578063f7fdec28146106f7578063fa968eea1461070c578063fc6f94681461072157610266565b8063cc32d1761461062e578063cf2f503914610643578063d9d55eac14610663578063dd1f759614610678578063eaba23611461069857610266565b80638da5cb5b116101085780638da5cb5b14610577578063951fd6001461058c578063a0c7f71c146105bb578063aa6b873a146105db578063b29a8140146105ee578063b3ab15fb1461060e57610266565b80637d1cd04f146104de5780637dc0d1d0146104f35780638456cb5914610508578063890dc7661461051d5780638c65c81f1461053d57610266565b80636ba4c138116101dd57806376671808116101a1578063766718081461043f57806377e741c714610454578063796b89b9146104745780637adbf973146104895780637b3205f5146104a95780637bf41254146104be57610266565b80636ba4c1381461039b5780636c188593146103bb578063704b6c02146103db578063715018a6146103fb5780637285c58b1461041057610266565b8063368acb091161022f578063368acb091461031f5780633f4ba83a14610334578063452fd75a1461034957806357fb096f1461035e5780635c975abb14610371578063605540111461038657610266565b80623bdc741461026b5780630f74174f14610282578063127effb2146102ad578063273867d4146102cf57806329b72441146102fc575b600080fd5b34801561027757600080fd5b50610280610736565b005b34801561028e57600080fd5b506102976107ee565b6040516102a49190613047565b60405180910390f35b3480156102b957600080fd5b506102c26107fe565b6040516102a49190612f78565b3480156102db57600080fd5b506102ef6102ea366004612d80565b61080d565b6040516102a49190613076565b34801561030857600080fd5b5061031161082c565b6040516102a4929190613b1e565b34801561032b57600080fd5b506102ef6108c9565b34801561034057600080fd5b506102806108cf565b34801561035557600080fd5b50610280610961565b61028061036c366004612e84565b610a0b565b34801561037d57600080fd5b50610297610c02565b34801561039257600080fd5b506102ef610c12565b3480156103a757600080fd5b506102806103b6366004612df5565b610c18565b3480156103c757600080fd5b506102806103d6366004612e84565b6110fc565b3480156103e757600080fd5b506102806103f6366004612d80565b6111aa565b34801561040757600080fd5b50610280611265565b34801561041c57600080fd5b5061043061042b366004612e9c565b6112b0565b6040516102a493929190613052565b34801561044b57600080fd5b506102ef6112e1565b34801561046057600080fd5b5061028061046f366004612e84565b6112e7565b34801561048057600080fd5b506102ef61138f565b34801561049557600080fd5b506102806104a4366004612d80565b611393565b3480156104b557600080fd5b506102806114d4565b3480156104ca57600080fd5b506102976104d9366004612e9c565b6115ef565b3480156104ea57600080fd5b506102ef61177b565b3480156104ff57600080fd5b506102c2611781565b34801561051457600080fd5b50610280611790565b34801561052957600080fd5b50610280610538366004612ec7565b61182a565b34801561054957600080fd5b5061055d610558366004612e84565b6118df565b6040516102a49e9d9c9b9a99989796959493929190613ab9565b34801561058357600080fd5b506102c261194f565b34801561059857600080fd5b506105ac6105a7366004612dc3565b61195e565b6040516102a493929190612fa5565b3480156105c757600080fd5b506102976105d6366004612e9c565b611c13565b6102806105e9366004612e84565b611e13565b3480156105fa57600080fd5b50610280610609366004612d9a565b611ffb565b34801561061a57600080fd5b50610280610629366004612d80565b612093565b34801561063a57600080fd5b506102ef61212e565b34801561064f57600080fd5b5061028061065e366004612e84565b612134565b34801561066f57600080fd5b506102806121b7565b34801561068457600080fd5b506102ef610693366004612d9a565b6122c1565b3480156106a457600080fd5b506102ef6122f2565b3480156106b957600080fd5b506102ef6122f8565b3480156106ce57600080fd5b506102ef6122fe565b3480156106e357600080fd5b506102806106f2366004612d80565b612304565b34801561070357600080fd5b50610297612375565b34801561071857600080fd5b506102ef612385565b34801561072d57600080fd5b506102c261238b565b600260015414156107625760405162461bcd60e51b815260040161075990613998565b60405180910390fd5b60026001556003546001600160a01b031633146107915760405162461bcd60e51b815260040161075990613a72565b6009805460009091556003546107b0906001600160a01b03168261239a565b7fb9197c6b8e21274bd1e2d9c956a88af5cfee510f630fab3f046300f88b422361816040516107df9190613076565b60405180910390a15060018055565b600254600160a01b900460ff1681565b6004546001600160a01b031681565b6001600160a01b0381166000908152600f60205260409020545b919050565b6000806000600260009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561087f57600080fd5b505afa158015610893573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b79190612ee8565b5050600b549295509193505050509091565b60095481565b6108d7610c02565b6108f35760405162461bcd60e51b8152600401610759906130b2565b6003546001600160a01b0316331461091d5760405162461bcd60e51b815260040161075990613a72565b6002805461ffff60a01b1916905561093361241b565b600a546040517faaa520fdd7d2c83061d632fa017b0432407e798818af63ea908589fceda39ab790600090a2565b610969610c02565b156109865760405162461bcd60e51b815260040161075990613655565b6004546001600160a01b031633146109b05760405162461bcd60e51b815260040161075990613a4c565b600254600160a81b900460ff16156109da5760405162461bcd60e51b8152600401610759906137d3565b600a546109e8906001613b37565b600a8190556109f69061248c565b6002805460ff60a81b1916600160a81b179055565b610a13610c02565b15610a305760405162461bcd60e51b815260040161075990613655565b60026001541415610a535760405162461bcd60e51b815260040161075990613998565b6002600155610a613361250a565b15610a7e5760405162461bcd60e51b81526004016107599061331a565b333214610a9d5760405162461bcd60e51b8152600401610759906136af565b600a548114610abe5760405162461bcd60e51b8152600401610759906139cf565b610ac781612510565b610ae35760405162461bcd60e51b81526004016107599061375e565b600754341015610b055760405162461bcd60e51b815260040161075990613594565b6000818152600d6020908152604080832033845290915290206001015415610b3f5760405162461bcd60e51b815260040161075990613917565b6000818152600e602052604090206008810154349190610b60908390613b37565b60088201556009810154610b75908390613b37565b60098201556000838152600d6020908152604080832033808552908352818420805460ff191681556001808201889055600f855283862080549182018155865293909420909201869055518591907f438122d8cff518d18388099a5181f0d17a12b4f1b55faedf6e4a6acee0060c1290610bf0908790613076565b60405180910390a35050600180555050565b600054600160a01b900460ff1690565b600c5481565b60026001541415610c3b5760405162461bcd60e51b815260040161075990613998565b6002600155610c493361250a565b15610c665760405162461bcd60e51b81526004016107599061331a565b333214610c855760405162461bcd60e51b8152600401610759906136af565b6000805b828110156110e257600e6000858584818110610cb557634e487b7160e01b600052603260045260246000fd5b9050602002013581526020019081526020016000206001015460001415610cee5760405162461bcd60e51b8152600401610759906138e8565b600e6000858584818110610d1257634e487b7160e01b600052603260045260246000fd5b905060200201358152602001908152602001600020600301544211610d495760405162461bcd60e51b8152600401610759906135e0565b6000600e6000868685818110610d6f57634e487b7160e01b600052603260045260246000fd5b60209081029290920135835250810191909152604001600020600d015460ff1615610f4e57610dc4858584818110610db757634e487b7160e01b600052603260045260246000fd5b9050602002013533611c13565b610de05760405162461bcd60e51b815260040161075990613399565b6000600e6000878786818110610e0657634e487b7160e01b600052603260045260246000fd5b905060200201358152602001908152602001600020604051806101c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b8201548152602001600c8201548152602001600d820160009054906101000a900460ff1615151515815250509050806101600151816101800151600d6000898988818110610ef657634e487b7160e01b600052603260045260246000fd5b9050602002013581526020019081526020016000206000336001600160a01b03166001600160a01b0316815260200190815260200160002060010154610f3c9190613b6f565b610f469190613b4f565b915050610ffd565b610f7e858584818110610f7157634e487b7160e01b600052603260045260246000fd5b90506020020135336115ef565b610f9a5760405162461bcd60e51b8152600401610759906130e0565b600d6000868685818110610fbe57634e487b7160e01b600052603260045260246000fd5b9050602002013581526020019081526020016000206000336001600160a01b03166001600160a01b031681526020019081526020016000206001015490505b6001600d600087878681811061102357634e487b7160e01b600052603260045260246000fd5b6020908102929092013583525081810192909252604090810160009081203382529092529020600201805460ff19169115159190911790556110658184613b37565b925084848381811061108757634e487b7160e01b600052603260045260246000fd5b90506020020135336001600160a01b03167f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf7836040516110c79190613076565b60405180910390a350806110da81613bd5565b915050610c89565b5080156110f3576110f3338261239a565b50506001805550565b611104610c02565b6111205760405162461bcd60e51b8152600401610759906130b2565b6003546001600160a01b0316331461114a5760405162461bcd60e51b815260040161075990613a72565b806111675760405162461bcd60e51b815260040161075990613816565b6007819055600a546040517f90eb87c560a0213754ceb3a7fa3012f01acab0a35602c1e1995adf69dabc9d509061119f908490613076565b60405180910390a250565b6111b261257b565b6001600160a01b03166111c361194f565b6001600160a01b0316146111e95760405162461bcd60e51b815260040161075990613729565b6001600160a01b03811661120f5760405162461bcd60e51b81526004016107599061367f565b600380546001600160a01b0319166001600160a01b0383161790556040517f137b621413925496477d46e5055ac0d56178bdd724ba8bf843afceef18268ba39061125a908390612f78565b60405180910390a150565b61126d61257b565b6001600160a01b031661127e61194f565b6001600160a01b0316146112a45760405162461bcd60e51b815260040161075990613729565b6112ae600061257f565b565b600d60209081526000928352604080842090915290825290208054600182015460029092015460ff91821692911683565b600a5481565b6112ef610c02565b61130b5760405162461bcd60e51b8152600401610759906130b2565b6003546001600160a01b031633146113355760405162461bcd60e51b815260040161075990613a72565b6103e88111156113575760405162461bcd60e51b815260040161075990613117565b6008819055600a546040517fb1c4ee38d35556741133da7ff9b6f7ab0fa88d0406133126ff128f635490a8579061119f908490613076565b4290565b61139b610c02565b6113b75760405162461bcd60e51b8152600401610759906130b2565b6003546001600160a01b031633146113e15760405162461bcd60e51b815260040161075990613a72565b6001600160a01b0381166114075760405162461bcd60e51b81526004016107599061367f565b6000600b55600280546001600160a01b0319166001600160a01b03838116919091179182905560408051633fabe5a360e21b81529051929091169163feaf968c9160048082019260a092909190829003018186803b15801561146857600080fd5b505afa15801561147c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a09190612ee8565b50505050507fb3eacd0e351fafdfefdec84e1cd19679b38dbcd63ea7c2c24da17fd2bc3b3c0e8160405161125a9190612f78565b6114dc610c02565b156114f95760405162461bcd60e51b815260040161075990613655565b6004546001600160a01b031633146115235760405162461bcd60e51b815260040161075990613a4c565b600254600160a81b900460ff1680156115455750600254600160a01b900460ff165b6115615760405162461bcd60e51b815260040161075990613845565b60008061156c6125cf565b91509150816001600160501b0316600b81905550611596600a54836001600160501b0316836126cc565b6115b86001600a546115a89190613b8e565b836001600160501b0316836127d9565b6115cf6001600a546115ca9190613b8e565b6128d6565b600a546115dd906001613b37565b600a8190556115eb90612a2a565b5050565b6000828152600d602090815260408083206001600160a01b0385168452909152808220815160608101909252805483929190829060ff16600181111561164557634e487b7160e01b600052602160045260246000fd5b600181111561166457634e487b7160e01b600052602160045260246000fd5b815260018281015460208084019190915260029384015460ff908116151560409485015260008a8152600e835284902084516101c08101865281548152938101549284019290925293810154928201929092526003820154606082015260048201546080820152600582015460a0820152600682015460c0820152600782015460e082015260088201546101008201526009820154610120820152600a820154610140820152600b820154610160820152600c820154610180820152600d909101549091161580156101a08301819052929350909161174557508160400151155b80156117615750600554816060015161175e9190613b37565b42115b80156117705750602082015115155b925050505b92915050565b60065481565b6002546001600160a01b031681565b611798610c02565b156117b55760405162461bcd60e51b815260040161075990613655565b6003546001600160a01b03163314806117d857506004546001600160a01b031633145b6117f45760405162461bcd60e51b81526004016107599061346d565b6117fc612add565b600a546040517f68b095021b1f40fe513109f513c66692f0b3219aee674a69f4efc57badb8201d90600090a2565b611832610c02565b61184e5760405162461bcd60e51b8152600401610759906130b2565b6003546001600160a01b031633146118785760405162461bcd60e51b815260040161075990613a72565b8082106118975760405162461bcd60e51b815260040161075990613348565b600582905560068190556040517fe60149e0431fec12df63dfab5fce2a9cefe9a4d3df5f41cb626f579ae1f2b91a906118d39084908490613a95565b60405180910390a15050565b600e60205260009081526040902080546001820154600283015460038401546004850154600586015460068701546007880154600889015460098a0154600a8b0154600b8c0154600c8d0154600d909d01549b9c9a9b999a98999798969795969495939492939192909160ff168e565b6000546001600160a01b031690565b6001600160a01b0383166000908152600f602052604081205460609182918490611989908790613b8e565b8111156119b7576001600160a01b0387166000908152600f60205260409020546119b4908790613b8e565b90505b60008167ffffffffffffffff8111156119e057634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611a09578160200160208202803683370190505b50905060008267ffffffffffffffff811115611a3557634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611a6e57816020015b611a5b612d30565b815260200190600190039081611a535790505b50905060005b83811015611bf4576001600160a01b038a166000908152600f60205260409020611a9e828b613b37565b81548110611abc57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154838281518110611ae757634e487b7160e01b600052603260045260246000fd5b602002602001018181525050600d6000848381518110611b1757634e487b7160e01b600052603260045260246000fd5b602090810291909101810151825281810192909252604090810160009081206001600160a01b038e168252909252908190208151606081019092528054829060ff166001811115611b7857634e487b7160e01b600052602160045260246000fd5b6001811115611b9757634e487b7160e01b600052602160045260246000fd5b81526001820154602082015260029091015460ff1615156040909101528251839083908110611bd657634e487b7160e01b600052603260045260246000fd5b60200260200101819052508080611bec90613bd5565b915050611a74565b508181611c01858b613b37565b95509550955050505093509350939050565b6000828152600d602090815260408083206001600160a01b0385168452909152808220815160608101909252805483929190829060ff166001811115611c6957634e487b7160e01b600052602160045260246000fd5b6001811115611c8857634e487b7160e01b600052602160045260246000fd5b815260018281015460208084019190915260029384015460ff908116151560409485015260008a8152600e835284902084516101c081018652815481529381015492840192909252938101549282019290925260038201546060820152600482015460808201819052600583015460a08301819052600684015460c0840152600784015460e084015260088401546101008401526009840154610120840152600a840154610140840152600b840154610160840152600c840154610180840152600d9093015490931615156101a08201529293501415611d6d57600092505050611775565b806101a001518015611d825750602082015115155b8015611d9057508160400151155b8015611770575080608001518160a00151138015611dce5750600082516001811115611dcc57634e487b7160e01b600052602160045260246000fd5b145b80611770575080608001518160a001511280156117705750600182516001811115611e0957634e487b7160e01b600052602160045260246000fd5b1495945050505050565b611e1b610c02565b15611e385760405162461bcd60e51b815260040161075990613655565b60026001541415611e5b5760405162461bcd60e51b815260040161075990613998565b6002600155611e693361250a565b15611e865760405162461bcd60e51b81526004016107599061331a565b333214611ea55760405162461bcd60e51b8152600401610759906136af565b600a548114611ec65760405162461bcd60e51b8152600401610759906139cf565b611ecf81612510565b611eeb5760405162461bcd60e51b81526004016107599061375e565b600754341015611f0d5760405162461bcd60e51b815260040161075990613594565b6000818152600d6020908152604080832033845290915290206001015415611f475760405162461bcd60e51b815260040161075990613917565b6000818152600e602052604090206008810154349190611f68908390613b37565b6008820155600a810154611f7d908390613b37565b600a8201556000838152600d6020908152604080832033808552908352818420805460ff191660019081178255808201889055600f855283862080549182018155865293909420909201869055518591907f0d8c1fe3e67ab767116a81f122b83c2557a8c2564019cb7c4f83de1aeb1f1f0d90610bf0908790613076565b61200361257b565b6001600160a01b031661201461194f565b6001600160a01b03161461203a5760405162461bcd60e51b815260040161075990613729565b61204e6001600160a01b0383163383612b3e565b816001600160a01b03167f14f11966a996e0629572e51064726d2057a80fbd34efc066682c06a71dbb6e98826040516120879190613076565b60405180910390a25050565b6003546001600160a01b031633146120bd5760405162461bcd60e51b815260040161075990613a72565b6001600160a01b0381166120e35760405162461bcd60e51b81526004016107599061367f565b600480546001600160a01b0319166001600160a01b0383161790556040517fc47d127c07bdd56c5ccba00463ce3bd3c1bca71b4670eea6e5d0c02e4aa156e29061125a908390612f78565b60085481565b61213c610c02565b6121585760405162461bcd60e51b8152600401610759906130b2565b6003546001600160a01b031633146121825760405162461bcd60e51b815260040161075990613a72565b600c8190556040517f93ccaceac092ffb842c46b8718667a13a80e9058dcd0bd403d0b47215b30da079061125a908390613076565b6121bf610c02565b156121dc5760405162461bcd60e51b815260040161075990613655565b6004546001600160a01b031633146122065760405162461bcd60e51b815260040161075990613a4c565b600254600160a81b900460ff1661222f5760405162461bcd60e51b815260040161075990613191565b600254600160a01b900460ff16156122595760405162461bcd60e51b815260040161075990613499565b6000806122646125cf565b91509150816001600160501b0316600b8190555061228e600a54836001600160501b0316836126cc565b600a5461229c906001613b37565b600a8190556122aa9061248c565b50506002805460ff60a01b1916600160a01b179055565b600f60205281600052604060002081815481106122dd57600080fd5b90600052602060002001600091509150505481565b60055481565b600b5481565b6103e881565b61230c61257b565b6001600160a01b031661231d61194f565b6001600160a01b0316146123435760405162461bcd60e51b815260040161075990613729565b6001600160a01b0381166123695760405162461bcd60e51b8152600401610759906131e2565b6123728161257f565b50565b600254600160a81b900460ff1681565b60075481565b6003546001600160a01b031681565b6000826001600160a01b0316826040516123b390612f75565b60006040518083038185875af1925050503d80600081146123f0576040519150601f19603f3d011682016040523d82523d6000602084013e6123f5565b606091505b50509050806124165760405162461bcd60e51b8152600401610759906136e6565b505050565b612423610c02565b61243f5760405162461bcd60e51b8152600401610759906130b2565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61247561257b565b6040516124829190612f78565b60405180910390a1565b6000818152600e6020526040902042600182018190556006546124ae91613b37565b6002808301919091556006546124c391613b6f565b6124cd9042613b37565b600382015581815560006008820181905560405183917f939f42374aa9bf1d8d8cd56d8a9110cb040cd8dfeae44080c6fcf2645e51b45291a25050565b3b151590565b6000818152600e60205260408120600101541580159061254057506000828152600e602052604090206002015415155b801561255c57506000828152600e602052604090206001015442115b80156117755750506000908152600e6020526040902060020154421090565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000600c54426125e29190613b37565b90506000806000600260009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561263757600080fd5b505afa15801561264b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061266f9190612ee8565b5093505092509250838111156126975760405162461bcd60e51b8152600401610759906139fe565b600b54836001600160501b0316116126c15760405162461bcd60e51b815260040161075990613276565b509093509150509091565b6000838152600e60205260409020600101546126fa5760405162461bcd60e51b815260040161075990613146565b6000838152600e602052604090206002015442101561272b5760405162461bcd60e51b8152600401610759906133c9565b6005546000848152600e602052604090206002015461274a9190613b37565b4211156127695760405162461bcd60e51b81526004016107599061360d565b6000838152600e602052604090206006546127849042613b37565b60038201556004810182905560068101839055604051839085907f482e76a65b448a42deef26e99e58fb20c85e26f075defff8df6aa80459b39006906127cb908690613076565b60405180910390a350505050565b6000838152600e60205260409020600201546128075760405162461bcd60e51b81526004016107599061378a565b6000838152600e60205260409020600301544210156128385760405162461bcd60e51b815260040161075990613521565b6005546000848152600e60205260409020600301546128579190613b37565b4211156128765760405162461bcd60e51b8152600401610759906132d3565b6000838152600e6020526040908190206005810183905560078101849055600d8101805460ff191660011790559051839085907fb6ff1fe915db84788cbbbc017f0d2bef9485fad9fd0bd8ce9340fde0d8410dd8906127cb908690613076565b6000818152600e60205260409020600b015415801561290457506000818152600e60205260409020600c0154155b6129205760405162461bcd60e51b815260040161075990613568565b6000818152600e6020526040812060048101546005820154919291829182911315612984578360090154925061271060085485600801546129619190613b6f565b61296b9190613b4f565b915081846008015461297d9190613b8e565b90506129bd565b8360040154846005015412156129b05783600a0154925061271060085485600801546129619190613b6f565b5050506008810154600090815b600b8401839055600c8401819055600980548391906000906129e0908490613b37565b92505081905550847f6dfdfcb09c8804d0058826cd2539f1acfbe3cb887c9be03d928035bce0f1a58d848385604051612a1b93929190613aa3565b60405180910390a25050505050565b600254600160a81b900460ff16612a535760405162461bcd60e51b815260040161075990613191565b600e6000612a62600284613b8e565b81526020019081526020016000206003015460001415612a945760405162461bcd60e51b815260040161075990613228565b600e6000612aa3600284613b8e565b815260200190815260200160002060030154421015612ad45760405162461bcd60e51b815260040161075990613410565b6123728161248c565b612ae5610c02565b15612b025760405162461bcd60e51b815260040161075990613655565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861247561257b565b6124168363a9059cbb60e01b8484604051602401612b5d929190612f8c565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526000612be4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612c1e9092919063ffffffff16565b8051909150156124165780806020019051810190612c029190612e64565b6124165760405162461bcd60e51b81526004016107599061394e565b6060612c2d8484600085612c37565b90505b9392505050565b606082471015612c595760405162461bcd60e51b8152600401610759906134db565b612c628561250a565b612c7e5760405162461bcd60e51b8152600401610759906138b1565b600080866001600160a01b03168587604051612c9a9190612f59565b60006040518083038185875af1925050503d8060008114612cd7576040519150601f19603f3d011682016040523d82523d6000602084013e612cdc565b606091505b5091509150612cec828286612cf7565b979650505050505050565b60608315612d06575081612c30565b825115612d165782518084602001fd5b8160405162461bcd60e51b8152600401610759919061307f565b6040805160608101909152806000815260006020820181905260409091015290565b80356001600160a01b038116811461082757600080fd5b80516001600160501b038116811461082757600080fd5b600060208284031215612d91578081fd5b612c3082612d52565b60008060408385031215612dac578081fd5b612db583612d52565b946020939093013593505050565b600080600060608486031215612dd7578081fd5b612de084612d52565b95602085013595506040909401359392505050565b60008060208385031215612e07578182fd5b823567ffffffffffffffff80821115612e1e578384fd5b818501915085601f830112612e31578384fd5b813581811115612e3f578485fd5b8660208083028501011115612e52578485fd5b60209290920196919550909350505050565b600060208284031215612e75578081fd5b81518015158114612c30578182fd5b600060208284031215612e95578081fd5b5035919050565b60008060408385031215612eae578182fd5b82359150612ebe60208401612d52565b90509250929050565b60008060408385031215612ed9578182fd5b50508035926020909101359150565b600080600080600060a08688031215612eff578081fd5b612f0886612d69565b9450602086015193506040860151925060608601519150612f2b60808701612d69565b90509295509295909350565b60028110612f5557634e487b7160e01b600052602160045260246000fd5b9052565b60008251612f6b818460208701613ba5565b9190910192915050565b90565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b60608082528451828201819052600091906020906080850190828901855b82811015612fdf57815184529284019290840190600101612fc3565b50505084810382860152865180825287830191830190855b8181101561303057835161300c848251612f37565b80860151848701526040908101511515908401529284019291850191600101612ff7565b505080945050505050826040830152949350505050565b901515815260200190565b606081016130608286612f37565b8360208301528215156040830152949350505050565b90815260200190565b600060208252825180602084015261309e816040850160208701613ba5565b601f01601f19169190910160400192915050565b60208082526014908201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604082015260600190565b60208082526017908201527f4e6f7420656c696769626c6520666f7220726566756e64000000000000000000604082015260600190565b6020808252601590820152740a8e4cac2e6eae4f240cccaca40e8dede40d0d2ced605b1b604082015260600190565b6020808252602b908201527f43616e206f6e6c79206c6f636b20726f756e6420616674657220726f756e642060408201526a1a185cc81cdd185c9d195960aa1b606082015260800190565b60208082526031908201527f43616e206f6e6c792072756e2061667465722067656e657369735374617274526040820152701bdd5b99081a5cc81d1c9a59d9d95c9959607a1b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252602e908201527f43616e206f6e6c7920737461727420726f756e6420616674657220726f756e6460408201526d081b8b4c881a185cc8195b99195960921b606082015260800190565b6020808252603d908201527f4f7261636c652075706461746520726f756e644964206d757374206265206c6160408201527f72676572207468616e206f7261636c654c6174657374526f756e644964000000606082015260800190565b60208082526027908201527f43616e206f6e6c7920656e6420726f756e642077697468696e206275666665726040820152665365636f6e647360c81b606082015260800190565b60208082526014908201527310dbdb9d1c9858dd081b9bdd08185b1b1bddd95960621b604082015260600190565b60208082526031908201527f6275666665725365636f6e6473206d75737420626520696e666572696f7220746040820152706f20696e74657276616c5365636f6e647360781b606082015260800190565b6020808252601690820152754e6f7420656c696769626c6520666f7220636c61696d60501b604082015260600190565b60208082526027908201527f43616e206f6e6c79206c6f636b20726f756e64206166746572206c6f636b546960408201526606d657374616d760cc1b606082015260800190565b60208082526037908201527f43616e206f6e6c79207374617274206e657720726f756e64206166746572207260408201527f6f756e64206e2d3220636c6f736554696d657374616d70000000000000000000606082015260800190565b6020808252601290820152712737ba1037b832b930ba37b917b0b236b4b760711b604082015260600190565b60208082526022908201527f43616e206f6e6c792072756e2067656e657369734c6f636b526f756e64206f6e604082015261636560f01b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b60208082526027908201527f43616e206f6e6c7920656e6420726f756e6420616674657220636c6f7365546960408201526606d657374616d760cc1b606082015260800190565b60208082526012908201527114995dd85c991cc818d85b18dd5b185d195960721b604082015260600190565b6020808252602c908201527f42657420616d6f756e74206d7573742062652067726561746572207468616e2060408201526b1b5a5b90995d105b5bdd5b9d60a21b606082015260800190565b602080825260139082015272149bdd5b99081a185cc81b9bdd08195b991959606a1b604082015260600190565b60208082526028908201527f43616e206f6e6c79206c6f636b20726f756e642077697468696e206275666665604082015267725365636f6e647360c01b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526016908201527543616e6e6f74206265207a65726f206164647265737360501b604082015260600190565b6020808252601a908201527f50726f787920636f6e7472616374206e6f7420616c6c6f776564000000000000604082015260600190565b60208082526023908201527f5472616e7366657248656c7065723a204f6e655f5452414e534645525f46414960408201526213115160ea1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260129082015271526f756e64206e6f74206265747461626c6560701b604082015260600190565b60208082526029908201527f43616e206f6e6c7920656e6420726f756e6420616674657220726f756e642068604082015268185cc81b1bd8dad95960ba1b606082015260800190565b60208082526023908201527f43616e206f6e6c792072756e2067656e657369735374617274526f756e64206f6040820152626e636560e81b606082015260800190565b60208082526015908201527404d757374206265207375706572696f7220746f203605c1b604082015260600190565b60208082526046908201527f43616e206f6e6c792072756e2061667465722067656e6573697353746172745260408201527f6f756e6420616e642067656e657369734c6f636b526f756e642069732074726960608201526519d9d95c995960d21b608082015260a00190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b602080825260159082015274149bdd5b99081a185cc81b9bdd081cdd185c9d1959605a1b604082015260600190565b6020808252601b908201527f43616e206f6e6c7920626574206f6e63652070657220726f756e640000000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526015908201527442657420697320746f6f206561726c792f6c61746560581b604082015260600190565b6020808252602e908201527f4f7261636c6520757064617465206578636565646564206d61782074696d657360408201526d74616d7020616c6c6f77616e636560901b606082015260800190565b6020808252600c908201526b2737ba1037b832b930ba37b960a11b604082015260600190565b6020808252600990820152682737ba1030b236b4b760b91b604082015260600190565b918252602082015260400190565b9283526020830191909152604082015260600190565b9d8e5260208e019c909c5260408d019a909a5260608c019890985260808b019690965260a08a019490945260c089019290925260e088015261010087015261012086015261014085015261016084015261018083015215156101a08201526101c00190565b6001600160501b03929092168252602082015260400190565b60008219821115613b4a57613b4a613bf0565b500190565b600082613b6a57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615613b8957613b89613bf0565b500290565b600082821015613ba057613ba0613bf0565b500390565b60005b83811015613bc0578181015183820152602001613ba8565b83811115613bcf576000848401525b50505050565b6000600019821415613be957613be9613bf0565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212208cdf84d51a04afc9f952857c3770c1534875e430725c5ddb5c71f2daced3dbc864736f6c63430008000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x266 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D1CD04F GT PUSH2 0x144 JUMPI DUP1 PUSH4 0xCC32D176 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xEC324703 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xEC324703 EQ PUSH2 0x6AD JUMPI DUP1 PUSH4 0xF2B3C809 EQ PUSH2 0x6C2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6D7 JUMPI DUP1 PUSH4 0xF7FDEC28 EQ PUSH2 0x6F7 JUMPI DUP1 PUSH4 0xFA968EEA EQ PUSH2 0x70C JUMPI DUP1 PUSH4 0xFC6F9468 EQ PUSH2 0x721 JUMPI PUSH2 0x266 JUMP JUMPDEST DUP1 PUSH4 0xCC32D176 EQ PUSH2 0x62E JUMPI DUP1 PUSH4 0xCF2F5039 EQ PUSH2 0x643 JUMPI DUP1 PUSH4 0xD9D55EAC EQ PUSH2 0x663 JUMPI DUP1 PUSH4 0xDD1F7596 EQ PUSH2 0x678 JUMPI DUP1 PUSH4 0xEABA2361 EQ PUSH2 0x698 JUMPI PUSH2 0x266 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x577 JUMPI DUP1 PUSH4 0x951FD600 EQ PUSH2 0x58C JUMPI DUP1 PUSH4 0xA0C7F71C EQ PUSH2 0x5BB JUMPI DUP1 PUSH4 0xAA6B873A EQ PUSH2 0x5DB JUMPI DUP1 PUSH4 0xB29A8140 EQ PUSH2 0x5EE JUMPI DUP1 PUSH4 0xB3AB15FB EQ PUSH2 0x60E JUMPI PUSH2 0x266 JUMP JUMPDEST DUP1 PUSH4 0x7D1CD04F EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x4F3 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x508 JUMPI DUP1 PUSH4 0x890DC766 EQ PUSH2 0x51D JUMPI DUP1 PUSH4 0x8C65C81F EQ PUSH2 0x53D JUMPI PUSH2 0x266 JUMP JUMPDEST DUP1 PUSH4 0x6BA4C138 GT PUSH2 0x1DD JUMPI DUP1 PUSH4 0x76671808 GT PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x76671808 EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0x77E741C7 EQ PUSH2 0x454 JUMPI DUP1 PUSH4 0x796B89B9 EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0x7ADBF973 EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0x7B3205F5 EQ PUSH2 0x4A9 JUMPI DUP1 PUSH4 0x7BF41254 EQ PUSH2 0x4BE JUMPI PUSH2 0x266 JUMP JUMPDEST DUP1 PUSH4 0x6BA4C138 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0x6C188593 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0x704B6C02 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x7285C58B EQ PUSH2 0x410 JUMPI PUSH2 0x266 JUMP JUMPDEST DUP1 PUSH4 0x368ACB09 GT PUSH2 0x22F JUMPI DUP1 PUSH4 0x368ACB09 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x452FD75A EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x57FB096F EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x60554011 EQ PUSH2 0x386 JUMPI PUSH2 0x266 JUMP JUMPDEST DUP1 PUSH3 0x3BDC74 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xF74174F EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x127EFFB2 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x273867D4 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x29B72441 EQ PUSH2 0x2FC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x736 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x3047 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C2 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x2F78 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0x2EA CALLDATASIZE PUSH1 0x4 PUSH2 0x2D80 JUMP JUMPDEST PUSH2 0x80D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x3076 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH2 0x82C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B1E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0x8C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x8CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x961 JUMP JUMPDEST PUSH2 0x280 PUSH2 0x36C CALLDATASIZE PUSH1 0x4 PUSH2 0x2E84 JUMP JUMPDEST PUSH2 0xA0B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0xC02 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0xC12 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x3B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF5 JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x3D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E84 JUMP JUMPDEST PUSH2 0x10FC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x3F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D80 JUMP JUMPDEST PUSH2 0x11AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x1265 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x430 PUSH2 0x42B CALLDATASIZE PUSH1 0x4 PUSH2 0x2E9C JUMP JUMPDEST PUSH2 0x12B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3052 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0x12E1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x460 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x46F CALLDATASIZE PUSH1 0x4 PUSH2 0x2E84 JUMP JUMPDEST PUSH2 0x12E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0x138F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x4A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D80 JUMP JUMPDEST PUSH2 0x1393 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x14D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x4D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E9C JUMP JUMPDEST PUSH2 0x15EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0x177B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C2 PUSH2 0x1781 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x514 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x1790 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x538 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC7 JUMP JUMPDEST PUSH2 0x182A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55D PUSH2 0x558 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E84 JUMP JUMPDEST PUSH2 0x18DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP15 SWAP14 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3AB9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C2 PUSH2 0x194F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x598 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5AC PUSH2 0x5A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DC3 JUMP JUMPDEST PUSH2 0x195E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2FA5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x5D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E9C JUMP JUMPDEST PUSH2 0x1C13 JUMP JUMPDEST PUSH2 0x280 PUSH2 0x5E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E84 JUMP JUMPDEST PUSH2 0x1E13 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x609 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9A JUMP JUMPDEST PUSH2 0x1FFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x629 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D80 JUMP JUMPDEST PUSH2 0x2093 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0x212E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x65E CALLDATASIZE PUSH1 0x4 PUSH2 0x2E84 JUMP JUMPDEST PUSH2 0x2134 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x21B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x684 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0x693 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9A JUMP JUMPDEST PUSH2 0x22C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0x22F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0x22F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0x22FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x6F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D80 JUMP JUMPDEST PUSH2 0x2304 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x2375 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0x2385 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C2 PUSH2 0x238B JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x762 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3998 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x791 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3A72 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x0 SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD PUSH2 0x7B0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0x239A JUMP JUMPDEST PUSH32 0xB9197C6B8E21274BD1E2D9C956A88AF5CFEE510F630FAB3F046300F88B422361 DUP2 PUSH1 0x40 MLOAD PUSH2 0x7DF SWAP2 SWAP1 PUSH2 0x3076 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x87F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x893 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8B7 SWAP2 SWAP1 PUSH2 0x2EE8 JUMP JUMPDEST POP POP PUSH1 0xB SLOAD SWAP3 SWAP6 POP SWAP2 SWAP4 POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x8D7 PUSH2 0xC02 JUMP JUMPDEST PUSH2 0x8F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x30B2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x91D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3A72 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH2 0x933 PUSH2 0x241B JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH32 0xAAA520FDD7D2C83061D632FA017B0432407E798818AF63EA908589FCEDA39AB7 SWAP1 PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x969 PUSH2 0xC02 JUMP JUMPDEST ISZERO PUSH2 0x986 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3655 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3A4C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x9DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x37D3 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x9E8 SWAP1 PUSH1 0x1 PUSH2 0x3B37 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH2 0x9F6 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xA13 PUSH2 0xC02 JUMP JUMPDEST ISZERO PUSH2 0xA30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3655 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xA53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3998 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0xA61 CALLER PUSH2 0x250A JUMP JUMPDEST ISZERO PUSH2 0xA7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x331A JUMP JUMPDEST CALLER ORIGIN EQ PUSH2 0xA9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x36AF JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 EQ PUSH2 0xABE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x39CF JUMP JUMPDEST PUSH2 0xAC7 DUP2 PUSH2 0x2510 JUMP JUMPDEST PUSH2 0xAE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x375E JUMP JUMPDEST PUSH1 0x7 SLOAD CALLVALUE LT ISZERO PUSH2 0xB05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3594 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0xB3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3917 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 DUP2 ADD SLOAD CALLVALUE SWAP2 SWAP1 PUSH2 0xB60 SWAP1 DUP4 SWAP1 PUSH2 0x3B37 JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0xB75 SWAP1 DUP4 SWAP1 PUSH2 0x3B37 JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH1 0x1 DUP1 DUP3 ADD DUP9 SWAP1 SSTORE PUSH1 0xF DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE DUP7 MSTORE SWAP4 SWAP1 SWAP5 KECCAK256 SWAP1 SWAP3 ADD DUP7 SWAP1 SSTORE MLOAD DUP6 SWAP2 SWAP1 PUSH32 0x438122D8CFF518D18388099A5181F0D17A12B4F1B55FAEDF6E4A6ACEE0060C12 SWAP1 PUSH2 0xBF0 SWAP1 DUP8 SWAP1 PUSH2 0x3076 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xC3B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3998 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0xC49 CALLER PUSH2 0x250A JUMP JUMPDEST ISZERO PUSH2 0xC66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x331A JUMP JUMPDEST CALLER ORIGIN EQ PUSH2 0xC85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x36AF JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x10E2 JUMPI PUSH1 0xE PUSH1 0x0 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xCB5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xCEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x38E8 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xD12 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP GT PUSH2 0xD49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x35E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xD6F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 PUSH1 0xD ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF4E JUMPI PUSH2 0xDC4 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xDB7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD CALLER PUSH2 0x1C13 JUMP JUMPDEST PUSH2 0xDE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3399 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP8 DUP8 DUP7 DUP2 DUP2 LT PUSH2 0xE06 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH2 0x160 ADD MLOAD DUP2 PUSH2 0x180 ADD MLOAD PUSH1 0xD PUSH1 0x0 DUP10 DUP10 DUP9 DUP2 DUP2 LT PUSH2 0xEF6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xF3C SWAP2 SWAP1 PUSH2 0x3B6F JUMP JUMPDEST PUSH2 0xF46 SWAP2 SWAP1 PUSH2 0x3B4F JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFFD JUMP JUMPDEST PUSH2 0xF7E DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xF71 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD CALLER PUSH2 0x15EF JUMP JUMPDEST PUSH2 0xF9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x30E0 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xFBE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH1 0x0 DUP8 DUP8 DUP7 DUP2 DUP2 LT PUSH2 0x1023 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1065 DUP2 DUP5 PUSH2 0x3B37 JUMP JUMPDEST SWAP3 POP DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x1087 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x10C7 SWAP2 SWAP1 PUSH2 0x3076 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP DUP1 PUSH2 0x10DA DUP2 PUSH2 0x3BD5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC89 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x10F3 JUMPI PUSH2 0x10F3 CALLER DUP3 PUSH2 0x239A JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1104 PUSH2 0xC02 JUMP JUMPDEST PUSH2 0x1120 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x30B2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x114A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3A72 JUMP JUMPDEST DUP1 PUSH2 0x1167 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3816 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH32 0x90EB87C560A0213754CEB3A7FA3012F01ACAB0A35602C1E1995ADF69DABC9D50 SWAP1 PUSH2 0x119F SWAP1 DUP5 SWAP1 PUSH2 0x3076 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x11B2 PUSH2 0x257B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11C3 PUSH2 0x194F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x11E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3729 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x120F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x367F JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x137B621413925496477D46E5055AC0D56178BDD724BA8BF843AFCEEF18268BA3 SWAP1 PUSH2 0x125A SWAP1 DUP4 SWAP1 PUSH2 0x2F78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x126D PUSH2 0x257B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x127E PUSH2 0x194F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x12A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3729 JUMP JUMPDEST PUSH2 0x12AE PUSH1 0x0 PUSH2 0x257F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP3 SWAP2 AND DUP4 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x12EF PUSH2 0xC02 JUMP JUMPDEST PUSH2 0x130B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x30B2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1335 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3A72 JUMP JUMPDEST PUSH2 0x3E8 DUP2 GT ISZERO PUSH2 0x1357 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3117 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH32 0xB1C4EE38D35556741133DA7FF9B6F7AB0FA88D0406133126FF128F635490A857 SWAP1 PUSH2 0x119F SWAP1 DUP5 SWAP1 PUSH2 0x3076 JUMP JUMPDEST TIMESTAMP SWAP1 JUMP JUMPDEST PUSH2 0x139B PUSH2 0xC02 JUMP JUMPDEST PUSH2 0x13B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x30B2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3A72 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1407 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x367F JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP1 SWAP2 AND SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x147C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14A0 SWAP2 SWAP1 PUSH2 0x2EE8 JUMP JUMPDEST POP POP POP POP POP PUSH32 0xB3EACD0E351FAFDFEFDEC84E1CD19679B38DBCD63EA7C2C24DA17FD2BC3B3C0E DUP2 PUSH1 0x40 MLOAD PUSH2 0x125A SWAP2 SWAP1 PUSH2 0x2F78 JUMP JUMPDEST PUSH2 0x14DC PUSH2 0xC02 JUMP JUMPDEST ISZERO PUSH2 0x14F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3655 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1523 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3A4C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1545 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x1561 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3845 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x156C PUSH2 0x25CF JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x1596 PUSH1 0xA SLOAD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP4 PUSH2 0x26CC JUMP JUMPDEST PUSH2 0x15B8 PUSH1 0x1 PUSH1 0xA SLOAD PUSH2 0x15A8 SWAP2 SWAP1 PUSH2 0x3B8E JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP4 PUSH2 0x27D9 JUMP JUMPDEST PUSH2 0x15CF PUSH1 0x1 PUSH1 0xA SLOAD PUSH2 0x15CA SWAP2 SWAP1 PUSH2 0x3B8E JUMP JUMPDEST PUSH2 0x28D6 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x15DD SWAP1 PUSH1 0x1 PUSH2 0x3B37 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH2 0x15EB SWAP1 PUSH2 0x2A2A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP4 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1645 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1664 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x1 DUP3 DUP2 ADD SLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 SWAP4 DUP5 ADD SLOAD PUSH1 0xFF SWAP1 DUP2 AND ISZERO ISZERO PUSH1 0x40 SWAP5 DUP6 ADD MSTORE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0xE DUP4 MSTORE DUP5 SWAP1 KECCAK256 DUP5 MLOAD PUSH2 0x1C0 DUP2 ADD DUP7 MSTORE DUP2 SLOAD DUP2 MSTORE SWAP4 DUP2 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP4 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x8 DUP3 ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x9 DUP3 ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0xA DUP3 ADD SLOAD PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0xB DUP3 ADD SLOAD PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0xC DUP3 ADD SLOAD PUSH2 0x180 DUP3 ADD MSTORE PUSH1 0xD SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 AND ISZERO DUP1 ISZERO PUSH2 0x1A0 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH2 0x1745 JUMPI POP DUP2 PUSH1 0x40 ADD MLOAD ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1761 JUMPI POP PUSH1 0x5 SLOAD DUP2 PUSH1 0x60 ADD MLOAD PUSH2 0x175E SWAP2 SWAP1 PUSH2 0x3B37 JUMP JUMPDEST TIMESTAMP GT JUMPDEST DUP1 ISZERO PUSH2 0x1770 JUMPI POP PUSH1 0x20 DUP3 ADD MLOAD ISZERO ISZERO JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1798 PUSH2 0xC02 JUMP JUMPDEST ISZERO PUSH2 0x17B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3655 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x17D8 JUMPI POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x17F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x346D JUMP JUMPDEST PUSH2 0x17FC PUSH2 0x2ADD JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH32 0x68B095021B1F40FE513109F513C66692F0B3219AEE674A69F4EFC57BADB8201D SWAP1 PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x1832 PUSH2 0xC02 JUMP JUMPDEST PUSH2 0x184E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x30B2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1878 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3A72 JUMP JUMPDEST DUP1 DUP3 LT PUSH2 0x1897 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3348 JUMP JUMPDEST PUSH1 0x5 DUP3 SWAP1 SSTORE PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE60149E0431FEC12DF63DFAB5FCE2A9CEFE9A4D3DF5F41CB626F579AE1F2B91A SWAP1 PUSH2 0x18D3 SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH2 0x3A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 DUP9 ADD SLOAD PUSH1 0x8 DUP10 ADD SLOAD PUSH1 0x9 DUP11 ADD SLOAD PUSH1 0xA DUP12 ADD SLOAD PUSH1 0xB DUP13 ADD SLOAD PUSH1 0xC DUP14 ADD SLOAD PUSH1 0xD SWAP1 SWAP14 ADD SLOAD SWAP12 SWAP13 SWAP11 SWAP12 SWAP10 SWAP11 SWAP9 SWAP10 SWAP8 SWAP9 SWAP7 SWAP8 SWAP6 SWAP7 SWAP5 SWAP6 SWAP4 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP15 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x60 SWAP2 DUP3 SWAP2 DUP5 SWAP1 PUSH2 0x1989 SWAP1 DUP8 SWAP1 PUSH2 0x3B8E JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x19B7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x19B4 SWAP1 DUP8 SWAP1 PUSH2 0x3B8E JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19E0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A09 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A35 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A6E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1A5B PUSH2 0x2D30 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1A53 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BF4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1A9E DUP3 DUP12 PUSH2 0x3B37 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1ABC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1AE7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0xD PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B17 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1B78 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1B97 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1BD6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x1BEC SWAP1 PUSH2 0x3BD5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1A74 JUMP JUMPDEST POP DUP2 DUP2 PUSH2 0x1C01 DUP6 DUP12 PUSH2 0x3B37 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP4 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1C69 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1C88 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x1 DUP3 DUP2 ADD SLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 SWAP4 DUP5 ADD SLOAD PUSH1 0xFF SWAP1 DUP2 AND ISZERO ISZERO PUSH1 0x40 SWAP5 DUP6 ADD MSTORE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0xE DUP4 MSTORE DUP5 SWAP1 KECCAK256 DUP5 MLOAD PUSH2 0x1C0 DUP2 ADD DUP7 MSTORE DUP2 SLOAD DUP2 MSTORE SWAP4 DUP2 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP4 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xA0 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x6 DUP5 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 DUP5 ADD SLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x8 DUP5 ADD SLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0x9 DUP5 ADD SLOAD PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0xA DUP5 ADD SLOAD PUSH2 0x140 DUP5 ADD MSTORE PUSH1 0xB DUP5 ADD SLOAD PUSH2 0x160 DUP5 ADD MSTORE PUSH1 0xC DUP5 ADD SLOAD PUSH2 0x180 DUP5 ADD MSTORE PUSH1 0xD SWAP1 SWAP4 ADD SLOAD SWAP1 SWAP4 AND ISZERO ISZERO PUSH2 0x1A0 DUP3 ADD MSTORE SWAP3 SWAP4 POP EQ ISZERO PUSH2 0x1D6D JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x1775 JUMP JUMPDEST DUP1 PUSH2 0x1A0 ADD MLOAD DUP1 ISZERO PUSH2 0x1D82 JUMPI POP PUSH1 0x20 DUP3 ADD MLOAD ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1D90 JUMPI POP DUP2 PUSH1 0x40 ADD MLOAD ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1770 JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH1 0xA0 ADD MLOAD SGT DUP1 ISZERO PUSH2 0x1DCE JUMPI POP PUSH1 0x0 DUP3 MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1DCC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ JUMPDEST DUP1 PUSH2 0x1770 JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH1 0xA0 ADD MLOAD SLT DUP1 ISZERO PUSH2 0x1770 JUMPI POP PUSH1 0x1 DUP3 MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1E09 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E1B PUSH2 0xC02 JUMP JUMPDEST ISZERO PUSH2 0x1E38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3655 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1E5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3998 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0x1E69 CALLER PUSH2 0x250A JUMP JUMPDEST ISZERO PUSH2 0x1E86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x331A JUMP JUMPDEST CALLER ORIGIN EQ PUSH2 0x1EA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x36AF JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 EQ PUSH2 0x1EC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x39CF JUMP JUMPDEST PUSH2 0x1ECF DUP2 PUSH2 0x2510 JUMP JUMPDEST PUSH2 0x1EEB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x375E JUMP JUMPDEST PUSH1 0x7 SLOAD CALLVALUE LT ISZERO PUSH2 0x1F0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3594 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0x1F47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3917 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 DUP2 ADD SLOAD CALLVALUE SWAP2 SWAP1 PUSH2 0x1F68 SWAP1 DUP4 SWAP1 PUSH2 0x3B37 JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x1F7D SWAP1 DUP4 SWAP1 PUSH2 0x3B37 JUMP JUMPDEST PUSH1 0xA DUP3 ADD SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR DUP3 SSTORE DUP1 DUP3 ADD DUP9 SWAP1 SSTORE PUSH1 0xF DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE DUP7 MSTORE SWAP4 SWAP1 SWAP5 KECCAK256 SWAP1 SWAP3 ADD DUP7 SWAP1 SSTORE MLOAD DUP6 SWAP2 SWAP1 PUSH32 0xD8C1FE3E67AB767116A81F122B83C2557A8C2564019CB7C4F83DE1AEB1F1F0D SWAP1 PUSH2 0xBF0 SWAP1 DUP8 SWAP1 PUSH2 0x3076 JUMP JUMPDEST PUSH2 0x2003 PUSH2 0x257B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2014 PUSH2 0x194F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x203A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3729 JUMP JUMPDEST PUSH2 0x204E PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER DUP4 PUSH2 0x2B3E JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x14F11966A996E0629572E51064726D2057A80FBD34EFC066682C06A71DBB6E98 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2087 SWAP2 SWAP1 PUSH2 0x3076 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x20BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3A72 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x20E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x367F JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xC47D127C07BDD56C5CCBA00463CE3BD3C1BCA71B4670EEA6E5D0C02E4AA156E2 SWAP1 PUSH2 0x125A SWAP1 DUP4 SWAP1 PUSH2 0x2F78 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x213C PUSH2 0xC02 JUMP JUMPDEST PUSH2 0x2158 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x30B2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2182 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3A72 JUMP JUMPDEST PUSH1 0xC DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x93CCACEAC092FFB842C46B8718667A13A80E9058DCD0BD403D0B47215B30DA07 SWAP1 PUSH2 0x125A SWAP1 DUP4 SWAP1 PUSH2 0x3076 JUMP JUMPDEST PUSH2 0x21BF PUSH2 0xC02 JUMP JUMPDEST ISZERO PUSH2 0x21DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3655 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2206 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3A4C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x222F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3191 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2259 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3499 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2264 PUSH2 0x25CF JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x228E PUSH1 0xA SLOAD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP4 PUSH2 0x26CC JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x229C SWAP1 PUSH1 0x1 PUSH2 0x3B37 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH2 0x22AA SWAP1 PUSH2 0x248C JUMP JUMPDEST POP POP PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x22DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH2 0x230C PUSH2 0x257B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x231D PUSH2 0x194F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2343 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3729 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2369 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x31E2 JUMP JUMPDEST PUSH2 0x2372 DUP2 PUSH2 0x257F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x23B3 SWAP1 PUSH2 0x2F75 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x23F0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23F5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2416 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x36E6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2423 PUSH2 0xC02 JUMP JUMPDEST PUSH2 0x243F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x30B2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x2475 PUSH2 0x257B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2482 SWAP2 SWAP1 PUSH2 0x2F78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x1 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH2 0x24AE SWAP2 PUSH2 0x3B37 JUMP JUMPDEST PUSH1 0x2 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x6 SLOAD PUSH2 0x24C3 SWAP2 PUSH2 0x3B6F JUMP JUMPDEST PUSH2 0x24CD SWAP1 TIMESTAMP PUSH2 0x3B37 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SSTORE DUP2 DUP2 SSTORE PUSH1 0x0 PUSH1 0x8 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP4 SWAP2 PUSH32 0x939F42374AA9BF1D8D8CD56D8A9110CB040CD8DFEAE44080C6FCF2645E51B452 SWAP2 LOG2 POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2540 JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x255C JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP GT JUMPDEST DUP1 ISZERO PUSH2 0x1775 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP LT SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC SLOAD TIMESTAMP PUSH2 0x25E2 SWAP2 SWAP1 PUSH2 0x3B37 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x264B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x266F SWAP2 SWAP1 PUSH2 0x2EE8 JUMP JUMPDEST POP SWAP4 POP POP SWAP3 POP SWAP3 POP DUP4 DUP2 GT ISZERO PUSH2 0x2697 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x39FE JUMP JUMPDEST PUSH1 0xB SLOAD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND GT PUSH2 0x26C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3276 JUMP JUMPDEST POP SWAP1 SWAP4 POP SWAP2 POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x26FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3146 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x272B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x33C9 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x274A SWAP2 SWAP1 PUSH2 0x3B37 JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x2769 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x360D JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 SLOAD PUSH2 0x2784 SWAP1 TIMESTAMP PUSH2 0x3B37 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x6 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP4 SWAP1 DUP6 SWAP1 PUSH32 0x482E76A65B448A42DEEF26E99E58FB20C85E26F075DEFFF8DF6AA80459B39006 SWAP1 PUSH2 0x27CB SWAP1 DUP7 SWAP1 PUSH2 0x3076 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x2807 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x378A JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x2838 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3521 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2857 SWAP2 SWAP1 PUSH2 0x3B37 JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x2876 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x32D3 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x7 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0xD DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 MLOAD DUP4 SWAP1 DUP6 SWAP1 PUSH32 0xB6FF1FE915DB84788CBBBC017F0D2BEF9485FAD9FD0BD8CE9340FDE0D8410DD8 SWAP1 PUSH2 0x27CB SWAP1 DUP7 SWAP1 PUSH2 0x3076 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xB ADD SLOAD ISZERO DUP1 ISZERO PUSH2 0x2904 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xC ADD SLOAD ISZERO JUMPDEST PUSH2 0x2920 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3568 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x5 DUP3 ADD SLOAD SWAP2 SWAP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 SGT ISZERO PUSH2 0x2984 JUMPI DUP4 PUSH1 0x9 ADD SLOAD SWAP3 POP PUSH2 0x2710 PUSH1 0x8 SLOAD DUP6 PUSH1 0x8 ADD SLOAD PUSH2 0x2961 SWAP2 SWAP1 PUSH2 0x3B6F JUMP JUMPDEST PUSH2 0x296B SWAP2 SWAP1 PUSH2 0x3B4F JUMP JUMPDEST SWAP2 POP DUP2 DUP5 PUSH1 0x8 ADD SLOAD PUSH2 0x297D SWAP2 SWAP1 PUSH2 0x3B8E JUMP JUMPDEST SWAP1 POP PUSH2 0x29BD JUMP JUMPDEST DUP4 PUSH1 0x4 ADD SLOAD DUP5 PUSH1 0x5 ADD SLOAD SLT ISZERO PUSH2 0x29B0 JUMPI DUP4 PUSH1 0xA ADD SLOAD SWAP3 POP PUSH2 0x2710 PUSH1 0x8 SLOAD DUP6 PUSH1 0x8 ADD SLOAD PUSH2 0x2961 SWAP2 SWAP1 PUSH2 0x3B6F JUMP JUMPDEST POP POP POP PUSH1 0x8 DUP2 ADD SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST PUSH1 0xB DUP5 ADD DUP4 SWAP1 SSTORE PUSH1 0xC DUP5 ADD DUP2 SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD DUP4 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x29E0 SWAP1 DUP5 SWAP1 PUSH2 0x3B37 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH32 0x6DFDFCB09C8804D0058826CD2539F1ACFBE3CB887C9BE03D928035BCE0F1A58D DUP5 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2A1B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3AA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2A53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3191 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 PUSH2 0x2A62 PUSH1 0x2 DUP5 PUSH2 0x3B8E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x2A94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3228 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 PUSH2 0x2AA3 PUSH1 0x2 DUP5 PUSH2 0x3B8E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x2AD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3410 JUMP JUMPDEST PUSH2 0x2372 DUP2 PUSH2 0x248C JUMP JUMPDEST PUSH2 0x2AE5 PUSH2 0xC02 JUMP JUMPDEST ISZERO PUSH2 0x2B02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x3655 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x2475 PUSH2 0x257B JUMP JUMPDEST PUSH2 0x2416 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2B5D SWAP3 SWAP2 SWAP1 PUSH2 0x2F8C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH1 0x0 PUSH2 0x2BE4 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2C1E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2416 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2C02 SWAP2 SWAP1 PUSH2 0x2E64 JUMP JUMPDEST PUSH2 0x2416 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x394E JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2C2D DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2C37 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2C59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x34DB JUMP JUMPDEST PUSH2 0x2C62 DUP6 PUSH2 0x250A JUMP JUMPDEST PUSH2 0x2C7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0x38B1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2C9A SWAP2 SWAP1 PUSH2 0x2F59 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2CD7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2CDC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2CEC DUP3 DUP3 DUP7 PUSH2 0x2CF7 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2D06 JUMPI POP DUP2 PUSH2 0x2C30 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x2D16 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP2 SWAP1 PUSH2 0x307F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x827 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x827 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D91 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2C30 DUP3 PUSH2 0x2D52 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2DAC JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2DB5 DUP4 PUSH2 0x2D52 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2DD7 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2DE0 DUP5 PUSH2 0x2D52 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E07 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2E1E JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2E31 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2E3F JUMPI DUP5 DUP6 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x2E52 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E75 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2C30 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E95 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2EAE JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2EBE PUSH1 0x20 DUP5 ADD PUSH2 0x2D52 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2ED9 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2EFF JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2F08 DUP7 PUSH2 0x2D69 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x2F2B PUSH1 0x80 DUP8 ADD PUSH2 0x2D69 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x2F55 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2F6B DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3BA5 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 MSTORE DUP5 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x80 DUP6 ADD SWAP1 DUP3 DUP10 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2FDF JUMPI DUP2 MLOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2FC3 JUMP JUMPDEST POP POP POP DUP5 DUP2 SUB DUP3 DUP7 ADD MSTORE DUP7 MLOAD DUP1 DUP3 MSTORE DUP8 DUP4 ADD SWAP2 DUP4 ADD SWAP1 DUP6 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3030 JUMPI DUP4 MLOAD PUSH2 0x300C DUP5 DUP3 MLOAD PUSH2 0x2F37 JUMP JUMPDEST DUP1 DUP7 ADD MLOAD DUP5 DUP8 ADD MSTORE PUSH1 0x40 SWAP1 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP5 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP6 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2FF7 JUMP JUMPDEST POP POP DUP1 SWAP5 POP POP POP POP POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x3060 DUP3 DUP7 PUSH2 0x2F37 JUMP JUMPDEST DUP4 PUSH1 0x20 DUP4 ADD MSTORE DUP3 ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x309E DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x3BA5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F7420656C696769626C6520666F7220726566756E64000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0xA8E4CAC2E6EAE4F240CCCACA40E8DEDE40D0D2CED PUSH1 0x5B SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C79206C6F636B20726F756E6420616674657220726F756E6420 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x1A185CC81CDD185C9D1959 PUSH1 0xAA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792072756E2061667465722067656E65736973537461727452 PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1BDD5B99081A5CC81D1C9A59D9D95C9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C7920737461727420726F756E6420616674657220726F756E64 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x81B8B4C881A185CC8195B991959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3D SWAP1 DUP3 ADD MSTORE PUSH32 0x4F7261636C652075706461746520726F756E644964206D757374206265206C61 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x72676572207468616E206F7261636C654C6174657374526F756E644964000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C7920656E6420726F756E642077697468696E20627566666572 PUSH1 0x40 DUP3 ADD MSTORE PUSH7 0x5365636F6E6473 PUSH1 0xC8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x10DBDB9D1C9858DD081B9BDD08185B1B1BDDD959 PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x6275666665725365636F6E6473206D75737420626520696E666572696F722074 PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x6F20696E74657276616C5365636F6E6473 PUSH1 0x78 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x4E6F7420656C696769626C6520666F7220636C61696D PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C79206C6F636B20726F756E64206166746572206C6F636B5469 PUSH1 0x40 DUP3 ADD MSTORE PUSH7 0x6D657374616D7 PUSH1 0xCC SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x37 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C79207374617274206E657720726F756E642061667465722072 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6F756E64206E2D3220636C6F736554696D657374616D70000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x2737BA1037B832B930BA37B917B0B236B4B7 PUSH1 0x71 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792072756E2067656E657369734C6F636B526F756E64206F6E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C7920656E6420726F756E6420616674657220636C6F73655469 PUSH1 0x40 DUP3 ADD MSTORE PUSH7 0x6D657374616D7 PUSH1 0xCC SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x14995DD85C991CC818D85B18DD5B185D1959 PUSH1 0x72 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x42657420616D6F756E74206D7573742062652067726561746572207468616E20 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x1B5A5B90995D105B5BDD5B9D PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x149BDD5B99081A185CC81B9BDD08195B991959 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C79206C6F636B20726F756E642077697468696E206275666665 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x725365636F6E6473 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x43616E6E6F74206265207A65726F2061646472657373 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x50726F787920636F6E7472616374206E6F7420616C6C6F776564000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A204F6E655F5452414E534645525F464149 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x131151 PUSH1 0xEA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x526F756E64206E6F74206265747461626C65 PUSH1 0x70 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C7920656E6420726F756E6420616674657220726F756E642068 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x185CC81B1BD8DAD959 PUSH1 0xBA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792072756E2067656E657369735374617274526F756E64206F PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x6E6365 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x4D757374206265207375706572696F7220746F203 PUSH1 0x5C SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x46 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792072756E2061667465722067656E65736973537461727452 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6F756E6420616E642067656E657369734C6F636B526F756E6420697320747269 PUSH1 0x60 DUP3 ADD MSTORE PUSH6 0x19D9D95C9959 PUSH1 0xD2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x149BDD5B99081A185CC81B9BDD081CDD185C9D1959 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C7920626574206F6E63652070657220726F756E640000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x42657420697320746F6F206561726C792F6C617465 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x4F7261636C6520757064617465206578636565646564206D61782074696D6573 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x74616D7020616C6C6F77616E6365 PUSH1 0x90 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x2737BA1037B832B930BA37B9 PUSH1 0xA1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x2737BA1030B236B4B7 PUSH1 0xB9 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP14 DUP15 MSTORE PUSH1 0x20 DUP15 ADD SWAP13 SWAP1 SWAP13 MSTORE PUSH1 0x40 DUP14 ADD SWAP11 SWAP1 SWAP11 MSTORE PUSH1 0x60 DUP13 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x80 DUP12 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0xA0 DUP11 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xC0 DUP10 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xE0 DUP9 ADD MSTORE PUSH2 0x100 DUP8 ADD MSTORE PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x140 DUP6 ADD MSTORE PUSH2 0x160 DUP5 ADD MSTORE PUSH2 0x180 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x1A0 DUP3 ADD MSTORE PUSH2 0x1C0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3B4A JUMPI PUSH2 0x3B4A PUSH2 0x3BF0 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3B6A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3B89 JUMPI PUSH2 0x3B89 PUSH2 0x3BF0 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3BA0 JUMPI PUSH2 0x3BA0 PUSH2 0x3BF0 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3BC0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3BA8 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3BCF JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x3BE9 JUMPI PUSH2 0x3BE9 PUSH2 0x3BF0 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 0xDF DUP5 0xD5 BYTE DIV 0xAF 0xC9 0xF9 MSTORE DUP6 PUSH29 0x3770C1534875E430725C5DDB5C71F2DACED3DBC864736F6C6343000800 STOP CALLER ",
              "sourceMap": "466:23859:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11516:263;;;;;;;;;;;;;:::i;:::-;;614:35;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;755:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;16393:122::-;;;;;;;;;;-1:-1:-1;16393:122:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;23086:186::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;1164:29::-;;;;;;;;;;;;;:::i;11964:180::-;;;;;;;;;;;;;:::i;10910:257::-;;;;;;;;;;;;;:::i;6603:988::-;;;;;;:::i;:::-;;:::i;1041:84:1:-;;;;;;;;;;;;;:::i;1389:36:7:-;;;;;;;;;;;;;:::i;7702:1567::-;;;;;;;;;;-1:-1:-1;7702:1567:7;;;;;:::i;:::-;;:::i;12778:272::-;;;;;;;;;;-1:-1:-1;12778:272:7;;;;;:::i;:::-;;:::i;15144:223::-;;;;;;;;;;-1:-1:-1;15144:223:7;;;;;:::i;:::-;;:::i;1605:92:0:-;;;;;;;;;;;;;:::i;1504:61:7:-;;;;;;;;;;-1:-1:-1;1504:61:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;1240:27::-;;;;;;;;;;;;;:::i;14272:280::-;;;;;;;;;;-1:-1:-1;14272:280:7;;;;;:::i;:::-;;:::i;14961:98::-;;;;;;;;;;;;;:::i;13468:374::-;;;;;;;;;;-1:-1:-1;13468:374:7;;;;;:::i;:::-;;:::i;9403:740::-;;;;;;;;;;;;;:::i;17429:394::-;;;;;;;;;;-1:-1:-1;17429:394:7;;;;;:::i;:::-;;:::i;916:30::-;;;;;;;;;;;;;:::i;572:35::-;;;;;;;;;;;;;:::i;11299:120::-;;;;;;;;;;;;;:::i;12248:446::-;;;;;;;;;;-1:-1:-1;12248:446:7;;;;;:::i;:::-;;:::i;1571:39::-;;;;;;;;;;-1:-1:-1;1571:39:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;973:85:0:-;;;;;;;;;;;;;:::i;15565:730:7:-;;;;;;;;;;-1:-1:-1;15565:730:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;16671:601::-;;;;;;;;;;-1:-1:-1;16671:601:7;;;;;:::i;:::-;;:::i;5533:988::-;;;;;;:::i;:::-;;:::i;14761:194::-;;;;;;;;;;-1:-1:-1;14761:194:7;;;;;:::i;:::-;;:::i;13138:244::-;;;;;;;;;;-1:-1:-1;13138:244:7;;;;;:::i;:::-;;:::i;1086:26::-;;;;;;;;;;;;;:::i;13937:251::-;;;;;;;;;;-1:-1:-1;13937:251:7;;;;;:::i;:::-;;:::i;10232:579::-;;;;;;;;;;;;;:::i;1616:47::-;;;;;;;;;;-1:-1:-1;1616:47:7;;;;;:::i;:::-;;:::i;819:28::-;;;;;;;;;;;;;:::i;1312:34::-;;;;;;;;;;;;;:::i;1443:47::-;;;;;;;;;;;;;:::i;1846:189:0:-;;;;;;;;;;-1:-1:-1;1846:189:0;;;;;:::i;:::-;;:::i;655:36:7:-;;;;;;;;;;;;;:::i;1006:27::-;;;;;;;;;;;;;:::i;698:::-;;;;;;;;;;;;;:::i;11516:263::-;1680:1:2;2259:7;;:19;;2251:63;;;;-1:-1:-1;;;2251:63:2;;;;;;;:::i;:::-;;;;;;;;;1680:1;2389:7;:18;3707:12:7::1;::::0;-1:-1:-1;;;;;3707:12:7::1;3693:10;:26;3685:48;;;;-1:-1:-1::0;;;3685:48:7::1;;;;;;;:::i;:::-;11615:14:::2;::::0;;11583:29:::2;11639:18:::0;;;11684:12:::2;::::0;11667:53:::2;::::0;-1:-1:-1;;;;;11684:12:7::2;11615:14:::0;11667:16:::2;:53::i;:::-;11736:36;11750:21;11736:36;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;1637:1:2;2562:22;;11516:263:7:o;614:35::-;;;-1:-1:-1;;;614:35:7;;;;;:::o;755:30::-;;;-1:-1:-1;;;;;755:30:7;;:::o;16393:122::-;-1:-1:-1;;;;;16485:16:7;;16459:7;16485:16;;;:10;:16;;;;;:23;16393:122;;;;:::o;23086:186::-;23140:6;23148:7;23168:14;23194:6;;;;;;;;;-1:-1:-1;;;;;23194:6:7;-1:-1:-1;;;;;23194:22:7;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;23245:19:7;;23167:51;;-1:-1:-1;23245:19:7;;-1:-1:-1;;;;23086:186:7;;:::o;1164:29::-;;;;:::o;11964:180::-;1620:8:1;:6;:8::i;:::-;1612:41;;;;-1:-1:-1;;;1612:41:1;;;;;;;:::i;:::-;3707:12:7::1;::::0;-1:-1:-1;;;;;3707:12:7::1;3693:10;:26;3685:48;;;;-1:-1:-1::0;;;3685:48:7::1;;;;;;;:::i;:::-;12023:16:::2;:24:::0;;-1:-1:-1;;;;12057:23:7;;;12090:10:::2;:8;:10::i;:::-;12124:12;::::0;12116:21:::2;::::0;::::2;::::0;;;::::2;11964:180::o:0;10910:257::-;1355:8:1;:6;:8::i;:::-;1354:9;1346:38;;;;-1:-1:-1;;;1346:38:1;;;;;;;:::i;:::-;4002:15:7::1;::::0;-1:-1:-1;;;;;4002:15:7::1;3988:10;:29;3980:54;;;;-1:-1:-1::0;;;3980:54:7::1;;;;;;;:::i;:::-;10994:16:::2;::::0;-1:-1:-1;;;10994:16:7;::::2;;;10993:17;10985:65;;;;-1:-1:-1::0;;;10985:65:7::2;;;;;;;:::i;:::-;11076:12;::::0;:16:::2;::::0;11091:1:::2;11076:16;:::i;:::-;11061:12;:31:::0;;;11102:25:::2;::::0;:11:::2;:25::i;:::-;11137:16;:23:::0;;-1:-1:-1;;;;11137:23:7::2;-1:-1:-1::0;;;11137:23:7::2;::::0;;10910:257::o;6603:988::-;1355:8:1;:6;:8::i;:::-;1354:9;1346:38;;;;-1:-1:-1;;;1346:38:1;;;;;;;:::i;:::-;1680:1:2::1;2259:7;;:19;;2251:63;;;;-1:-1:-1::0;;;2251:63:2::1;;;;;;;:::i;:::-;1680:1;2389:7;:18:::0;4100:23:7::2;4112:10;4100:11;:23::i;:::-;4099:24;4091:57;;;;-1:-1:-1::0;;;4091:57:7::2;;;;;;;:::i;:::-;4166:10;4180:9;4166:23;4158:62;;;;-1:-1:-1::0;;;4158:62:7::2;;;;;;;:::i;:::-;6762:12:::3;;6753:5;:21;6745:55;;;;-1:-1:-1::0;;;6745:55:7::3;;;;;;;:::i;:::-;6818:16;6828:5;6818:9;:16::i;:::-;6810:47;;;;-1:-1:-1::0;;;6810:47:7::3;;;;;;;:::i;:::-;6901:12;;6888:9;:25;;6867:116;;;;-1:-1:-1::0;;;6867:116:7::3;;;;;;;:::i;:::-;7014:13;::::0;;;:6:::3;:13;::::0;;;;;;;7028:10:::3;7014:25:::0;;;;;;;:32:::3;;::::0;:37;6993:111:::3;;;;-1:-1:-1::0;;;6993:111:7::3;;;;;;;:::i;:::-;7144:14;7202:13:::0;;;:6:::3;:13;::::0;;;;7245:17:::3;::::0;::::3;::::0;7161:9:::3;::::0;7202:13;7245:26:::3;::::0;7161:9;;7245:26:::3;:::i;:::-;7225:17;::::0;::::3;:46:::0;7300:16:::3;::::0;::::3;::::0;:25:::3;::::0;7319:6;;7300:25:::3;:::i;:::-;7281:16;::::0;::::3;:44:::0;7364:23:::3;7390:13:::0;;;:6:::3;:13;::::0;;;;;;;7404:10:::3;7390:25:::0;;;;;;;;;7425:32;;-1:-1:-1;;7425:32:7::3;::::0;;;7467:14;;::::3;:23:::0;;;7500:10:::3;:22:::0;;;;;:34;;;;::::3;::::0;;;;;;;;;;::::3;::::0;;;7550;7390:13;;7404:10;7550:34:::3;::::0;::::3;::::0;7467:23;;7550:34:::3;:::i;:::-;;;;;;;;-1:-1:-1::0;;1637:1:2::1;2562:22:::0;;-1:-1:-1;;6603:988:7:o;1041:84:1:-;1088:4;1111:7;-1:-1:-1;;;1111:7:1;;;;;1041:84::o;1389:36:7:-;;;;:::o;7702:1567::-;1680:1:2;2259:7;;:19;;2251:63;;;;-1:-1:-1;;;2251:63:2;;;;;;;:::i;:::-;1680:1;2389:7;:18;4100:23:7::1;4112:10;4100:11;:23::i;:::-;4099:24;4091:57;;;;-1:-1:-1::0;;;4091:57:7::1;;;;;;;:::i;:::-;4166:10;4180:9;4166:23;4158:62;;;;-1:-1:-1::0;;;4158:62:7::1;;;;;;;:::i;:::-;7816:14:::2;::::0;7863:1304:::2;7883:17:::0;;::::2;7863:1304;;;7946:6;:17;7953:6;;7960:1;7953:9;;;;;-1:-1:-1::0;;;7953:9:7::2;;;;;;;;;;;;;;;7946:17;;;;;;;;;;;:32;;;7982:1;7946:37;;7921:117;;;;-1:-1:-1::0;;;7921:117:7::2;;;;;;;:::i;:::-;8095:6;:17;8102:6;;8109:1;8102:9;;;;;-1:-1:-1::0;;;8102:9:7::2;;;;;;;;;;;;;;;8095:17;;;;;;;;;;;:32;;;8077:15;:50;8052:128;;;;-1:-1:-1::0;;;8052:128:7::2;;;;;;;:::i;:::-;8195:19;8279:6;:17;8286:6;;8293:1;8286:9;;;;;-1:-1:-1::0;;;8286:9:7::2;;;;;;;;;;::::0;;::::2;::::0;;;::::2;;8279:17:::0;;-1:-1:-1;8279:17:7;::::2;::::0;;;;;;-1:-1:-1;8279:17:7;:30:::2;;::::0;::::2;;8275:727;;;8358:32;8368:6;;8375:1;8368:9;;;;;-1:-1:-1::0;;;8368:9:7::2;;;;;;;;;;;;;;;8379:10;8358:9;:32::i;:::-;8329:125;;;;-1:-1:-1::0;;;8329:125:7::2;;;;;;;:::i;:::-;8472:18;8493:6;:17;8500:6;;8507:1;8500:9;;;;;-1:-1:-1::0;;;8500:9:7::2;;;;;;;;;;;;;;;8493:17;;;;;;;;;;;8472:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;8668:5;:25;;;8626:5;:18;;;8563:6;:17;8570:6;;8577:1;8570:9;;;;;-1:-1:-1::0;;;8570:9:7::2;;;;;;;;;;;;;;;8563:17;;;;;;;;;;;:29;8581:10;-1:-1:-1::0;;;;;8563:29:7::2;-1:-1:-1::0;;;;;8563:29:7::2;;;;;;;;;;;;:36;;;:81;;;;:::i;:::-;8562:131;;;;:::i;:::-;8528:165;;8275:727;;;;8821:33;8832:6;;8839:1;8832:9;;;;;-1:-1:-1::0;;;8832:9:7::2;;;;;;;;;;;;;;;8843:10;8821;:33::i;:::-;8792:127;;;;-1:-1:-1::0;;;8792:127:7::2;;;;;;;:::i;:::-;8951:6;:17;8958:6;;8965:1;8958:9;;;;;-1:-1:-1::0;;;8958:9:7::2;;;;;;;;;;;;;;;8951:17;;;;;;;;;;;:29;8969:10;-1:-1:-1::0;;;;;8951:29:7::2;-1:-1:-1::0;;;;;8951:29:7::2;;;;;;;;;;;;:36;;;8937:50;;8275:727;9056:4;9016:6;:17;9023:6;;9030:1;9023:9;;;;;-1:-1:-1::0;;;9023:9:7::2;;;;;;;;;;::::0;;::::2;::::0;;;::::2;;9016:17:::0;;-1:-1:-1;9016:17:7;;::::2;::::0;;;;;;;;-1:-1:-1;9016:17:7;;;9034:10:::2;9016:29:::0;;;;;;;:37:::2;;:44:::0;;-1:-1:-1;;9016:44:7::2;::::0;::::2;;::::0;;;::::2;::::0;;9074:21:::2;9084:11:::0;9074:21;::::2;:::i;:::-;;;9133:6;;9140:1;9133:9;;;;;-1:-1:-1::0;;;9133:9:7::2;;;;;;;;;;;;;;;9121:10;-1:-1:-1::0;;;;;9115:41:7::2;;9144:11;9115:41;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;7902:3:7;::::2;::::0;::::2;:::i;:::-;;;;7863:1304;;;-1:-1:-1::0;9181:10:7;;9177:86:::2;;9207:45;9232:10;9245:6;9207:16;:45::i;:::-;-1:-1:-1::0;;1637:1:2;2562:22;;-1:-1:-1;7702:1567:7:o;12778:272::-;1620:8:1;:6;:8::i;:::-;1612:41;;;;-1:-1:-1;;;1612:41:1;;;;;;;:::i;:::-;3707:12:7::1;::::0;-1:-1:-1;;;;;3707:12:7::1;3693:10;:26;3685:48;;;;-1:-1:-1::0;;;3685:48:7::1;;;;;;;:::i;:::-;12902:18:::0;12894:52:::2;;;;-1:-1:-1::0;;;12894:52:7::2;;;;;;;:::i;:::-;12956:12;:28:::0;;;13016:12:::2;::::0;13000:43:::2;::::0;::::2;::::0;::::2;::::0;12971:13;;13000:43:::2;:::i;:::-;;;;;;;;12778:272:::0;:::o;15144:223::-;1196:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:0;;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;15222:27:7;::::1;15214:62;;;;-1:-1:-1::0;;;15214:62:7::1;;;;;;;:::i;:::-;15286:12;:28:::0;;-1:-1:-1;;;;;;15286:28:7::1;-1:-1:-1::0;;;;;15286:28:7;::::1;;::::0;;15330:30:::1;::::0;::::1;::::0;::::1;::::0;15286:28;;15330:30:::1;:::i;:::-;;;;;;;;15144:223:::0;:::o;1605:92:0:-;1196:12;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:0;;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;1504:61:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1240:27::-;;;;:::o;14272:280::-;1620:8:1;:6;:8::i;:::-;1612:41;;;;-1:-1:-1;;;1612:41:1;;;;;;;:::i;:::-;3707:12:7::1;::::0;-1:-1:-1;;;;;3707:12:7::1;3693:10;:26;3685:48;;;;-1:-1:-1::0;;;3685:48:7::1;;;;;;;:::i;:::-;1486:4:::2;14394:12;:32;;14386:66;;;;-1:-1:-1::0;;;14386:66:7::2;;;;;;;:::i;:::-;14462:11;:26:::0;;;14519:12:::2;::::0;14504:41:::2;::::0;::::2;::::0;::::2;::::0;14476:12;;14504:41:::2;:::i;14961:98::-:0;15037:15;14961:98;:::o;13468:374::-;1620:8:1;:6;:8::i;:::-;1612:41;;;;-1:-1:-1;;;1612:41:1;;;;;;;:::i;:::-;3707:12:7::1;::::0;-1:-1:-1;;;;;3707:12:7::1;3693:10;:26;3685:48;;;;-1:-1:-1::0;;;3685:48:7::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;13552:21:7;::::2;13544:56;;;;-1:-1:-1::0;;;13544:56:7::2;;;;;;;:::i;:::-;13632:1;13610:19;:23:::0;13643:6:::2;:39:::0;;-1:-1:-1;;;;;;13643:39:7::2;-1:-1:-1::0;;;;;13643:39:7;;::::2;::::0;;;::::2;::::0;;;;13777:24:::2;::::0;;-1:-1:-1;;;13777:24:7;;;;:6;;;::::2;::::0;:22:::2;::::0;:24:::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;:6;:24;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;13817:18;13827:7;13817:18;;;;;;:::i;9403:740::-:0;1355:8:1;:6;:8::i;:::-;1354:9;1346:38;;;;-1:-1:-1;;;1346:38:1;;;;;;;:::i;:::-;4002:15:7::1;::::0;-1:-1:-1;;;;;4002:15:7::1;3988:10;:29;3980:54;;;;-1:-1:-1::0;;;3980:54:7::1;;;;;;;:::i;:::-;9494:16:::2;::::0;-1:-1:-1;;;9494:16:7;::::2;;;:35:::0;::::2;;;-1:-1:-1::0;9514:15:7::2;::::0;-1:-1:-1;;;9514:15:7;::::2;;;9494:35;9473:152;;;;-1:-1:-1::0;;;9473:152:7::2;;;;;;;:::i;:::-;9637:21;9660:19:::0;9683:21:::2;:19;:21::i;:::-;9636:68;;;;9745:14;-1:-1:-1::0;;;;;9737:23:7::2;9715:19;:45;;;;9826:58;9841:12;;9855:14;-1:-1:-1::0;;;;;9826:58:7::2;9871:12;9826:14;:58::i;:::-;9894:61;9923:1;9908:12;;:16;;;;:::i;:::-;9926:14;-1:-1:-1::0;;;;;9894:61:7::2;9942:12;9894:13;:61::i;:::-;9965:35;9998:1;9983:12;;:16;;;;:::i;:::-;9965:17;:35::i;:::-;10081:12;::::0;:16:::2;::::0;10096:1:::2;10081:16;:::i;:::-;10066:12;:31:::0;;;10107:29:::2;::::0;:15:::2;:29::i;:::-;4044:1;;9403:740::o:0;17429:394::-;17523:4;17568:13;;;:6;:13;;;;;;;;-1:-1:-1;;;;;17568:19:7;;;;;;;;;;17543:44;;;;;;;;;;17523:4;;17543:44;17568:19;17543:44;;;;;;;;;;-1:-1:-1;;;17543:44:7;;;;;;;;;;;;;;;-1:-1:-1;;;17543:44:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17618:13:7;;;:6;:13;;;;;17597:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17543:44;17597:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17543:44;;-1:-1:-1;17597:34:7;;17660:51;;;17696:7;:15;;;17695:16;17660:51;:121;;;;;17768:13;;17745:5;:20;;;:36;;;;:::i;:::-;17727:15;:54;17660:121;:156;;;;-1:-1:-1;17797:14:7;;;;:19;;17660:156;17641:175;;;;17429:394;;;;;:::o;916:30::-;;;;:::o;572:35::-;;;-1:-1:-1;;;;;572:35:7;;:::o;11299:120::-;1355:8:1;:6;:8::i;:::-;1354:9;1346:38;;;;-1:-1:-1;;;1346:38:1;;;;;;;:::i;:::-;3833:12:7::1;::::0;-1:-1:-1;;;;;3833:12:7::1;3819:10;:26;::::0;:59:::1;;-1:-1:-1::0;3863:15:7::1;::::0;-1:-1:-1;;;;;3863:15:7::1;3849:10;:29;3819:59;3798:124;;;;-1:-1:-1::0;;;3798:124:7::1;;;;;;;:::i;:::-;11369:8:::2;:6;:8::i;:::-;11399:12;::::0;11393:19:::2;::::0;::::2;::::0;;;::::2;11299:120::o:0;12248:446::-;1620:8:1;:6;:8::i;:::-;1612:41;;;;-1:-1:-1;;;1612:41:1;;;;;;;:::i;:::-;3707:12:7::1;::::0;-1:-1:-1;;;;;3707:12:7::1;3693:10;:26;3685:48;;;;-1:-1:-1::0;;;3685:48:7::1;;;;;;;:::i;:::-;12435:16:::2;12418:14;:33;12397:129;;;;-1:-1:-1::0;;;12397:129:7::2;;;;;;;:::i;:::-;12536:13;:30:::0;;;12576:15:::2;:34:::0;;;12626:61:::2;::::0;::::2;::::0;::::2;::::0;12552:14;;12594:16;;12626:61:::2;:::i;:::-;;;;;;;;12248:446:::0;;:::o;1571:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;973:85:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;973:85;:::o;15565:730:7:-;-1:-1:-1;;;;;15859:16:7;;15782:7;15859:16;;;:10;:16;;;;;:23;15722:16;;;;15831:4;;15859:32;;15885:6;;15859:32;:::i;:::-;15850:6;:41;15846:113;;;-1:-1:-1;;;;;15916:16:7;;;;;;:10;:16;;;;;:23;:32;;15942:6;;15916:32;:::i;:::-;15907:41;;15846:113;15969:23;16009:6;15995:21;;;;;;-1:-1:-1;;;15995:21:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15995:21:7;;15969:47;;16026:24;16067:6;16053:21;;;;;;-1:-1:-1;;;16053:21:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;16026:48;;16090:9;16085:152;16109:6;16105:1;:10;16085:152;;;-1:-1:-1;;;;;16148:16:7;;;;;;:10;:16;;;;;16165:10;16174:1;16165:6;:10;:::i;:::-;16148:28;;;;;;-1:-1:-1;;;16148:28:7;;;;;;;;;;;;;;;;;16136:6;16143:1;16136:9;;;;;;-1:-1:-1;;;16136:9:7;;;;;;;;;;;;;;:40;;;;;16203:6;:17;16210:6;16217:1;16210:9;;;;;;-1:-1:-1;;;16210:9:7;;;;;;;;;;;;;;;;;;;;16203:17;;;;;;;;;;;;;-1:-1:-1;16203:17:7;;;-1:-1:-1;;;;;16203:23:7;;;;;;;;;;;16190:36;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;16190:36:7;;;;;;;;;;;;;;;-1:-1:-1;;;16190:36:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;;:7;;16198:1;;16190:10;;;;-1:-1:-1;;;16190:10:7;;;;;;;;;;;;;;:36;;;;16117:3;;;;;:::i;:::-;;;;16085:152;;;-1:-1:-1;16255:6:7;16263:7;16272:15;16281:6;16272;:15;:::i;:::-;16247:41;;;;;;;;;15565:730;;;;;;;:::o;16671:601::-;16740:4;16781:13;;;:6;:13;;;;;;;;-1:-1:-1;;;;;16781:19:7;;;;;;;;;;16756:44;;;;;;;;;;16740:4;;16756:44;16781:19;16756:44;;;;;;;;;;-1:-1:-1;;;16756:44:7;;;;;;;;;;;;;;;-1:-1:-1;;;16756:44:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16831:13:7;;;:6;:13;;;;;16810:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16756:44;16810:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16756:44;;-1:-1:-1;16858:35:7;16854:78;;;16916:5;16909:12;;;;;;16854:78;16960:5;:18;;;:53;;;;-1:-1:-1;16994:14:7;;;;:19;;16960:53;:85;;;;;17030:7;:15;;;17029:16;16960:85;:305;;;;;17082:5;:15;;;17063:5;:16;;;:34;:87;;;;-1:-1:-1;17137:13:7;17117:16;;:33;;;;;;-1:-1:-1;;;17117:33:7;;;;;;;;;;17063:87;17062:202;;;;17191:5;:15;;;17172:5;:16;;;:34;:91;;;;-1:-1:-1;17250:13:7;17230:16;;:33;;;;;;-1:-1:-1;;;17230:33:7;;;;;;;;;;;16671:601;-1:-1:-1;;;;;16671:601:7:o;5533:988::-;1355:8:1;:6;:8::i;:::-;1354:9;1346:38;;;;-1:-1:-1;;;1346:38:1;;;;;;;:::i;:::-;1680:1:2::1;2259:7;;:19;;2251:63;;;;-1:-1:-1::0;;;2251:63:2::1;;;;;;;:::i;:::-;1680:1;2389:7;:18:::0;4100:23:7::2;4112:10;4100:11;:23::i;:::-;4099:24;4091:57;;;;-1:-1:-1::0;;;4091:57:7::2;;;;;;;:::i;:::-;4166:10;4180:9;4166:23;4158:62;;;;-1:-1:-1::0;;;4158:62:7::2;;;;;;;:::i;:::-;5692:12:::3;;5683:5;:21;5675:55;;;;-1:-1:-1::0;;;5675:55:7::3;;;;;;;:::i;:::-;5748:16;5758:5;5748:9;:16::i;:::-;5740:47;;;;-1:-1:-1::0;;;5740:47:7::3;;;;;;;:::i;:::-;5831:12;;5818:9;:25;;5797:116;;;;-1:-1:-1::0;;;5797:116:7::3;;;;;;;:::i;:::-;5944:13;::::0;;;:6:::3;:13;::::0;;;;;;;5958:10:::3;5944:25:::0;;;;;;;:32:::3;;::::0;:37;5923:111:::3;;;;-1:-1:-1::0;;;5923:111:7::3;;;;;;;:::i;:::-;6074:14;6132:13:::0;;;:6:::3;:13;::::0;;;;6175:17:::3;::::0;::::3;::::0;6091:9:::3;::::0;6132:13;6175:26:::3;::::0;6091:9;;6175:26:::3;:::i;:::-;6155:17;::::0;::::3;:46:::0;6230:16:::3;::::0;::::3;::::0;:25:::3;::::0;6249:6;;6230:25:::3;:::i;:::-;6211:16;::::0;::::3;:44:::0;6294:23:::3;6320:13:::0;;;:6:::3;:13;::::0;;;;;;;6334:10:::3;6320:25:::0;;;;;;;;;6355:32;;-1:-1:-1;;6355:32:7::3;6374:13;6355:32:::0;;::::3;::::0;;6397:14;;::::3;:23:::0;;;6430:10:::3;:22:::0;;;;;:34;;;;::::3;::::0;;;;;;;;;;::::3;::::0;;;6480;6320:13;;6334:10;6480:34:::3;::::0;::::3;::::0;6397:23;;6480:34:::3;:::i;14761:194::-:0;1196:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:0;;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;14845:57:7::1;-1:-1:-1::0;;;;;14845:27:7;::::1;14881:10;14894:7:::0;14845:27:::1;:57::i;:::-;14932:6;-1:-1:-1::0;;;;;14918:30:7::1;;14940:7;14918:30;;;;;;:::i;:::-;;;;;;;;14761:194:::0;;:::o;13138:244::-;3707:12;;-1:-1:-1;;;;;3707:12:7;3693:10;:26;3685:48;;;;-1:-1:-1;;;3685:48:7;;;;;;;:::i;:::-;-1:-1:-1;;;;;13222:30:7;::::1;13214:65;;;;-1:-1:-1::0;;;13214:65:7::1;;;;;;;:::i;:::-;13289:15;:34:::0;;-1:-1:-1;;;;;;13289:34:7::1;-1:-1:-1::0;;;;;13289:34:7;::::1;;::::0;;13339:36:::1;::::0;::::1;::::0;::::1;::::0;13289:34;;13339:36:::1;:::i;1086:26::-:0;;;;:::o;13937:251::-;1620:8:1;:6;:8::i;:::-;1612:41;;;;-1:-1:-1;;;1612:41:1;;;;;;;:::i;:::-;3707:12:7::1;::::0;-1:-1:-1;;;;;3707:12:7::1;3693:10;:26;3685:48;;;;-1:-1:-1::0;;;3685:48:7::1;;;;;;;:::i;:::-;14071:21:::2;:46:::0;;;14133:48:::2;::::0;::::2;::::0;::::2;::::0;14095:22;;14133:48:::2;:::i;10232:579::-:0;1355:8:1;:6;:8::i;:::-;1354:9;1346:38;;;;-1:-1:-1;;;1346:38:1;;;;;;;:::i;:::-;4002:15:7::1;::::0;-1:-1:-1;;;;;4002:15:7::1;3988:10;:29;3980:54;;;;-1:-1:-1::0;;;3980:54:7::1;;;;;;;:::i;:::-;10327:16:::2;::::0;-1:-1:-1;;;10327:16:7;::::2;;;10306:112;;;;-1:-1:-1::0;;;10306:112:7::2;;;;;;;:::i;:::-;10437:15;::::0;-1:-1:-1;;;10437:15:7;::::2;;;10436:16;10428:63;;;;-1:-1:-1::0;;;10428:63:7::2;;;;;;;:::i;:::-;10503:21;10526:19:::0;10549:21:::2;:19;:21::i;:::-;10502:68;;;;10611:14;-1:-1:-1::0;;;;;10603:23:7::2;10581:19;:45;;;;10637:58;10652:12;;10666:14;-1:-1:-1::0;;;;;10637:58:7::2;10682:12;10637:14;:58::i;:::-;10721:12;::::0;:16:::2;::::0;10736:1:::2;10721:16;:::i;:::-;10706:12;:31:::0;;;10747:25:::2;::::0;:11:::2;:25::i;:::-;-1:-1:-1::0;;10782:15:7::2;:22:::0;;-1:-1:-1;;;;10782:22:7::2;-1:-1:-1::0;;;10782:22:7::2;::::0;;10232:579::o;1616:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;819:28::-;;;;:::o;1312:34::-;;;;:::o;1443:47::-;1486:4;1443:47;:::o;1846:189:0:-;1196:12;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:0;;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;;-1:-1:-1::0;;;1926:73:0::1;;;;;;;:::i;:::-;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;655:36:7:-;;;-1:-1:-1;;;655:36:7;;;;;:::o;1006:27::-;;;;:::o;698:::-;;;-1:-1:-1;;;;;698:27:7;;:::o;21901:188::-;21974:12;21992:2;-1:-1:-1;;;;;21992:7:7;22007:5;21992:25;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21973:44;;;22035:7;22027:55;;;;-1:-1:-1;;;22027:55:7;;;;;;;:::i;:::-;21901:188;;;:::o;2053:117:1:-;1620:8;:6;:8::i;:::-;1612:41;;;;-1:-1:-1;;;1612:41:1;;;;;;;:::i;:::-;2121:5:::1;2111:15:::0;;-1:-1:-1;;;;2111:15:1::1;::::0;;2141:22:::1;2150:12;:10;:12::i;:::-;2141:22;;;;;;:::i;:::-;;;;;;;;2053:117::o:0;22200:375:7:-;22255:19;22277:13;;;:6;:13;;;;;22323:15;22300:20;;;:38;;;22388:15;;22370:33;;;:::i;:::-;22348:19;;;;:55;;;;22459:15;;22455:19;;;:::i;:::-;22436:39;;:15;:39;:::i;:::-;22413:20;;;:62;22485:19;;;:11;22514:17;;;:21;;;22551:17;;22499:5;;22551:17;;;22200:375;;:::o;24132:191::-;24262:20;24308:8;;;24132:191::o;22777:303::-;22834:4;22869:13;;;:6;:13;;;;;:28;;;:33;;;;:81;;-1:-1:-1;22918:13:7;;;;:6;:13;;;;;:27;;;:32;;22869:81;:143;;;;-1:-1:-1;22984:13:7;;;;:6;:13;;;;;:28;;;22966:15;:46;22869:143;:204;;;;-1:-1:-1;;23046:13:7;;;;:6;:13;;;;;:27;;;23028:15;:45;;22777:303::o;587:96:6:-;666:10;587:96;:::o;2041:169:0:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;23428:587:7:-;23482:6;23490;23508:29;23558:21;;23540:15;:39;;;;:::i;:::-;23508:71;;23590:14;23606:12;23622:17;23645:6;;;;;;;;;-1:-1:-1;;;;;23645:6:7;-1:-1:-1;;;;;23645:35:7;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23589:93;;;;;;;;23726:21;23713:9;:34;;23692:127;;;;-1:-1:-1;;;23692:127:7;;;;;;;:::i;:::-;23869:19;;23858:7;-1:-1:-1;;;;;23850:16:7;:38;23829:146;;;;-1:-1:-1;;;23829:146:7;;;;;;;:::i;:::-;-1:-1:-1;23993:7:7;;-1:-1:-1;24002:5:7;-1:-1:-1;;23428:587:7;;:::o;20329:790::-;20469:13;;;;:6;:13;;;;;:28;;;20448:123;;;;-1:-1:-1;;;20448:123:7;;;;;;;:::i;:::-;20621:13;;;;:6;:13;;;;;:27;;;20602:15;:46;;20581:132;;;;-1:-1:-1;;;20581:132:7;;;;;;;:::i;:::-;20793:13;;20763;;;;:6;:13;;;;;:27;;;:43;;20793:13;20763:43;:::i;:::-;20744:15;:62;;20723:149;;;;-1:-1:-1;;;20723:149:7;;;;;;;:::i;:::-;20882:19;20904:13;;;:6;:13;;;;;20968:15;;20950:33;;:15;:33;:::i;:::-;20927:20;;;:56;20993:15;;;:23;;;21026:18;;;:28;;;21070:42;;21047:7;;21080:5;;21070:42;;;;21011:5;;21070:42;:::i;:::-;;;;;;;;20329:790;;;;:::o;19425:758::-;19564:13;;;;:6;:13;;;;;:27;;;19543:120;;;;-1:-1:-1;;;19543:120:7;;;;;;;:::i;:::-;19713:13;;;;:6;:13;;;;;:28;;;19694:15;:47;;19673:133;;;;-1:-1:-1;;;19673:133:7;;;;;;;:::i;:::-;19887:13;;19856;;;;:6;:13;;;;;:28;;;:44;;19887:13;19856:44;:::i;:::-;19837:15;:63;;19816:149;;;;-1:-1:-1;;;19816:149:7;;;;;;;:::i;:::-;19975:19;19997:13;;;:6;:13;;;;;;;20020:16;;;:24;;;20054:19;;;:29;;;20093:18;;;:25;;-1:-1:-1;;20093:25:7;20114:4;20093:25;;;20134:42;;20076:7;;20004:5;;20134:42;;;;20039:5;;20134:42;:::i;17915:1365::-;17997:13;;;;:6;:13;;;;;:33;;;:38;:89;;;;-1:-1:-1;18055:13:7;;;;:6;:13;;;;;:26;;;:31;17997:89;17976:154;;;;-1:-1:-1;;;17976:154:7;;;;;;;:::i;:::-;18140:19;18162:13;;;:6;:13;;;;;18326:15;;;;18307:16;;;;18162:13;;18140:19;;;;;18307:34;18303:658;;;18379:5;:16;;;18357:38;;18459:5;18444:11;;18424:5;:17;;;:31;;;;:::i;:::-;18423:41;;;;:::i;:::-;18409:55;;18513:11;18493:5;:17;;;:31;;;;:::i;:::-;18478:46;;18303:658;;;18593:5;:15;;;18574:5;:16;;;:34;18570:391;;;18646:5;:16;;;18624:38;;18726:5;18711:11;;18691:5;:17;;;:31;;;;:::i;18570:391::-;-1:-1:-1;;;18933:17:7;;;;18874:1;;;18570:391;18970:25;;;:47;;;19027:18;;;:33;;;19098:14;:29;;19116:11;;19098:14;-1:-1:-1;;19098:29:7;;19116:11;;19098:29;:::i;:::-;;;;;;;;19174:5;19143:130;19193:19;19226:12;19252:11;19143:130;;;;;;;;:::i;:::-;;;;;;;;17915:1365;;;;;:::o;21230:509::-;21310:16;;-1:-1:-1;;;21310:16:7;;;;21289:112;;;;-1:-1:-1;;;21289:112:7;;;;;;;:::i;:::-;21432:6;:17;21439:9;21447:1;21439:5;:9;:::i;:::-;21432:17;;;;;;;;;;;:32;;;21468:1;21432:37;;21411:130;;;;-1:-1:-1;;;21411:130:7;;;;;;;:::i;:::-;21591:6;:17;21598:9;21606:1;21598:5;:9;:::i;:::-;21591:17;;;;;;;;;;;:32;;;21572:15;:51;;21551:153;;;;-1:-1:-1;;;21551:153:7;;;;;;;:::i;:::-;21714:18;21726:5;21714:11;:18::i;1806:115:1:-;1355:8;:6;:8::i;:::-;1354:9;1346:38;;;;-1:-1:-1;;;1346:38:1;;;;;;;:::i;:::-;1865:7:::1;:14:::0;;-1:-1:-1;;;;1865:14:1::1;-1:-1:-1::0;;;1865:14:1::1;::::0;;1894:20:::1;1901:12;:10;:12::i;634:205:4:-:0;746:86;766:5;796:23;;;821:2;825:5;773:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;773:58:4;;;;;;;;;;;;;;-1:-1:-1;;;;;773:58:4;-1:-1:-1;;;;;;773:58:4;;;;;;;;;;3559:23;3585:69;3613:4;3585:69;;;;;;;;;;;;;;;;;3593:5;-1:-1:-1;;;;;3585:27:4;;;:69;;;;;:::i;:::-;3668:17;;3559:95;;-1:-1:-1;3668:21:4;3664:176;;3763:10;3752:30;;;;;;;;;;;;:::i;:::-;3744:85;;;;-1:-1:-1;;;3744:85:4;;;;;;;:::i;3461:223:5:-;3594:12;3625:52;3647:6;3655:4;3661:1;3664:12;3625:21;:52::i;:::-;3618:59;;3461:223;;;;;;:::o;4548:499::-;4713:12;4770:5;4745:21;:30;;4737:81;;;;-1:-1:-1;;;4737:81:5;;;;;;;:::i;:::-;4836:18;4847:6;4836:10;:18::i;:::-;4828:60;;;;-1:-1:-1;;;4828:60:5;;;;;;;:::i;:::-;4900:12;4914:23;4941:6;-1:-1:-1;;;;;4941:11:5;4960:5;4967:4;4941:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:73;;;;4989:51;5006:7;5015:10;5027:12;4989:16;:51::i;:::-;4982:58;4548:499;-1:-1:-1;;;;;;;4548:499:5:o;7161:692::-;7307:12;7335:7;7331:516;;;-1:-1:-1;7365:10:5;7358:17;;7331:516;7476:17;;:21;7472:365;;7670:10;7664:17;7730:15;7717:10;7713:2;7709:19;7702:44;7619:145;7809:12;7802:20;;-1:-1:-1;;;7802:20:5;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:175:9:-;84:20;;-1:-1:-1;;;;;133:31:9;;123:42;;113:2;;179:1;176;169:12;194:181;274:13;;-1:-1:-1;;;;;316:34:9;;306:45;;296:2;;365:1;362;355:12;380:198;;492:2;480:9;471:7;467:23;463:32;460:2;;;513:6;505;498:22;460:2;541:31;562:9;541:31;:::i;583:266::-;;;712:2;700:9;691:7;687:23;683:32;680:2;;;733:6;725;718:22;680:2;761:31;782:9;761:31;:::i;:::-;751:41;839:2;824:18;;;;811:32;;-1:-1:-1;;;670:179:9:o;854:334::-;;;;1000:2;988:9;979:7;975:23;971:32;968:2;;;1021:6;1013;1006:22;968:2;1049:31;1070:9;1049:31;:::i;:::-;1039:41;1127:2;1112:18;;1099:32;;-1:-1:-1;1178:2:9;1163:18;;;1150:32;;958:230;-1:-1:-1;;;958:230:9:o;1193:666::-;;;1340:2;1328:9;1319:7;1315:23;1311:32;1308:2;;;1361:6;1353;1346:22;1308:2;1406:9;1393:23;1435:18;1476:2;1468:6;1465:14;1462:2;;;1497:6;1489;1482:22;1462:2;1540:6;1529:9;1525:22;1515:32;;1585:7;1578:4;1574:2;1570:13;1566:27;1556:2;;1612:6;1604;1597:22;1556:2;1657;1644:16;1683:2;1675:6;1672:14;1669:2;;;1704:6;1696;1689:22;1669:2;1763:7;1758:2;1752;1744:6;1740:15;1736:2;1732:24;1728:33;1725:46;1722:2;;;1789:6;1781;1774:22;1722:2;1825;1817:11;;;;;1847:6;;-1:-1:-1;1298:561:9;;-1:-1:-1;;;;1298:561:9:o;1864:297::-;;1984:2;1972:9;1963:7;1959:23;1955:32;1952:2;;;2005:6;1997;1990:22;1952:2;2042:9;2036:16;2095:5;2088:13;2081:21;2074:5;2071:32;2061:2;;2122:6;2114;2107:22;2166:190;;2278:2;2266:9;2257:7;2253:23;2249:32;2246:2;;;2299:6;2291;2284:22;2246:2;-1:-1:-1;2327:23:9;;2236:120;-1:-1:-1;2236:120:9:o;2361:266::-;;;2490:2;2478:9;2469:7;2465:23;2461:32;2458:2;;;2511:6;2503;2496:22;2458:2;2552:9;2539:23;2529:33;;2581:40;2617:2;2606:9;2602:18;2581:40;:::i;:::-;2571:50;;2448:179;;;;;:::o;2632:258::-;;;2761:2;2749:9;2740:7;2736:23;2732:32;2729:2;;;2782:6;2774;2767:22;2729:2;-1:-1:-1;;2810:23:9;;;2880:2;2865:18;;;2852:32;;-1:-1:-1;2719:171:9:o;2895:487::-;;;;;;3083:3;3071:9;3062:7;3058:23;3054:33;3051:2;;;3105:6;3097;3090:22;3051:2;3133:41;3164:9;3133:41;:::i;:::-;3123:51;;3214:2;3203:9;3199:18;3193:25;3183:35;;3258:2;3247:9;3243:18;3237:25;3227:35;;3302:2;3291:9;3287:18;3281:25;3271:35;;3325:51;3371:3;3360:9;3356:19;3325:51;:::i;:::-;3315:61;;3041:341;;;;;;;;:::o;3387:239::-;3470:1;3463:5;3460:12;3450:2;;3515:10;3510:3;3506:20;3503:1;3496:31;3550:4;3547:1;3540:15;3578:4;3575:1;3568:15;3450:2;3602:18;;3440:186::o;3631:274::-;;3798:6;3792:13;3814:53;3860:6;3855:3;3848:4;3840:6;3836:17;3814:53;:::i;:::-;3883:16;;;;;3768:137;-1:-1:-1;;3768:137:9:o;3910:205::-;4110:3;4101:14::o;4120:203::-;-1:-1:-1;;;;;4284:32:9;;;;4266:51;;4254:2;4239:18;;4221:102::o;4328:274::-;-1:-1:-1;;;;;4520:32:9;;;;4502:51;;4584:2;4569:18;;4562:34;4490:2;4475:18;;4457:145::o;4607:1507::-;4932:2;4984:21;;;5054:13;;4957:18;;;5076:22;;;4607:1507;;4932:2;5152:4;;5129:3;5114:19;;;5179:15;;;4607:1507;5225:169;5239:6;5236:1;5233:13;5225:169;;;5300:13;;5288:26;;5334:12;;;;5369:15;;;;5261:1;5254:9;5225:169;;;-1:-1:-1;;;5430:19:9;;;5410:18;;;5403:47;5500:13;;5522:21;;;5598:15;;;;5561:12;;;5633:4;5646:395;5662:8;5657:3;5654:17;5646:395;;;5733:8;5727:15;5755:45;5794:5;5789:2;5783:9;5755:45;:::i;:::-;5842:11;;;5836:18;5820:14;;;5813:42;5878:4;5938:11;;;5932:18;5925:26;5918:34;5902:14;;;5895:58;6014:17;;;;5975:14;;;;5690:1;5681:11;5646:395;;;5650:3;;6058:5;6050:13;;;;;;6101:6;6094:4;6083:9;6079:20;6072:36;4912:1202;;;;;;:::o;6119:187::-;6284:14;;6277:22;6259:41;;6247:2;6232:18;;6214:92::o;6549:360::-;6743:2;6728:18;;6755:46;6732:9;6783:6;6755:46;:::i;:::-;6837:6;6832:2;6821:9;6817:18;6810:34;6894:6;6887:14;6880:22;6875:2;6864:9;6860:18;6853:50;6710:199;;;;;;:::o;6914:175::-;7058:25;;;7046:2;7031:18;;7013:76::o;7094:383::-;;7243:2;7232:9;7225:21;7275:6;7269:13;7318:6;7313:2;7302:9;7298:18;7291:34;7334:66;7393:6;7388:2;7377:9;7373:18;7368:2;7360:6;7356:15;7334:66;:::i;:::-;7461:2;7440:15;-1:-1:-1;;7436:29:9;7421:45;;;;7468:2;7417:54;;7215:262;-1:-1:-1;;7215:262:9:o;7482:344::-;7684:2;7666:21;;;7723:2;7703:18;;;7696:30;-1:-1:-1;;;7757:2:9;7742:18;;7735:50;7817:2;7802:18;;7656:170::o;7831:347::-;8033:2;8015:21;;;8072:2;8052:18;;;8045:30;8111:25;8106:2;8091:18;;8084:53;8169:2;8154:18;;8005:173::o;8183:345::-;8385:2;8367:21;;;8424:2;8404:18;;;8397:30;-1:-1:-1;;;8458:2:9;8443:18;;8436:51;8519:2;8504:18;;8357:171::o;8533:407::-;8735:2;8717:21;;;8774:2;8754:18;;;8747:30;8813:34;8808:2;8793:18;;8786:62;-1:-1:-1;;;8879:2:9;8864:18;;8857:41;8930:3;8915:19;;8707:233::o;8945:413::-;9147:2;9129:21;;;9186:2;9166:18;;;9159:30;9225:34;9220:2;9205:18;;9198:62;-1:-1:-1;;;9291:2:9;9276:18;;9269:47;9348:3;9333:19;;9119:239::o;9363:402::-;9565:2;9547:21;;;9604:2;9584:18;;;9577:30;9643:34;9638:2;9623:18;;9616:62;-1:-1:-1;;;9709:2:9;9694:18;;9687:36;9755:3;9740:19;;9537:228::o;9770:410::-;9972:2;9954:21;;;10011:2;9991:18;;;9984:30;10050:34;10045:2;10030:18;;10023:62;-1:-1:-1;;;10116:2:9;10101:18;;10094:44;10170:3;10155:19;;9944:236::o;10185:425::-;10387:2;10369:21;;;10426:2;10406:18;;;10399:30;10465:34;10460:2;10445:18;;10438:62;10536:31;10531:2;10516:18;;10509:59;10600:3;10585:19;;10359:251::o;10615:403::-;10817:2;10799:21;;;10856:2;10836:18;;;10829:30;10895:34;10890:2;10875:18;;10868:62;-1:-1:-1;;;10961:2:9;10946:18;;10939:37;11008:3;10993:19;;10789:229::o;11023:344::-;11225:2;11207:21;;;11264:2;11244:18;;;11237:30;-1:-1:-1;;;11298:2:9;11283:18;;11276:50;11358:2;11343:18;;11197:170::o;11372:413::-;11574:2;11556:21;;;11613:2;11593:18;;;11586:30;11652:34;11647:2;11632:18;;11625:62;-1:-1:-1;;;11718:2:9;11703:18;;11696:47;11775:3;11760:19;;11546:239::o;11790:346::-;11992:2;11974:21;;;12031:2;12011:18;;;12004:30;-1:-1:-1;;;12065:2:9;12050:18;;12043:52;12127:2;12112:18;;11964:172::o;12141:403::-;12343:2;12325:21;;;12382:2;12362:18;;;12355:30;12421:34;12416:2;12401:18;;12394:62;-1:-1:-1;;;12487:2:9;12472:18;;12465:37;12534:3;12519:19;;12315:229::o;12549:419::-;12751:2;12733:21;;;12790:2;12770:18;;;12763:30;12829:34;12824:2;12809:18;;12802:62;12900:25;12895:2;12880:18;;12873:53;12958:3;12943:19;;12723:245::o;12973:342::-;13175:2;13157:21;;;13214:2;13194:18;;;13187:30;-1:-1:-1;;;13248:2:9;13233:18;;13226:48;13306:2;13291:18;;13147:168::o;13320:398::-;13522:2;13504:21;;;13561:2;13541:18;;;13534:30;13600:34;13595:2;13580:18;;13573:62;-1:-1:-1;;;13666:2:9;13651:18;;13644:32;13708:3;13693:19;;13494:224::o;13723:402::-;13925:2;13907:21;;;13964:2;13944:18;;;13937:30;14003:34;13998:2;13983:18;;13976:62;-1:-1:-1;;;14069:2:9;14054:18;;14047:36;14115:3;14100:19;;13897:228::o;14130:403::-;14332:2;14314:21;;;14371:2;14351:18;;;14344:30;14410:34;14405:2;14390:18;;14383:62;-1:-1:-1;;;14476:2:9;14461:18;;14454:37;14523:3;14508:19;;14304:229::o;14538:342::-;14740:2;14722:21;;;14779:2;14759:18;;;14752:30;-1:-1:-1;;;14813:2:9;14798:18;;14791:48;14871:2;14856:18;;14712:168::o;14885:408::-;15087:2;15069:21;;;15126:2;15106:18;;;15099:30;15165:34;15160:2;15145:18;;15138:62;-1:-1:-1;;;15231:2:9;15216:18;;15209:42;15283:3;15268:19;;15059:234::o;15298:343::-;15500:2;15482:21;;;15539:2;15519:18;;;15512:30;-1:-1:-1;;;15573:2:9;15558:18;;15551:49;15632:2;15617:18;;15472:169::o;15646:404::-;15848:2;15830:21;;;15887:2;15867:18;;;15860:30;15926:34;15921:2;15906:18;;15899:62;-1:-1:-1;;;15992:2:9;15977:18;;15970:38;16040:3;16025:19;;15820:230::o;16055:340::-;16257:2;16239:21;;;16296:2;16276:18;;;16269:30;-1:-1:-1;;;16330:2:9;16315:18;;16308:46;16386:2;16371:18;;16229:166::o;16400:346::-;16602:2;16584:21;;;16641:2;16621:18;;;16614:30;-1:-1:-1;;;16675:2:9;16660:18;;16653:52;16737:2;16722:18;;16574:172::o;16751:350::-;16953:2;16935:21;;;16992:2;16972:18;;;16965:30;17031:28;17026:2;17011:18;;17004:56;17092:2;17077:18;;16925:176::o;17106:399::-;17308:2;17290:21;;;17347:2;17327:18;;;17320:30;17386:34;17381:2;17366:18;;17359:62;-1:-1:-1;;;17452:2:9;17437:18;;17430:33;17495:3;17480:19;;17280:225::o;17510:356::-;17712:2;17694:21;;;17731:18;;;17724:30;17790:34;17785:2;17770:18;;17763:62;17857:2;17842:18;;17684:182::o;17871:342::-;18073:2;18055:21;;;18112:2;18092:18;;;18085:30;-1:-1:-1;;;18146:2:9;18131:18;;18124:48;18204:2;18189:18;;18045:168::o;18218:405::-;18420:2;18402:21;;;18459:2;18439:18;;;18432:30;18498:34;18493:2;18478:18;;18471:62;-1:-1:-1;;;18564:2:9;18549:18;;18542:39;18613:3;18598:19;;18392:231::o;18628:399::-;18830:2;18812:21;;;18869:2;18849:18;;;18842:30;18908:34;18903:2;18888:18;;18881:62;-1:-1:-1;;;18974:2:9;18959:18;;18952:33;19017:3;19002:19;;18802:225::o;19032:345::-;19234:2;19216:21;;;19273:2;19253:18;;;19246:30;-1:-1:-1;;;19307:2:9;19292:18;;19285:51;19368:2;19353:18;;19206:171::o;19382:474::-;19584:2;19566:21;;;19623:2;19603:18;;;19596:30;19662:34;19657:2;19642:18;;19635:62;19733:34;19728:2;19713:18;;19706:62;-1:-1:-1;;;19799:3:9;19784:19;;19777:37;19846:3;19831:19;;19556:300::o;19861:353::-;20063:2;20045:21;;;20102:2;20082:18;;;20075:30;20141:31;20136:2;20121:18;;20114:59;20205:2;20190:18;;20035:179::o;20219:345::-;20421:2;20403:21;;;20460:2;20440:18;;;20433:30;-1:-1:-1;;;20494:2:9;20479:18;;20472:51;20555:2;20540:18;;20393:171::o;20569:351::-;20771:2;20753:21;;;20810:2;20790:18;;;20783:30;20849:29;20844:2;20829:18;;20822:57;20911:2;20896:18;;20743:177::o;20925:406::-;21127:2;21109:21;;;21166:2;21146:18;;;21139:30;21205:34;21200:2;21185:18;;21178:62;-1:-1:-1;;;21271:2:9;21256:18;;21249:40;21321:3;21306:19;;21099:232::o;21336:355::-;21538:2;21520:21;;;21577:2;21557:18;;;21550:30;21616:33;21611:2;21596:18;;21589:61;21682:2;21667:18;;21510:181::o;21696:345::-;21898:2;21880:21;;;21937:2;21917:18;;;21910:30;-1:-1:-1;;;21971:2:9;21956:18;;21949:51;22032:2;22017:18;;21870:171::o;22046:410::-;22248:2;22230:21;;;22287:2;22267:18;;;22260:30;22326:34;22321:2;22306:18;;22299:62;-1:-1:-1;;;22392:2:9;22377:18;;22370:44;22446:3;22431:19;;22220:236::o;22461:336::-;22663:2;22645:21;;;22702:2;22682:18;;;22675:30;-1:-1:-1;;;22736:2:9;22721:18;;22714:42;22788:2;22773:18;;22635:162::o;22802:332::-;23004:2;22986:21;;;23043:1;23023:18;;;23016:29;-1:-1:-1;;;23076:2:9;23061:18;;23054:39;23125:2;23110:18;;22976:158::o;23321:248::-;23495:25;;;23551:2;23536:18;;23529:34;23483:2;23468:18;;23450:119::o;23574:319::-;23776:25;;;23832:2;23817:18;;23810:34;;;;23875:2;23860:18;;23853:34;23764:2;23749:18;;23731:162::o;23898:1125::-;24403:25;;;24459:2;24444:18;;24437:34;;;;24502:2;24487:18;;24480:34;;;;24545:2;24530:18;;24523:34;;;;24588:3;24573:19;;24566:35;;;;24632:3;24617:19;;24610:35;;;;24676:3;24661:19;;24654:35;;;;24720:3;24705:19;;24698:35;24764:3;24749:19;;24742:35;24808:3;24793:19;;24786:35;24852:3;24837:19;;24830:36;24897:3;24882:19;;24875:36;24942:3;24927:19;;24920:36;25000:15;24993:23;24987:3;24972:19;;24965:52;24390:3;24375:19;;24357:666::o;25028:275::-;-1:-1:-1;;;;;25218:35:9;;;;25200:54;;25285:2;25270:18;;25263:34;25188:2;25173:18;;25155:148::o;25308:128::-;;25379:1;25375:6;25372:1;25369:13;25366:2;;;25385:18;;:::i;:::-;-1:-1:-1;25421:9:9;;25356:80::o;25441:217::-;;25507:1;25497:2;;-1:-1:-1;;;25532:31:9;;25586:4;25583:1;25576:15;25614:4;25539:1;25604:15;25497:2;-1:-1:-1;25643:9:9;;25487:171::o;25663:168::-;;25769:1;25765;25761:6;25757:14;25754:1;25751:21;25746:1;25739:9;25732:17;25728:45;25725:2;;;25776:18;;:::i;:::-;-1:-1:-1;25816:9:9;;25715:116::o;25836:125::-;;25904:1;25901;25898:8;25895:2;;;25909:18;;:::i;:::-;-1:-1:-1;25946:9:9;;25885:76::o;25966:258::-;26038:1;26048:113;26062:6;26059:1;26056:13;26048:113;;;26138:11;;;26132:18;26119:11;;;26112:39;26084:2;26077:10;26048:113;;;26179:6;26176:1;26173:13;26170:2;;;26214:1;26205:6;26200:3;26196:16;26189:27;26170:2;;26019:205;;;:::o;26229:135::-;;-1:-1:-1;;26289:17:9;;26286:2;;;26309:18;;:::i;:::-;-1:-1:-1;26356:1:9;26345:13;;26276:88::o;26369:127::-;26430:10;26425:3;26421:20;26418:1;26411:31;26461:4;26458:1;26451:15;26485:4;26482:1;26475:15"
            },
            "methodIdentifiers": {
              "MAX_TREASURY_FEE()": "f2b3c809",
              "adminAddress()": "fc6f9468",
              "betBear(uint256)": "aa6b873a",
              "betBull(uint256)": "57fb096f",
              "bufferSeconds()": "eaba2361",
              "claim(uint256[])": "6ba4c138",
              "claimTreasury()": "003bdc74",
              "claimable(uint256,address)": "a0c7f71c",
              "currentEpoch()": "76671808",
              "executeRound()": "7b3205f5",
              "genesisLockOnce()": "0f74174f",
              "genesisLockRound()": "d9d55eac",
              "genesisStartOnce()": "f7fdec28",
              "genesisStartRound()": "452fd75a",
              "getBlockTimestamp()": "796b89b9",
              "getLatestOracleRounds()": "29b72441",
              "getUserRounds(address,uint256,uint256)": "951fd600",
              "getUserRoundsLength(address)": "273867d4",
              "intervalSeconds()": "7d1cd04f",
              "ledger(uint256,address)": "7285c58b",
              "minBetAmount()": "fa968eea",
              "operatorAddress()": "127effb2",
              "oracle()": "7dc0d1d0",
              "oracleLatestRoundId()": "ec324703",
              "oracleUpdateAllowance()": "60554011",
              "owner()": "8da5cb5b",
              "pause()": "8456cb59",
              "paused()": "5c975abb",
              "recoverToken(address,uint256)": "b29a8140",
              "refundable(uint256,address)": "7bf41254",
              "renounceOwnership()": "715018a6",
              "rounds(uint256)": "8c65c81f",
              "setAdmin(address)": "704b6c02",
              "setBufferAndIntervalSeconds(uint256,uint256)": "890dc766",
              "setMinBetAmount(uint256)": "6c188593",
              "setOperator(address)": "b3ab15fb",
              "setOracle(address)": "7adbf973",
              "setOracleUpdateAllowance(uint256)": "cf2f5039",
              "setTreasuryFee(uint256)": "77e741c7",
              "transferOwnership(address)": "f2fde38b",
              "treasuryAmount()": "368acb09",
              "treasuryFee()": "cc32d176",
              "unpause()": "3f4ba83a",
              "userRounds(address,uint256)": "dd1f7596"
            }
          }
        }
      },
      "contracts/interfaces/AggregatorV3Interface.sol": {
        "AggregatorV3Interface": {
          "abi": [
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "description",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint80",
                  "name": "_roundId",
                  "type": "uint80"
                }
              ],
              "name": "getRoundData",
              "outputs": [
                {
                  "internalType": "uint80",
                  "name": "roundId",
                  "type": "uint80"
                },
                {
                  "internalType": "int256",
                  "name": "answer",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "startedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "updatedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint80",
                  "name": "answeredInRound",
                  "type": "uint80"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "latestRoundData",
              "outputs": [
                {
                  "internalType": "uint80",
                  "name": "roundId",
                  "type": "uint80"
                },
                {
                  "internalType": "int256",
                  "name": "answer",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "startedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "updatedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint80",
                  "name": "answeredInRound",
                  "type": "uint80"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "decimals()": "313ce567",
              "description()": "7284e416",
              "getRoundData(uint80)": "9a6fc8f5",
              "latestRoundData()": "feaf968c",
              "version()": "54fd4d50"
            }
          }
        }
      }
    },
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              856
            ],
            "Ownable": [
              103
            ]
          },
          "id": 104,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 2,
              "nodeType": "ImportDirective",
              "scope": 104,
              "sourceUnit": 857,
              "src": "58:30:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 4,
                    "name": "Context",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 856,
                    "src": "614:7:0"
                  },
                  "id": 5,
                  "nodeType": "InheritanceSpecifier",
                  "src": "614:7:0"
                }
              ],
              "contractDependencies": [
                856
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 3,
                "nodeType": "StructuredDocumentation",
                "src": "90:494:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 103,
              "linearizedBaseContracts": [
                103,
                856
              ],
              "name": "Ownable",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "628:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "628:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "id": 13,
                  "name": "OwnershipTransferred",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 9,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "684:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "684:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 11,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "715:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "715:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "683:57:0"
                  },
                  "src": "657:84:0"
                },
                {
                  "body": {
                    "id": 22,
                    "nodeType": "Block",
                    "src": "857:40:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 18,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 846,
                                "src": "877:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 19,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "877:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 17,
                            "name": "_setOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102,
                            "src": "867:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 20,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "867:23:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 21,
                        "nodeType": "ExpressionStatement",
                        "src": "867:23:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "747:91:0",
                    "text": " @dev Initializes the contract setting the deployer as the initial owner."
                  },
                  "id": 23,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "854:2:0"
                  },
                  "returnParameters": {
                    "id": 16,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "857:0:0"
                  },
                  "scope": 103,
                  "src": "843:54:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 31,
                    "nodeType": "Block",
                    "src": "1028:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 29,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "1045:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 28,
                        "id": 30,
                        "nodeType": "Return",
                        "src": "1038:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 24,
                    "nodeType": "StructuredDocumentation",
                    "src": "903:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 32,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 25,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "987:2:0"
                  },
                  "returnParameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 32,
                        "src": "1019:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1019:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1018:9:0"
                  },
                  "scope": 103,
                  "src": "973:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 45,
                    "nodeType": "Block",
                    "src": "1167:96:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 40,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 36,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32,
                                  "src": "1185:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 37,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1185:7:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 38,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 846,
                                  "src": "1196:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 39,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1196:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1185:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                              "id": 41,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1210:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              },
                              "value": "Ownable: caller is not the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              }
                            ],
                            "id": 35,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1177:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1177:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 43,
                        "nodeType": "ExpressionStatement",
                        "src": "1177:68:0"
                      },
                      {
                        "id": 44,
                        "nodeType": "PlaceholderStatement",
                        "src": "1255:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 33,
                    "nodeType": "StructuredDocumentation",
                    "src": "1064:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 46,
                  "name": "onlyOwner",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 34,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1164:2:0"
                  },
                  "src": "1146:117:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 59,
                    "nodeType": "Block",
                    "src": "1659:38:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 55,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1687:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 54,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1679:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 53,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1679:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 56,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1679:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 52,
                            "name": "_setOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102,
                            "src": "1669:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1669:21:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 58,
                        "nodeType": "ExpressionStatement",
                        "src": "1669:21:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 47,
                    "nodeType": "StructuredDocumentation",
                    "src": "1269:331:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 60,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 50,
                      "modifierName": {
                        "id": 49,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 46,
                        "src": "1649:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1649:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 48,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1631:2:0"
                  },
                  "returnParameters": {
                    "id": 51,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1659:0:0"
                  },
                  "scope": 103,
                  "src": "1605:92:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 82,
                    "nodeType": "Block",
                    "src": "1916:119:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 74,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 69,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63,
                                "src": "1934:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 72,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1954:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 71,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1946:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 70,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1946:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 73,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1946:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1934:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                              "id": 75,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1958:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              },
                              "value": "Ownable: new owner is the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              }
                            ],
                            "id": 68,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1926:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 76,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1926:73:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 77,
                        "nodeType": "ExpressionStatement",
                        "src": "1926:73:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 79,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63,
                              "src": "2019:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 78,
                            "name": "_setOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102,
                            "src": "2009:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2009:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 81,
                        "nodeType": "ExpressionStatement",
                        "src": "2009:19:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 61,
                    "nodeType": "StructuredDocumentation",
                    "src": "1703:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 83,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 66,
                      "modifierName": {
                        "id": 65,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 46,
                        "src": "1906:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1906:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 64,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 63,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 83,
                        "src": "1873:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 62,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1873:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1872:18:0"
                  },
                  "returnParameters": {
                    "id": 67,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1916:0:0"
                  },
                  "scope": 103,
                  "src": "1846:189:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 101,
                    "nodeType": "Block",
                    "src": "2086:124:0",
                    "statements": [
                      {
                        "assignments": [
                          89
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 89,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nodeType": "VariableDeclaration",
                            "scope": 101,
                            "src": "2096:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 88,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2096:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 91,
                        "initialValue": {
                          "id": 90,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "2115:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2096:25:0"
                      },
                      {
                        "expression": {
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 92,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "2131:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 93,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85,
                            "src": "2140:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2131:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 95,
                        "nodeType": "ExpressionStatement",
                        "src": "2131:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 97,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89,
                              "src": "2184:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 98,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85,
                              "src": "2194:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 96,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "2163:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 99,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2163:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 100,
                        "nodeType": "EmitStatement",
                        "src": "2158:45:0"
                      }
                    ]
                  },
                  "id": 102,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setOwner",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 85,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 102,
                        "src": "2060:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 84,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2060:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2059:18:0"
                  },
                  "returnParameters": {
                    "id": 87,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2086:0:0"
                  },
                  "scope": 103,
                  "src": "2041:169:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 104,
              "src": "585:1627:0"
            }
          ],
          "src": "33:2180:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/security/Pausable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
          "exportedSymbols": {
            "Context": [
              856
            ],
            "Pausable": [
              195
            ]
          },
          "id": 196,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 105,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:1"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 106,
              "nodeType": "ImportDirective",
              "scope": 196,
              "sourceUnit": 857,
              "src": "58:30:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 108,
                    "name": "Context",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 856,
                    "src": "560:7:1"
                  },
                  "id": 109,
                  "nodeType": "InheritanceSpecifier",
                  "src": "560:7:1"
                }
              ],
              "contractDependencies": [
                856
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 107,
                "nodeType": "StructuredDocumentation",
                "src": "90:439:1",
                "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
              },
              "fullyImplemented": true,
              "id": 195,
              "linearizedBaseContracts": [
                195,
                856
              ],
              "name": "Pausable",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 110,
                    "nodeType": "StructuredDocumentation",
                    "src": "574:73:1",
                    "text": " @dev Emitted when the pause is triggered by `account`."
                  },
                  "id": 114,
                  "name": "Paused",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 113,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 112,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 114,
                        "src": "665:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 111,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "665:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "664:17:1"
                  },
                  "src": "652:30:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 115,
                    "nodeType": "StructuredDocumentation",
                    "src": "688:70:1",
                    "text": " @dev Emitted when the pause is lifted by `account`."
                  },
                  "id": 119,
                  "name": "Unpaused",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 118,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 117,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 119,
                        "src": "778:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 116,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "778:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "777:17:1"
                  },
                  "src": "763:32:1"
                },
                {
                  "constant": false,
                  "id": 121,
                  "mutability": "mutable",
                  "name": "_paused",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "801:20:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "801:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 129,
                    "nodeType": "Block",
                    "src": "914:32:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 125,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "924:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "934:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "924:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 128,
                        "nodeType": "ExpressionStatement",
                        "src": "924:15:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 122,
                    "nodeType": "StructuredDocumentation",
                    "src": "828:67:1",
                    "text": " @dev Initializes the contract in unpaused state."
                  },
                  "id": 130,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 123,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "911:2:1"
                  },
                  "returnParameters": {
                    "id": 124,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "914:0:1"
                  },
                  "scope": 195,
                  "src": "900:46:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 138,
                    "nodeType": "Block",
                    "src": "1094:31:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 136,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 121,
                          "src": "1111:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 135,
                        "id": 137,
                        "nodeType": "Return",
                        "src": "1104:14:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 131,
                    "nodeType": "StructuredDocumentation",
                    "src": "952:84:1",
                    "text": " @dev Returns true if the contract is paused, and false otherwise."
                  },
                  "functionSelector": "5c975abb",
                  "id": 139,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "paused",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 132,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1056:2:1"
                  },
                  "returnParameters": {
                    "id": 135,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 134,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 139,
                        "src": "1088:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 133,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1088:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1087:6:1"
                  },
                  "scope": 195,
                  "src": "1041:84:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 150,
                    "nodeType": "Block",
                    "src": "1336:66:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "1354:9:1",
                              "subExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 143,
                                  "name": "paused",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 139,
                                  "src": "1355:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                    "typeString": "function () view returns (bool)"
                                  }
                                },
                                "id": 144,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1355:8:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5061757361626c653a20706175736564",
                              "id": 146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1365:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                                "typeString": "literal_string \"Pausable: paused\""
                              },
                              "value": "Pausable: paused"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                                "typeString": "literal_string \"Pausable: paused\""
                              }
                            ],
                            "id": 142,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1346:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1346:38:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 148,
                        "nodeType": "ExpressionStatement",
                        "src": "1346:38:1"
                      },
                      {
                        "id": 149,
                        "nodeType": "PlaceholderStatement",
                        "src": "1394:1:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 140,
                    "nodeType": "StructuredDocumentation",
                    "src": "1131:175:1",
                    "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 151,
                  "name": "whenNotPaused",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 141,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1333:2:1"
                  },
                  "src": "1311:91:1",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 161,
                    "nodeType": "Block",
                    "src": "1602:69:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 155,
                                "name": "paused",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 139,
                                "src": "1620:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                  "typeString": "function () view returns (bool)"
                                }
                              },
                              "id": 156,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1620:8:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5061757361626c653a206e6f7420706175736564",
                              "id": 157,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1630:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                                "typeString": "literal_string \"Pausable: not paused\""
                              },
                              "value": "Pausable: not paused"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                                "typeString": "literal_string \"Pausable: not paused\""
                              }
                            ],
                            "id": 154,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1612:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1612:41:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 159,
                        "nodeType": "ExpressionStatement",
                        "src": "1612:41:1"
                      },
                      {
                        "id": 160,
                        "nodeType": "PlaceholderStatement",
                        "src": "1663:1:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 152,
                    "nodeType": "StructuredDocumentation",
                    "src": "1408:167:1",
                    "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 162,
                  "name": "whenPaused",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 153,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1599:2:1"
                  },
                  "src": "1580:91:1",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 177,
                    "nodeType": "Block",
                    "src": "1855:66:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 168,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "1865:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 169,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1875:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1865:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 171,
                        "nodeType": "ExpressionStatement",
                        "src": "1865:14:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 173,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 846,
                                "src": "1901:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 174,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1901:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 172,
                            "name": "Paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 114,
                            "src": "1894:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1894:20:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 176,
                        "nodeType": "EmitStatement",
                        "src": "1889:25:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 163,
                    "nodeType": "StructuredDocumentation",
                    "src": "1677:124:1",
                    "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 178,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 166,
                      "modifierName": {
                        "id": 165,
                        "name": "whenNotPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 151,
                        "src": "1841:13:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1841:13:1"
                    }
                  ],
                  "name": "_pause",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 164,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1821:2:1"
                  },
                  "returnParameters": {
                    "id": 167,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1855:0:1"
                  },
                  "scope": 195,
                  "src": "1806:115:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 193,
                    "nodeType": "Block",
                    "src": "2101:69:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 184,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "2111:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2121:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2111:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 187,
                        "nodeType": "ExpressionStatement",
                        "src": "2111:15:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 189,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 846,
                                "src": "2150:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2150:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 188,
                            "name": "Unpaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 119,
                            "src": "2141:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2141:22:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 192,
                        "nodeType": "EmitStatement",
                        "src": "2136:27:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 179,
                    "nodeType": "StructuredDocumentation",
                    "src": "1927:121:1",
                    "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 194,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 182,
                      "modifierName": {
                        "id": 181,
                        "name": "whenPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 162,
                        "src": "2090:10:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2090:10:1"
                    }
                  ],
                  "name": "_unpause",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 180,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2070:2:1"
                  },
                  "returnParameters": {
                    "id": 183,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2101:0:1"
                  },
                  "scope": 195,
                  "src": "2053:117:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 196,
              "src": "530:1642:1"
            }
          ],
          "src": "33:2140:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
          "exportedSymbols": {
            "ReentrancyGuard": [
              235
            ]
          },
          "id": 236,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 197,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:2"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 198,
                "nodeType": "StructuredDocumentation",
                "src": "58:750:2",
                "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
              },
              "fullyImplemented": true,
              "id": 235,
              "linearizedBaseContracts": [
                235
              ],
              "name": "ReentrancyGuard",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 201,
                  "mutability": "constant",
                  "name": "_NOT_ENTERED",
                  "nodeType": "VariableDeclaration",
                  "scope": 235,
                  "src": "1597:41:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 199,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1597:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1637:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 204,
                  "mutability": "constant",
                  "name": "_ENTERED",
                  "nodeType": "VariableDeclaration",
                  "scope": 235,
                  "src": "1644:37:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1644:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1680:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "_status",
                  "nodeType": "VariableDeclaration",
                  "scope": 235,
                  "src": "1688:23:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1688:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 213,
                    "nodeType": "Block",
                    "src": "1732:39:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 209,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 206,
                            "src": "1742:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 210,
                            "name": "_NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 201,
                            "src": "1752:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1742:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 212,
                        "nodeType": "ExpressionStatement",
                        "src": "1742:22:2"
                      }
                    ]
                  },
                  "id": 214,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 207,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1729:2:2"
                  },
                  "returnParameters": {
                    "id": 208,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1732:0:2"
                  },
                  "scope": 235,
                  "src": "1718:53:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 233,
                    "nodeType": "Block",
                    "src": "2170:421:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 218,
                                "name": "_status",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 206,
                                "src": "2259:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 219,
                                "name": "_ENTERED",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 204,
                                "src": "2270:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2259:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                              "id": 221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2280:33:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                                "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                              },
                              "value": "ReentrancyGuard: reentrant call"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                                "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                              }
                            ],
                            "id": 217,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2251:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2251:63:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 223,
                        "nodeType": "ExpressionStatement",
                        "src": "2251:63:2"
                      },
                      {
                        "expression": {
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 224,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 206,
                            "src": "2389:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 225,
                            "name": "_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 204,
                            "src": "2399:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2389:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 227,
                        "nodeType": "ExpressionStatement",
                        "src": "2389:18:2"
                      },
                      {
                        "id": 228,
                        "nodeType": "PlaceholderStatement",
                        "src": "2418:1:2"
                      },
                      {
                        "expression": {
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 229,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 206,
                            "src": "2562:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 230,
                            "name": "_NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 201,
                            "src": "2572:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2562:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 232,
                        "nodeType": "ExpressionStatement",
                        "src": "2562:22:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 215,
                    "nodeType": "StructuredDocumentation",
                    "src": "1777:364:2",
                    "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and make it call a\n `private` function that does the actual work."
                  },
                  "id": 234,
                  "name": "nonReentrant",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 216,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2167:2:2"
                  },
                  "src": "2146:445:2",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 236,
              "src": "809:1784:2"
            }
          ],
          "src": "33:2561:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              313
            ]
          },
          "id": 314,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 237,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 238,
                "nodeType": "StructuredDocumentation",
                "src": "58:70:3",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 313,
              "linearizedBaseContracts": [
                313
              ],
              "name": "IERC20",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 239,
                    "nodeType": "StructuredDocumentation",
                    "src": "152:66:3",
                    "text": " @dev Returns the amount of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 244,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 240,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "243:2:3"
                  },
                  "returnParameters": {
                    "id": 243,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 242,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 244,
                        "src": "269:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 241,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "269:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "268:9:3"
                  },
                  "scope": 313,
                  "src": "223:55:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 245,
                    "nodeType": "StructuredDocumentation",
                    "src": "284:72:3",
                    "text": " @dev Returns the amount of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 252,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 248,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 247,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 252,
                        "src": "380:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 246,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "380:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "379:17:3"
                  },
                  "returnParameters": {
                    "id": 251,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 250,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 252,
                        "src": "420:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 249,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "420:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "419:9:3"
                  },
                  "scope": 313,
                  "src": "361:68:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 253,
                    "nodeType": "StructuredDocumentation",
                    "src": "435:209:3",
                    "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 262,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 258,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 255,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 262,
                        "src": "667:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 254,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "667:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 257,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 262,
                        "src": "686:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 256,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "686:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "666:35:3"
                  },
                  "returnParameters": {
                    "id": 261,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 260,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 262,
                        "src": "720:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 259,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "720:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "719:6:3"
                  },
                  "scope": 313,
                  "src": "649:77:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 263,
                    "nodeType": "StructuredDocumentation",
                    "src": "732:264:3",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 272,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 268,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 265,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 272,
                        "src": "1020:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 264,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1020:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 267,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 272,
                        "src": "1035:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 266,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1035:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1019:32:3"
                  },
                  "returnParameters": {
                    "id": 271,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 270,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 272,
                        "src": "1075:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 269,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1075:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1074:9:3"
                  },
                  "scope": 313,
                  "src": "1001:83:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 273,
                    "nodeType": "StructuredDocumentation",
                    "src": "1090:642:3",
                    "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 282,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 278,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 275,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 282,
                        "src": "1754:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 274,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1754:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 277,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 282,
                        "src": "1771:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 276,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1771:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1753:33:3"
                  },
                  "returnParameters": {
                    "id": 281,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 280,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 282,
                        "src": "1805:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 279,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1805:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1804:6:3"
                  },
                  "scope": 313,
                  "src": "1737:74:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 283,
                    "nodeType": "StructuredDocumentation",
                    "src": "1817:296:3",
                    "text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 294,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 290,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 285,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "2149:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 284,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2149:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 287,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "2173:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 286,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2173:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 289,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "2200:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 288,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2200:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2139:81:3"
                  },
                  "returnParameters": {
                    "id": 293,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 292,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "2239:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 291,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2239:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2238:6:3"
                  },
                  "scope": 313,
                  "src": "2118:127:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 295,
                    "nodeType": "StructuredDocumentation",
                    "src": "2251:158:3",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "id": 303,
                  "name": "Transfer",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 302,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 297,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 303,
                        "src": "2429:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 296,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2429:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 299,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 303,
                        "src": "2451:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 298,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2451:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 301,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 303,
                        "src": "2471:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 300,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2471:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2428:57:3"
                  },
                  "src": "2414:72:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 304,
                    "nodeType": "StructuredDocumentation",
                    "src": "2492:148:3",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "id": 312,
                  "name": "Approval",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 311,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 306,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 312,
                        "src": "2660:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 305,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2660:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 308,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 312,
                        "src": "2683:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 307,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2683:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 310,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 312,
                        "src": "2708:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 309,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2708:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2659:63:3"
                  },
                  "src": "2645:78:3"
                }
              ],
              "scope": 314,
              "src": "129:2596:3"
            }
          ],
          "src": "33:2693:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
          "exportedSymbols": {
            "Address": [
              834
            ],
            "IERC20": [
              313
            ],
            "SafeERC20": [
              537
            ]
          },
          "id": 538,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 315,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:4"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 316,
              "nodeType": "ImportDirective",
              "scope": 538,
              "sourceUnit": 314,
              "src": "58:23:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
              "file": "../../../utils/Address.sol",
              "id": 317,
              "nodeType": "ImportDirective",
              "scope": 538,
              "sourceUnit": 835,
              "src": "82:36:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 318,
                "nodeType": "StructuredDocumentation",
                "src": "120:457:4",
                "text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
              },
              "fullyImplemented": true,
              "id": 537,
              "linearizedBaseContracts": [
                537
              ],
              "name": "SafeERC20",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 321,
                  "libraryName": {
                    "id": 319,
                    "name": "Address",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 834,
                    "src": "608:7:4"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "602:26:4",
                  "typeName": {
                    "id": 320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "620:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                },
                {
                  "body": {
                    "id": 343,
                    "nodeType": "Block",
                    "src": "736:103:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 332,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 324,
                              "src": "766:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$313",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 335,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 324,
                                      "src": "796:5:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$313",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 336,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "transfer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 262,
                                    "src": "796:14:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 337,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "796:23:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 338,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 326,
                                  "src": "821:2:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 339,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 328,
                                  "src": "825:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 333,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "773:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 334,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "773:22:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 340,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "773:58:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$313",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 331,
                            "name": "_callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 536,
                            "src": "746:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$313_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "746:86:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 342,
                        "nodeType": "ExpressionStatement",
                        "src": "746:86:4"
                      }
                    ]
                  },
                  "id": 344,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 329,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 324,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 344,
                        "src": "665:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$313",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 323,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 322,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 313,
                            "src": "665:6:4"
                          },
                          "referencedDeclaration": 313,
                          "src": "665:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$313",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 326,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 344,
                        "src": "687:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 325,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 328,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 344,
                        "src": "707:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 327,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "707:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "655:71:4"
                  },
                  "returnParameters": {
                    "id": 330,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "736:0:4"
                  },
                  "scope": 537,
                  "src": "634:205:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 369,
                    "nodeType": "Block",
                    "src": "973:113:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 357,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 347,
                              "src": "1003:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$313",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 360,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 347,
                                      "src": "1033:5:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$313",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 361,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "transferFrom",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 294,
                                    "src": "1033:18:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 362,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "1033:27:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 363,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 349,
                                  "src": "1062:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 364,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 351,
                                  "src": "1068:2:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 365,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 353,
                                  "src": "1072:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 358,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1010:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 359,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "1010:22:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 366,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1010:68:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$313",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 356,
                            "name": "_callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 536,
                            "src": "983:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$313_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "983:96:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 368,
                        "nodeType": "ExpressionStatement",
                        "src": "983:96:4"
                      }
                    ]
                  },
                  "id": 370,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 354,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 347,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 370,
                        "src": "880:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$313",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 346,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 345,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 313,
                            "src": "880:6:4"
                          },
                          "referencedDeclaration": 313,
                          "src": "880:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$313",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 349,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 370,
                        "src": "902:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 348,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "902:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 351,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 370,
                        "src": "924:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 350,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "924:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 353,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 370,
                        "src": "944:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 352,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "944:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "870:93:4"
                  },
                  "returnParameters": {
                    "id": 355,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "973:0:4"
                  },
                  "scope": 537,
                  "src": "845:241:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 413,
                    "nodeType": "Block",
                    "src": "1452:497:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 384,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 382,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 378,
                                      "src": "1701:5:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 383,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1710:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "1701:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 385,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1700:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 395,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 390,
                                              "name": "this",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -28,
                                              "src": "1741:4:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_SafeERC20_$537",
                                                "typeString": "library SafeERC20"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_SafeERC20_$537",
                                                "typeString": "library SafeERC20"
                                              }
                                            ],
                                            "id": 389,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "1733:7:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 388,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "1733:7:4",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 391,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "1733:13:4",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 392,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 376,
                                          "src": "1748:7:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 386,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 374,
                                          "src": "1717:5:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$313",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 387,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "allowance",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 272,
                                        "src": "1717:15:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address,address) view external returns (uint256)"
                                        }
                                      },
                                      "id": 393,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1717:39:4",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 394,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1760:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "1717:44:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 396,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1716:46:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1700:62:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
                              "id": 398,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1776:56:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
                                "typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
                              },
                              "value": "SafeERC20: approve from non-zero to non-zero allowance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
                                "typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
                              }
                            ],
                            "id": 381,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1679:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1679:163:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 400,
                        "nodeType": "ExpressionStatement",
                        "src": "1679:163:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 402,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 374,
                              "src": "1872:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$313",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 405,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 374,
                                      "src": "1902:5:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$313",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 406,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "approve",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 282,
                                    "src": "1902:13:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 407,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "1902:22:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 408,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 376,
                                  "src": "1926:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 409,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 378,
                                  "src": "1935:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 403,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1879:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 404,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "1879:22:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1879:62:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$313",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 401,
                            "name": "_callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 536,
                            "src": "1852:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$313_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1852:90:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 412,
                        "nodeType": "ExpressionStatement",
                        "src": "1852:90:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 371,
                    "nodeType": "StructuredDocumentation",
                    "src": "1092:249:4",
                    "text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
                  },
                  "id": 414,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeApprove",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 379,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 374,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 414,
                        "src": "1376:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$313",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 373,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 372,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 313,
                            "src": "1376:6:4"
                          },
                          "referencedDeclaration": 313,
                          "src": "1376:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$313",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 376,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 414,
                        "src": "1398:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 375,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1398:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 378,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 414,
                        "src": "1423:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 377,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1423:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1366:76:4"
                  },
                  "returnParameters": {
                    "id": 380,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1452:0:4"
                  },
                  "scope": 537,
                  "src": "1346:603:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 449,
                    "nodeType": "Block",
                    "src": "2071:194:4",
                    "statements": [
                      {
                        "assignments": [
                          425
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 425,
                            "mutability": "mutable",
                            "name": "newAllowance",
                            "nodeType": "VariableDeclaration",
                            "scope": 449,
                            "src": "2081:20:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 424,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2081:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 436,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 430,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "2128:4:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_SafeERC20_$537",
                                      "typeString": "library SafeERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SafeERC20_$537",
                                      "typeString": "library SafeERC20"
                                    }
                                  ],
                                  "id": 429,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2120:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 428,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2120:7:4",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 431,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2120:13:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 432,
                                "name": "spender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 419,
                                "src": "2135:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 426,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 417,
                                "src": "2104:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$313",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "allowance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 272,
                              "src": "2104:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address,address) view external returns (uint256)"
                              }
                            },
                            "id": 433,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2104:39:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 434,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 421,
                            "src": "2146:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2104:47:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2081:70:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 438,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 417,
                              "src": "2181:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$313",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 441,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 417,
                                      "src": "2211:5:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$313",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 442,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "approve",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 282,
                                    "src": "2211:13:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 443,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "2211:22:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 444,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 419,
                                  "src": "2235:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 445,
                                  "name": "newAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 425,
                                  "src": "2244:12:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 439,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2188:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 440,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "2188:22:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 446,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2188:69:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$313",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 437,
                            "name": "_callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 536,
                            "src": "2161:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$313_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2161:97:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 448,
                        "nodeType": "ExpressionStatement",
                        "src": "2161:97:4"
                      }
                    ]
                  },
                  "id": 450,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeIncreaseAllowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 422,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 417,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "1995:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$313",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 416,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 415,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 313,
                            "src": "1995:6:4"
                          },
                          "referencedDeclaration": 313,
                          "src": "1995:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$313",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 419,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "2017:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 418,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2017:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 421,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "2042:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 420,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2042:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1985:76:4"
                  },
                  "returnParameters": {
                    "id": 423,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2071:0:4"
                  },
                  "scope": 537,
                  "src": "1955:310:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 497,
                    "nodeType": "Block",
                    "src": "2387:370:4",
                    "statements": [
                      {
                        "id": 496,
                        "nodeType": "UncheckedBlock",
                        "src": "2397:354:4",
                        "statements": [
                          {
                            "assignments": [
                              461
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 461,
                                "mutability": "mutable",
                                "name": "oldAllowance",
                                "nodeType": "VariableDeclaration",
                                "scope": 496,
                                "src": "2421:20:4",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 460,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2421:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 470,
                            "initialValue": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 466,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "2468:4:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SafeERC20_$537",
                                        "typeString": "library SafeERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SafeERC20_$537",
                                        "typeString": "library SafeERC20"
                                      }
                                    ],
                                    "id": 465,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2460:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 464,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2460:7:4",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 467,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2460:13:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 468,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 455,
                                  "src": "2475:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 462,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 453,
                                  "src": "2444:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$313",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 463,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "allowance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 272,
                                "src": "2444:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address,address) view external returns (uint256)"
                                }
                              },
                              "id": 469,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2444:39:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "2421:62:4"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 474,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 472,
                                    "name": "oldAllowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 461,
                                    "src": "2505:12:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">=",
                                  "rightExpression": {
                                    "id": 473,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 457,
                                    "src": "2521:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2505:21:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                                  "id": 475,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2528:43:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
                                    "typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
                                  },
                                  "value": "SafeERC20: decreased allowance below zero"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
                                    "typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
                                  }
                                ],
                                "id": 471,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "2497:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 476,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2497:75:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 477,
                            "nodeType": "ExpressionStatement",
                            "src": "2497:75:4"
                          },
                          {
                            "assignments": [
                              479
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 479,
                                "mutability": "mutable",
                                "name": "newAllowance",
                                "nodeType": "VariableDeclaration",
                                "scope": 496,
                                "src": "2586:20:4",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 478,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2586:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 483,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 482,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 480,
                                "name": "oldAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 461,
                                "src": "2609:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 481,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 457,
                                "src": "2624:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2609:20:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "2586:43:4"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 485,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 453,
                                  "src": "2663:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$313",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "expression": {
                                          "id": 488,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 453,
                                          "src": "2693:5:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$313",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 489,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "approve",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 282,
                                        "src": "2693:13:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        }
                                      },
                                      "id": 490,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "2693:22:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    {
                                      "id": 491,
                                      "name": "spender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 455,
                                      "src": "2717:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 492,
                                      "name": "newAllowance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 479,
                                      "src": "2726:12:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 486,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "2670:3:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 487,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encodeWithSelector",
                                    "nodeType": "MemberAccess",
                                    "src": "2670:22:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes4) pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 493,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2670:69:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$313",
                                    "typeString": "contract IERC20"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 484,
                                "name": "_callOptionalReturn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 536,
                                "src": "2643:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$313_$_t_bytes_memory_ptr_$returns$__$",
                                  "typeString": "function (contract IERC20,bytes memory)"
                                }
                              },
                              "id": 494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2643:97:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 495,
                            "nodeType": "ExpressionStatement",
                            "src": "2643:97:4"
                          }
                        ]
                      }
                    ]
                  },
                  "id": 498,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeDecreaseAllowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 458,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 453,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 498,
                        "src": "2311:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$313",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 452,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 451,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 313,
                            "src": "2311:6:4"
                          },
                          "referencedDeclaration": 313,
                          "src": "2311:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$313",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 455,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 498,
                        "src": "2333:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 454,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2333:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 457,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 498,
                        "src": "2358:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 456,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2358:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2301:76:4"
                  },
                  "returnParameters": {
                    "id": 459,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2387:0:4"
                  },
                  "scope": 537,
                  "src": "2271:486:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 535,
                    "nodeType": "Block",
                    "src": "3210:636:4",
                    "statements": [
                      {
                        "assignments": [
                          508
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 508,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nodeType": "VariableDeclaration",
                            "scope": 535,
                            "src": "3559:23:4",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 507,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3559:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 517,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 514,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 504,
                              "src": "3613:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
                              "id": 515,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3619:34:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
                                "typeString": "literal_string \"SafeERC20: low-level call failed\""
                              },
                              "value": "SafeERC20: low-level call failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
                                "typeString": "literal_string \"SafeERC20: low-level call failed\""
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 511,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 502,
                                  "src": "3593:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$313",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$313",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 510,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3585:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 509,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3585:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3585:14:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "functionCall",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 628,
                            "src": "3585:27:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                              "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3585:69:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3559:95:4"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 518,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 508,
                              "src": "3668:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3668:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3688:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3668:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 534,
                        "nodeType": "IfStatement",
                        "src": "3664:176:4",
                        "trueBody": {
                          "id": 533,
                          "nodeType": "Block",
                          "src": "3691:149:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 525,
                                        "name": "returndata",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 508,
                                        "src": "3763:10:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      {
                                        "components": [
                                          {
                                            "id": 527,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "3776:4:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_bool_$",
                                              "typeString": "type(bool)"
                                            },
                                            "typeName": {
                                              "id": 526,
                                              "name": "bool",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "3776:4:4",
                                              "typeDescriptions": {}
                                            }
                                          }
                                        ],
                                        "id": 528,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "3775:6:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bool_$",
                                          "typeString": "type(bool)"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        },
                                        {
                                          "typeIdentifier": "t_type$_t_bool_$",
                                          "typeString": "type(bool)"
                                        }
                                      ],
                                      "expression": {
                                        "id": 523,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "3752:3:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 524,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "decode",
                                      "nodeType": "MemberAccess",
                                      "src": "3752:10:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 529,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3752:30:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
                                    "id": 530,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3784:44:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
                                      "typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
                                    },
                                    "value": "SafeERC20: ERC20 operation did not succeed"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
                                      "typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
                                    }
                                  ],
                                  "id": 522,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "3744:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 531,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3744:85:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 532,
                              "nodeType": "ExpressionStatement",
                              "src": "3744:85:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 499,
                    "nodeType": "StructuredDocumentation",
                    "src": "2763:372:4",
                    "text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
                  },
                  "id": 536,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_callOptionalReturn",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 505,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 502,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 536,
                        "src": "3169:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$313",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 501,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 500,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 313,
                            "src": "3169:6:4"
                          },
                          "referencedDeclaration": 313,
                          "src": "3169:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$313",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 504,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 536,
                        "src": "3183:17:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 503,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3183:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3168:33:4"
                  },
                  "returnParameters": {
                    "id": 506,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3210:0:4"
                  },
                  "scope": 537,
                  "src": "3140:706:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 538,
              "src": "578:3270:4"
            }
          ],
          "src": "33:3816:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/utils/Address.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
          "exportedSymbols": {
            "Address": [
              834
            ]
          },
          "id": 835,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 539,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:5"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 540,
                "nodeType": "StructuredDocumentation",
                "src": "58:67:5",
                "text": " @dev Collection of functions related to the address type"
              },
              "fullyImplemented": true,
              "id": 834,
              "linearizedBaseContracts": [
                834
              ],
              "name": "Address",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 556,
                    "nodeType": "Block",
                    "src": "784:311:5",
                    "statements": [
                      {
                        "assignments": [
                          549
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 549,
                            "mutability": "mutable",
                            "name": "size",
                            "nodeType": "VariableDeclaration",
                            "scope": 556,
                            "src": "981:12:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 548,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "981:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 550,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "981:12:5"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1012:52:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1026:28:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "account",
                                    "nodeType": "YulIdentifier",
                                    "src": "1046:7:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "extcodesize",
                                  "nodeType": "YulIdentifier",
                                  "src": "1034:11:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1034:20:5"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "1026:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 543,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1046:7:5",
                            "valueSize": 1
                          },
                          {
                            "declaration": 549,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1026:4:5",
                            "valueSize": 1
                          }
                        ],
                        "id": 551,
                        "nodeType": "InlineAssembly",
                        "src": "1003:61:5"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 552,
                            "name": "size",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 549,
                            "src": "1080:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1087:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1080:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 547,
                        "id": 555,
                        "nodeType": "Return",
                        "src": "1073:15:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 541,
                    "nodeType": "StructuredDocumentation",
                    "src": "148:565:5",
                    "text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
                  },
                  "id": 557,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isContract",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 544,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 543,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 557,
                        "src": "738:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 542,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "738:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "737:17:5"
                  },
                  "returnParameters": {
                    "id": 547,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 546,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 557,
                        "src": "778:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 545,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "778:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "777:6:5"
                  },
                  "scope": 834,
                  "src": "718:377:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 590,
                    "nodeType": "Block",
                    "src": "2083:241:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 568,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "2109:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Address_$834",
                                        "typeString": "library Address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Address_$834",
                                        "typeString": "library Address"
                                      }
                                    ],
                                    "id": 567,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2101:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 566,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2101:7:5",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 569,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2101:13:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 570,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "src": "2101:21:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 571,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 562,
                                "src": "2126:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2101:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
                              "id": 573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2134:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                                "typeString": "literal_string \"Address: insufficient balance\""
                              },
                              "value": "Address: insufficient balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                                "typeString": "literal_string \"Address: insufficient balance\""
                              }
                            ],
                            "id": 565,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2093:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2093:73:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 575,
                        "nodeType": "ExpressionStatement",
                        "src": "2093:73:5"
                      },
                      {
                        "assignments": [
                          577,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 577,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 590,
                            "src": "2178:12:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 576,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2178:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 584,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 582,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2226:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 578,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 560,
                                "src": "2196:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 579,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "2196:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 580,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 562,
                                "src": "2218:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "2196:29:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2196:33:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2177:52:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 586,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 577,
                              "src": "2247:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
                              "id": 587,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2256:60:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                                "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                              },
                              "value": "Address: unable to send value, recipient may have reverted"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                                "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                              }
                            ],
                            "id": 585,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2239:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2239:78:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 589,
                        "nodeType": "ExpressionStatement",
                        "src": "2239:78:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 558,
                    "nodeType": "StructuredDocumentation",
                    "src": "1101:906:5",
                    "text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
                  },
                  "id": 591,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sendValue",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 563,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 560,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 591,
                        "src": "2031:25:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 559,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2031:15:5",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 562,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 591,
                        "src": "2058:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 561,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2058:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2030:43:5"
                  },
                  "returnParameters": {
                    "id": 564,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2083:0:5"
                  },
                  "scope": 834,
                  "src": "2012:312:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 607,
                    "nodeType": "Block",
                    "src": "3155:84:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 602,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 594,
                              "src": "3185:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 603,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 596,
                              "src": "3193:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
                              "id": 604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3199:32:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
                                "typeString": "literal_string \"Address: low-level call failed\""
                              },
                              "value": "Address: low-level call failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
                                "typeString": "literal_string \"Address: low-level call failed\""
                              }
                            ],
                            "id": 601,
                            "name": "functionCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              608,
                              628
                            ],
                            "referencedDeclaration": 628,
                            "src": "3172:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3172:60:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 600,
                        "id": 606,
                        "nodeType": "Return",
                        "src": "3165:67:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 592,
                    "nodeType": "StructuredDocumentation",
                    "src": "2330:731:5",
                    "text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
                  },
                  "id": 608,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCall",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 597,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 594,
                        "mutability": "mutable",
                        "name": "target",
                        "nodeType": "VariableDeclaration",
                        "scope": 608,
                        "src": "3088:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 593,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3088:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 596,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 608,
                        "src": "3104:17:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 595,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3104:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3087:35:5"
                  },
                  "returnParameters": {
                    "id": 600,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 599,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 608,
                        "src": "3141:12:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 598,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3141:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3140:14:5"
                  },
                  "scope": 834,
                  "src": "3066:173:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 627,
                    "nodeType": "Block",
                    "src": "3608:76:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 621,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 611,
                              "src": "3647:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 622,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 613,
                              "src": "3655:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 623,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3661:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 624,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 615,
                              "src": "3664:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 620,
                            "name": "functionCallWithValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              648,
                              698
                            ],
                            "referencedDeclaration": 698,
                            "src": "3625:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3625:52:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 619,
                        "id": 626,
                        "nodeType": "Return",
                        "src": "3618:59:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 609,
                    "nodeType": "StructuredDocumentation",
                    "src": "3245:211:5",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
                  },
                  "id": 628,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCall",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 616,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 611,
                        "mutability": "mutable",
                        "name": "target",
                        "nodeType": "VariableDeclaration",
                        "scope": 628,
                        "src": "3492:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 610,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3492:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 613,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 628,
                        "src": "3516:17:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 612,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3516:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 615,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nodeType": "VariableDeclaration",
                        "scope": 628,
                        "src": "3543:26:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 614,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3543:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3482:93:5"
                  },
                  "returnParameters": {
                    "id": 619,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 618,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 628,
                        "src": "3594:12:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 617,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3594:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3593:14:5"
                  },
                  "scope": 834,
                  "src": "3461:223:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 647,
                    "nodeType": "Block",
                    "src": "4189:111:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 641,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 631,
                              "src": "4228:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 642,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 633,
                              "src": "4236:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 643,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 635,
                              "src": "4242:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
                              "id": 644,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4249:43:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
                                "typeString": "literal_string \"Address: low-level call with value failed\""
                              },
                              "value": "Address: low-level call with value failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
                                "typeString": "literal_string \"Address: low-level call with value failed\""
                              }
                            ],
                            "id": 640,
                            "name": "functionCallWithValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              648,
                              698
                            ],
                            "referencedDeclaration": 698,
                            "src": "4206:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4206:87:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 639,
                        "id": 646,
                        "nodeType": "Return",
                        "src": "4199:94:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 629,
                    "nodeType": "StructuredDocumentation",
                    "src": "3690:351:5",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
                  },
                  "id": 648,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCallWithValue",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 636,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 631,
                        "mutability": "mutable",
                        "name": "target",
                        "nodeType": "VariableDeclaration",
                        "scope": 648,
                        "src": "4086:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 630,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4086:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 633,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 648,
                        "src": "4110:17:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 632,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4110:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 635,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 648,
                        "src": "4137:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 634,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4137:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4076:80:5"
                  },
                  "returnParameters": {
                    "id": 639,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 638,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 648,
                        "src": "4175:12:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 637,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4175:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4174:14:5"
                  },
                  "scope": 834,
                  "src": "4046:254:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 697,
                    "nodeType": "Block",
                    "src": "4727:320:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 669,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 665,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "4753:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Address_$834",
                                        "typeString": "library Address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Address_$834",
                                        "typeString": "library Address"
                                      }
                                    ],
                                    "id": 664,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4745:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 663,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4745:7:5",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 666,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4745:13:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 667,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "src": "4745:21:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 668,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 655,
                                "src": "4770:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4745:30:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
                              "id": 670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4777:40:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                                "typeString": "literal_string \"Address: insufficient balance for call\""
                              },
                              "value": "Address: insufficient balance for call"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                                "typeString": "literal_string \"Address: insufficient balance for call\""
                              }
                            ],
                            "id": 662,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4737:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4737:81:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 672,
                        "nodeType": "ExpressionStatement",
                        "src": "4737:81:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 675,
                                  "name": "target",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 651,
                                  "src": "4847:6:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 674,
                                "name": "isContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 557,
                                "src": "4836:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 676,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4836:18:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                              "id": 677,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4856:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                                "typeString": "literal_string \"Address: call to non-contract\""
                              },
                              "value": "Address: call to non-contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                                "typeString": "literal_string \"Address: call to non-contract\""
                              }
                            ],
                            "id": 673,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4828:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4828:60:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 679,
                        "nodeType": "ExpressionStatement",
                        "src": "4828:60:5"
                      },
                      {
                        "assignments": [
                          681,
                          683
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 681,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 697,
                            "src": "4900:12:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 680,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4900:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 683,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nodeType": "VariableDeclaration",
                            "scope": 697,
                            "src": "4914:23:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 682,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "4914:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 690,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 688,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 653,
                              "src": "4967:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 684,
                                "name": "target",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 651,
                                "src": "4941:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 685,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "4941:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 687,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 686,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 655,
                                "src": "4960:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "4941:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4941:31:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4899:73:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 692,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 681,
                              "src": "5006:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 693,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 683,
                              "src": "5015:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 694,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 657,
                              "src": "5027:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 691,
                            "name": "verifyCallResult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 833,
                            "src": "4989:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4989:51:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 661,
                        "id": 696,
                        "nodeType": "Return",
                        "src": "4982:58:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 649,
                    "nodeType": "StructuredDocumentation",
                    "src": "4306:237:5",
                    "text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
                  },
                  "id": 698,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCallWithValue",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 658,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 651,
                        "mutability": "mutable",
                        "name": "target",
                        "nodeType": "VariableDeclaration",
                        "scope": 698,
                        "src": "4588:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 650,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4588:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 653,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 698,
                        "src": "4612:17:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 652,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4612:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 655,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 698,
                        "src": "4639:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 654,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4639:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 657,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nodeType": "VariableDeclaration",
                        "scope": 698,
                        "src": "4662:26:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 656,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4662:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4578:116:5"
                  },
                  "returnParameters": {
                    "id": 661,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 660,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 698,
                        "src": "4713:12:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 659,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4713:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4712:14:5"
                  },
                  "scope": 834,
                  "src": "4548:499:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 714,
                    "nodeType": "Block",
                    "src": "5324:97:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 709,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 701,
                              "src": "5360:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 710,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 703,
                              "src": "5368:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
                              "id": 711,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5374:39:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
                                "typeString": "literal_string \"Address: low-level static call failed\""
                              },
                              "value": "Address: low-level static call failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
                                "typeString": "literal_string \"Address: low-level static call failed\""
                              }
                            ],
                            "id": 708,
                            "name": "functionStaticCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              715,
                              750
                            ],
                            "referencedDeclaration": 750,
                            "src": "5341:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
                            }
                          },
                          "id": 712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5341:73:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 707,
                        "id": 713,
                        "nodeType": "Return",
                        "src": "5334:80:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 699,
                    "nodeType": "StructuredDocumentation",
                    "src": "5053:166:5",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
                  },
                  "id": 715,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionStaticCall",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 704,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 701,
                        "mutability": "mutable",
                        "name": "target",
                        "nodeType": "VariableDeclaration",
                        "scope": 715,
                        "src": "5252:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 700,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5252:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 703,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 715,
                        "src": "5268:17:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 702,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5268:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5251:35:5"
                  },
                  "returnParameters": {
                    "id": 707,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 706,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 715,
                        "src": "5310:12:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 705,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5310:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5309:14:5"
                  },
                  "scope": 834,
                  "src": "5224:197:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 749,
                    "nodeType": "Block",
                    "src": "5763:228:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 729,
                                  "name": "target",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 718,
                                  "src": "5792:6:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 728,
                                "name": "isContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 557,
                                "src": "5781:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 730,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5781:18:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
                              "id": 731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5801:38:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
                                "typeString": "literal_string \"Address: static call to non-contract\""
                              },
                              "value": "Address: static call to non-contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
                                "typeString": "literal_string \"Address: static call to non-contract\""
                              }
                            ],
                            "id": 727,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5773:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5773:67:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 733,
                        "nodeType": "ExpressionStatement",
                        "src": "5773:67:5"
                      },
                      {
                        "assignments": [
                          735,
                          737
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 735,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 749,
                            "src": "5852:12:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 734,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5852:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 737,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nodeType": "VariableDeclaration",
                            "scope": 749,
                            "src": "5866:23:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 736,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5866:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 742,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 740,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 720,
                              "src": "5911:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 738,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 718,
                              "src": "5893:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 739,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "staticcall",
                            "nodeType": "MemberAccess",
                            "src": "5893:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                            }
                          },
                          "id": 741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5893:23:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5851:65:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 744,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 735,
                              "src": "5950:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 745,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 737,
                              "src": "5959:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 746,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 722,
                              "src": "5971:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 743,
                            "name": "verifyCallResult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 833,
                            "src": "5933:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5933:51:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 726,
                        "id": 748,
                        "nodeType": "Return",
                        "src": "5926:58:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 716,
                    "nodeType": "StructuredDocumentation",
                    "src": "5427:173:5",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
                  },
                  "id": 750,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionStaticCall",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 723,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 718,
                        "mutability": "mutable",
                        "name": "target",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "5642:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 717,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5642:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 720,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "5666:17:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 719,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5666:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 722,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "5693:26:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 721,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "5693:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5632:93:5"
                  },
                  "returnParameters": {
                    "id": 726,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 725,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "5749:12:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 724,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5749:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5748:14:5"
                  },
                  "scope": 834,
                  "src": "5605:386:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 766,
                    "nodeType": "Block",
                    "src": "6267:101:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 761,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 753,
                              "src": "6305:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 762,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 755,
                              "src": "6313:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
                              "id": 763,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6319:41:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
                                "typeString": "literal_string \"Address: low-level delegate call failed\""
                              },
                              "value": "Address: low-level delegate call failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
                                "typeString": "literal_string \"Address: low-level delegate call failed\""
                              }
                            ],
                            "id": 760,
                            "name": "functionDelegateCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              767,
                              802
                            ],
                            "referencedDeclaration": 802,
                            "src": "6284:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6284:77:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 759,
                        "id": 765,
                        "nodeType": "Return",
                        "src": "6277:84:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 751,
                    "nodeType": "StructuredDocumentation",
                    "src": "5997:168:5",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
                  },
                  "id": 767,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionDelegateCall",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 756,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 753,
                        "mutability": "mutable",
                        "name": "target",
                        "nodeType": "VariableDeclaration",
                        "scope": 767,
                        "src": "6200:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 752,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6200:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 755,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 767,
                        "src": "6216:17:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 754,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6216:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6199:35:5"
                  },
                  "returnParameters": {
                    "id": 759,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 758,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 767,
                        "src": "6253:12:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 757,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6253:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6252:14:5"
                  },
                  "scope": 834,
                  "src": "6170:198:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 801,
                    "nodeType": "Block",
                    "src": "6709:232:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 781,
                                  "name": "target",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 770,
                                  "src": "6738:6:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 780,
                                "name": "isContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 557,
                                "src": "6727:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 782,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6727:18:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
                              "id": 783,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6747:40:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
                                "typeString": "literal_string \"Address: delegate call to non-contract\""
                              },
                              "value": "Address: delegate call to non-contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
                                "typeString": "literal_string \"Address: delegate call to non-contract\""
                              }
                            ],
                            "id": 779,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6719:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6719:69:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 785,
                        "nodeType": "ExpressionStatement",
                        "src": "6719:69:5"
                      },
                      {
                        "assignments": [
                          787,
                          789
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 787,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 801,
                            "src": "6800:12:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 786,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "6800:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 789,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nodeType": "VariableDeclaration",
                            "scope": 801,
                            "src": "6814:23:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 788,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "6814:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 794,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 792,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 772,
                              "src": "6861:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 790,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 770,
                              "src": "6841:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "delegatecall",
                            "nodeType": "MemberAccess",
                            "src": "6841:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) returns (bool,bytes memory)"
                            }
                          },
                          "id": 793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6841:25:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6799:67:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 796,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 787,
                              "src": "6900:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 797,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 789,
                              "src": "6909:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 798,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 774,
                              "src": "6921:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 795,
                            "name": "verifyCallResult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 833,
                            "src": "6883:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6883:51:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 778,
                        "id": 800,
                        "nodeType": "Return",
                        "src": "6876:58:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 768,
                    "nodeType": "StructuredDocumentation",
                    "src": "6374:175:5",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
                  },
                  "id": 802,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionDelegateCall",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 775,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 770,
                        "mutability": "mutable",
                        "name": "target",
                        "nodeType": "VariableDeclaration",
                        "scope": 802,
                        "src": "6593:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 769,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6593:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 772,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 802,
                        "src": "6617:17:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 771,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6617:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 774,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nodeType": "VariableDeclaration",
                        "scope": 802,
                        "src": "6644:26:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 773,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6644:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6583:93:5"
                  },
                  "returnParameters": {
                    "id": 778,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 777,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 802,
                        "src": "6695:12:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 776,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6695:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6694:14:5"
                  },
                  "scope": 834,
                  "src": "6554:387:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 832,
                    "nodeType": "Block",
                    "src": "7321:532:5",
                    "statements": [
                      {
                        "condition": {
                          "id": 814,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 805,
                          "src": "7335:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 830,
                          "nodeType": "Block",
                          "src": "7392:455:5",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 821,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 818,
                                    "name": "returndata",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 807,
                                    "src": "7476:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 819,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "7476:17:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 820,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7496:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "7476:21:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 828,
                                "nodeType": "Block",
                                "src": "7784:53:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 825,
                                          "name": "errorMessage",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 809,
                                          "src": "7809:12:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        ],
                                        "id": 824,
                                        "name": "revert",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -19,
                                          -19
                                        ],
                                        "referencedDeclaration": -19,
                                        "src": "7802:6:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (string memory) pure"
                                        }
                                      },
                                      "id": 826,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7802:20:5",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 827,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7802:20:5"
                                  }
                                ]
                              },
                              "id": 829,
                              "nodeType": "IfStatement",
                              "src": "7472:365:5",
                              "trueBody": {
                                "id": 823,
                                "nodeType": "Block",
                                "src": "7499:279:5",
                                "statements": [
                                  {
                                    "AST": {
                                      "nodeType": "YulBlock",
                                      "src": "7619:145:5",
                                      "statements": [
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "7641:40:5",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "returndata",
                                                "nodeType": "YulIdentifier",
                                                "src": "7670:10:5"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mload",
                                              "nodeType": "YulIdentifier",
                                              "src": "7664:5:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "7664:17:5"
                                          },
                                          "variables": [
                                            {
                                              "name": "returndata_size",
                                              "nodeType": "YulTypedName",
                                              "src": "7645:15:5",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "7713:2:5",
                                                    "type": "",
                                                    "value": "32"
                                                  },
                                                  {
                                                    "name": "returndata",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "7717:10:5"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "7709:3:5"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "7709:19:5"
                                              },
                                              {
                                                "name": "returndata_size",
                                                "nodeType": "YulIdentifier",
                                                "src": "7730:15:5"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "revert",
                                              "nodeType": "YulIdentifier",
                                              "src": "7702:6:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "7702:44:5"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "7702:44:5"
                                        }
                                      ]
                                    },
                                    "evmVersion": "istanbul",
                                    "externalReferences": [
                                      {
                                        "declaration": 807,
                                        "isOffset": false,
                                        "isSlot": false,
                                        "src": "7670:10:5",
                                        "valueSize": 1
                                      },
                                      {
                                        "declaration": 807,
                                        "isOffset": false,
                                        "isSlot": false,
                                        "src": "7717:10:5",
                                        "valueSize": 1
                                      }
                                    ],
                                    "id": 822,
                                    "nodeType": "InlineAssembly",
                                    "src": "7610:154:5"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 831,
                        "nodeType": "IfStatement",
                        "src": "7331:516:5",
                        "trueBody": {
                          "id": 817,
                          "nodeType": "Block",
                          "src": "7344:42:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 815,
                                "name": "returndata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 807,
                                "src": "7365:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "functionReturnParameters": 813,
                              "id": 816,
                              "nodeType": "Return",
                              "src": "7358:17:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 803,
                    "nodeType": "StructuredDocumentation",
                    "src": "6947:209:5",
                    "text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
                  },
                  "id": 833,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "verifyCallResult",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 810,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 805,
                        "mutability": "mutable",
                        "name": "success",
                        "nodeType": "VariableDeclaration",
                        "scope": 833,
                        "src": "7196:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 804,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7196:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 807,
                        "mutability": "mutable",
                        "name": "returndata",
                        "nodeType": "VariableDeclaration",
                        "scope": 833,
                        "src": "7218:23:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 806,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7218:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 809,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nodeType": "VariableDeclaration",
                        "scope": 833,
                        "src": "7251:26:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 808,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7251:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7186:97:5"
                  },
                  "returnParameters": {
                    "id": 813,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 812,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 833,
                        "src": "7307:12:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 811,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7307:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7306:14:5"
                  },
                  "scope": 834,
                  "src": "7161:692:5",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 835,
              "src": "126:7729:5"
            }
          ],
          "src": "33:7823:5"
        },
        "id": 5
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              856
            ]
          },
          "id": 857,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 836,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:6"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 837,
                "nodeType": "StructuredDocumentation",
                "src": "58:496:6",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 856,
              "linearizedBaseContracts": [
                856
              ],
              "name": "Context",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 845,
                    "nodeType": "Block",
                    "src": "649:34:6",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 842,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "666:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "666:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 841,
                        "id": 844,
                        "nodeType": "Return",
                        "src": "659:17:6"
                      }
                    ]
                  },
                  "id": 846,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 838,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "606:2:6"
                  },
                  "returnParameters": {
                    "id": 841,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 840,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 846,
                        "src": "640:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 839,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "640:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "639:9:6"
                  },
                  "scope": 856,
                  "src": "587:96:6",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 854,
                    "nodeType": "Block",
                    "src": "756:32:6",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 851,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "773:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "773:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 850,
                        "id": 853,
                        "nodeType": "Return",
                        "src": "766:15:6"
                      }
                    ]
                  },
                  "id": 855,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 847,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "706:2:6"
                  },
                  "returnParameters": {
                    "id": 850,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 849,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 855,
                        "src": "740:14:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 848,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "740:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "739:16:6"
                  },
                  "scope": 856,
                  "src": "689:99:6",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 857,
              "src": "555:235:6"
            }
          ],
          "src": "33:758:6"
        },
        "id": 6
      },
      "contracts/HarmonyPrediction.sol": {
        "ast": {
          "absolutePath": "contracts/HarmonyPrediction.sol",
          "exportedSymbols": {
            "Address": [
              834
            ],
            "AggregatorV3Interface": [
              2869
            ],
            "Context": [
              856
            ],
            "IERC20": [
              313
            ],
            "MetaFlokiPrediction": [
              2823
            ],
            "Ownable": [
              103
            ],
            "Pausable": [
              195
            ],
            "ReentrancyGuard": [
              235
            ],
            "SafeERC20": [
              537
            ]
          },
          "id": 2824,
          "license": "GPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 858,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "37:23:7"
            },
            {
              "id": 859,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "61:19:7"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 860,
              "nodeType": "ImportDirective",
              "scope": 2824,
              "sourceUnit": 104,
              "src": "82:52:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
              "file": "@openzeppelin/contracts/security/Pausable.sol",
              "id": 861,
              "nodeType": "ImportDirective",
              "scope": 2824,
              "sourceUnit": 196,
              "src": "135:55:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
              "id": 862,
              "nodeType": "ImportDirective",
              "scope": 2824,
              "sourceUnit": 236,
              "src": "191:62:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "id": 863,
              "nodeType": "ImportDirective",
              "scope": 2824,
              "sourceUnit": 538,
              "src": "254:65:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 864,
              "nodeType": "ImportDirective",
              "scope": 2824,
              "sourceUnit": 314,
              "src": "320:56:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/AggregatorV3Interface.sol",
              "file": "./interfaces/AggregatorV3Interface.sol",
              "id": 865,
              "nodeType": "ImportDirective",
              "scope": 2824,
              "sourceUnit": 2870,
              "src": "378:48:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 867,
                    "name": "Ownable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 103,
                    "src": "498:7:7"
                  },
                  "id": 868,
                  "nodeType": "InheritanceSpecifier",
                  "src": "498:7:7"
                },
                {
                  "baseName": {
                    "id": 869,
                    "name": "Pausable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 195,
                    "src": "507:8:7"
                  },
                  "id": 870,
                  "nodeType": "InheritanceSpecifier",
                  "src": "507:8:7"
                },
                {
                  "baseName": {
                    "id": 871,
                    "name": "ReentrancyGuard",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 235,
                    "src": "517:15:7"
                  },
                  "id": 872,
                  "nodeType": "InheritanceSpecifier",
                  "src": "517:15:7"
                }
              ],
              "contractDependencies": [
                103,
                195,
                235,
                856
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 866,
                "nodeType": "StructuredDocumentation",
                "src": "428:37:7",
                "text": " @title MetaFlokiPrediction"
              },
              "fullyImplemented": true,
              "id": 2823,
              "linearizedBaseContracts": [
                2823,
                235,
                195,
                103,
                856
              ],
              "name": "MetaFlokiPrediction",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 876,
                  "libraryName": {
                    "id": 873,
                    "name": "SafeERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 537,
                    "src": "545:9:7"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "539:27:7",
                  "typeName": {
                    "id": 875,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 874,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 313,
                      "src": "559:6:7"
                    },
                    "referencedDeclaration": 313,
                    "src": "559:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$313",
                      "typeString": "contract IERC20"
                    }
                  }
                },
                {
                  "constant": false,
                  "functionSelector": "7dc0d1d0",
                  "id": 879,
                  "mutability": "mutable",
                  "name": "oracle",
                  "nodeType": "VariableDeclaration",
                  "scope": 2823,
                  "src": "572:35:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AggregatorV3Interface_$2869",
                    "typeString": "contract AggregatorV3Interface"
                  },
                  "typeName": {
                    "id": 878,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 877,
                      "name": "AggregatorV3Interface",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2869,
                      "src": "572:21:7"
                    },
                    "referencedDeclaration": 2869,
                    "src": "572:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$2869",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "0f74174f",
                  "id": 882,
                  "mutability": "mutable",
                  "name": "genesisLockOnce",
                  "nodeType": "VariableDeclaration",
                  "scope": 2823,
                  "src": "614:35:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 880,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "614:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": {
                    "hexValue": "66616c7365",
                    "id": 881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "644:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "f7fdec28",
                  "id": 885,
                  "mutability": "mutable",
                  "name": "genesisStartOnce",
                  "nodeType": "VariableDeclaration",
                  "scope": 2823,
                  "src": "655:36:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 883,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": {
                    "hexValue": "66616c7365",
                    "id": 884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "686:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "fc6f9468",
                  "id": 887,
                  "mutability": "mutable",
                  "name": "adminAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2823,
                  "src": "698:27:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 886,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "698:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "127effb2",
                  "id": 889,
                  "mutability": "mutable",
                  "name": "operatorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2823,
                  "src": "755:30:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 888,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "755:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "eaba2361",
                  "id": 891,
                  "mutability": "mutable",
                  "name": "bufferSeconds",
                  "nodeType": "VariableDeclaration",
                  "scope": 2823,
                  "src": "819:28:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 890,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "819:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7d1cd04f",
                  "id": 893,
                  "mutability": "mutable",
                  "name": "intervalSeconds",
                  "nodeType": "VariableDeclaration",
                  "scope": 2823,
                  "src": "916:30:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 892,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "916:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "fa968eea",
                  "id": 895,
                  "mutability": "mutable",
                  "name": "minBetAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2823,
                  "src": "1006:27:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 894,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1006:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "cc32d176",
                  "id": 897,
                  "mutability": "mutable",
                  "name": "treasuryFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 2823,
                  "src": "1086:26:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 896,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1086:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "368acb09",
                  "id": 899,
                  "mutability": "mutable",
                  "name": "treasuryAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2823,
                  "src": "1164:29:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1164:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "76671808",
                  "id": 901,
                  "mutability": "mutable",
                  "name": "currentEpoch",
                  "nodeType": "VariableDeclaration",
                  "scope": 2823,
                  "src": "1240:27:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 900,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1240:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "ec324703",
                  "id": 903,
                  "mutability": "mutable",
                  "name": "oracleLatestRoundId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2823,
                  "src": "1312:34:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 902,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1312:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "60554011",
                  "id": 905,
                  "mutability": "mutable",
                  "name": "oracleUpdateAllowance",
                  "nodeType": "VariableDeclaration",
                  "scope": 2823,
                  "src": "1389:36:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 904,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1389:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "f2b3c809",
                  "id": 908,
                  "mutability": "constant",
                  "name": "MAX_TREASURY_FEE",
                  "nodeType": "VariableDeclaration",
                  "scope": 2823,
                  "src": "1443:47:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 906,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1443:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31303030",
                    "id": 907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1486:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000_by_1",
                      "typeString": "int_const 1000"
                    },
                    "value": "1000"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7285c58b",
                  "id": 915,
                  "mutability": "mutable",
                  "name": "ledger",
                  "nodeType": "VariableDeclaration",
                  "scope": 2823,
                  "src": "1504:61:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_BetInfo_$965_storage_$_$",
                    "typeString": "mapping(uint256 => mapping(address => struct MetaFlokiPrediction.BetInfo))"
                  },
                  "typeName": {
                    "id": 914,
                    "keyType": {
                      "id": 909,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1512:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1504:47:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_BetInfo_$965_storage_$_$",
                      "typeString": "mapping(uint256 => mapping(address => struct MetaFlokiPrediction.BetInfo))"
                    },
                    "valueType": {
                      "id": 913,
                      "keyType": {
                        "id": 910,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1531:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1523:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BetInfo_$965_storage_$",
                        "typeString": "mapping(address => struct MetaFlokiPrediction.BetInfo)"
                      },
                      "valueType": {
                        "id": 912,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 911,
                          "name": "BetInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 965,
                          "src": "1542:7:7"
                        },
                        "referencedDeclaration": 965,
                        "src": "1542:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BetInfo_$965_storage_ptr",
                          "typeString": "struct MetaFlokiPrediction.BetInfo"
                        }
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8c65c81f",
                  "id": 920,
                  "mutability": "mutable",
                  "name": "rounds",
                  "nodeType": "VariableDeclaration",
                  "scope": 2823,
                  "src": "1571:39:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$957_storage_$",
                    "typeString": "mapping(uint256 => struct MetaFlokiPrediction.Round)"
                  },
                  "typeName": {
                    "id": 919,
                    "keyType": {
                      "id": 916,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1579:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1571:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$957_storage_$",
                      "typeString": "mapping(uint256 => struct MetaFlokiPrediction.Round)"
                    },
                    "valueType": {
                      "id": 918,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 917,
                        "name": "Round",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 957,
                        "src": "1590:5:7"
                      },
                      "referencedDeclaration": 957,
                      "src": "1590:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                        "typeString": "struct MetaFlokiPrediction.Round"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "dd1f7596",
                  "id": 925,
                  "mutability": "mutable",
                  "name": "userRounds",
                  "nodeType": "VariableDeclaration",
                  "scope": 2823,
                  "src": "1616:47:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                    "typeString": "mapping(address => uint256[])"
                  },
                  "typeName": {
                    "id": 924,
                    "keyType": {
                      "id": 921,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1624:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1616:29:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                      "typeString": "mapping(address => uint256[])"
                    },
                    "valueType": {
                      "baseType": {
                        "id": 922,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1635:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 923,
                      "nodeType": "ArrayTypeName",
                      "src": "1635:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "MetaFlokiPrediction.Position",
                  "id": 928,
                  "members": [
                    {
                      "id": 926,
                      "name": "Bull",
                      "nodeType": "EnumValue",
                      "src": "1694:4:7"
                    },
                    {
                      "id": 927,
                      "name": "Bear",
                      "nodeType": "EnumValue",
                      "src": "1708:4:7"
                    }
                  ],
                  "name": "Position",
                  "nodeType": "EnumDefinition",
                  "src": "1670:48:7"
                },
                {
                  "canonicalName": "MetaFlokiPrediction.Round",
                  "id": 957,
                  "members": [
                    {
                      "constant": false,
                      "id": 930,
                      "mutability": "mutable",
                      "name": "epoch",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "1747:13:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 929,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1747:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 932,
                      "mutability": "mutable",
                      "name": "startTimestamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "1770:22:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 931,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1770:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 934,
                      "mutability": "mutable",
                      "name": "lockTimestamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "1802:21:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 933,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1802:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 936,
                      "mutability": "mutable",
                      "name": "closeTimestamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "1833:22:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 935,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1833:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 938,
                      "mutability": "mutable",
                      "name": "lockPrice",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "1865:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 937,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1865:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 940,
                      "mutability": "mutable",
                      "name": "closePrice",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "1891:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 939,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1891:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 942,
                      "mutability": "mutable",
                      "name": "lockOracleId",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "1918:20:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 941,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1918:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 944,
                      "mutability": "mutable",
                      "name": "closeOracleId",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "1948:21:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 943,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1948:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 946,
                      "mutability": "mutable",
                      "name": "totalAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "1979:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 945,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1979:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 948,
                      "mutability": "mutable",
                      "name": "bullAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "2008:18:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 947,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2008:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 950,
                      "mutability": "mutable",
                      "name": "bearAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "2036:18:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 949,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2036:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 952,
                      "mutability": "mutable",
                      "name": "rewardBaseCalAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "2064:27:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 951,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2064:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 954,
                      "mutability": "mutable",
                      "name": "rewardAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "2101:20:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 953,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2101:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 956,
                      "mutability": "mutable",
                      "name": "oracleCalled",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "2131:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 955,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2131:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Round",
                  "nodeType": "StructDefinition",
                  "scope": 2823,
                  "src": "1724:431:7",
                  "visibility": "public"
                },
                {
                  "canonicalName": "MetaFlokiPrediction.BetInfo",
                  "id": 965,
                  "members": [
                    {
                      "constant": false,
                      "id": 960,
                      "mutability": "mutable",
                      "name": "position",
                      "nodeType": "VariableDeclaration",
                      "scope": 965,
                      "src": "2186:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Position_$928",
                        "typeString": "enum MetaFlokiPrediction.Position"
                      },
                      "typeName": {
                        "id": 959,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 958,
                          "name": "Position",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 928,
                          "src": "2186:8:7"
                        },
                        "referencedDeclaration": 928,
                        "src": "2186:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Position_$928",
                          "typeString": "enum MetaFlokiPrediction.Position"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 962,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 965,
                      "src": "2213:14:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 961,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2213:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 964,
                      "mutability": "mutable",
                      "name": "claimed",
                      "nodeType": "VariableDeclaration",
                      "scope": 965,
                      "src": "2237:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 963,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2237:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "BetInfo",
                  "nodeType": "StructDefinition",
                  "scope": 2823,
                  "src": "2161:112:7",
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 973,
                  "name": "BetBear",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 972,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 967,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 973,
                        "src": "2302:22:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 966,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2302:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 969,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nodeType": "VariableDeclaration",
                        "scope": 973,
                        "src": "2334:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 968,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2334:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 971,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 973,
                        "src": "2365:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 970,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2365:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2292:93:7"
                  },
                  "src": "2279:107:7"
                },
                {
                  "anonymous": false,
                  "id": 981,
                  "name": "BetBull",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 980,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 975,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 981,
                        "src": "2414:22:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 974,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2414:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 977,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nodeType": "VariableDeclaration",
                        "scope": 981,
                        "src": "2446:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 976,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2446:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 979,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 981,
                        "src": "2477:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 978,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2477:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2404:93:7"
                  },
                  "src": "2391:107:7"
                },
                {
                  "anonymous": false,
                  "id": 989,
                  "name": "Claim",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 988,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 983,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 989,
                        "src": "2515:22:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 982,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2515:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 985,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nodeType": "VariableDeclaration",
                        "scope": 989,
                        "src": "2539:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 984,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2539:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 987,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 989,
                        "src": "2562:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 986,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2562:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2514:63:7"
                  },
                  "src": "2503:75:7"
                },
                {
                  "anonymous": false,
                  "id": 997,
                  "name": "EndRound",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 996,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 991,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nodeType": "VariableDeclaration",
                        "scope": 997,
                        "src": "2607:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 990,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2607:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 993,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nodeType": "VariableDeclaration",
                        "scope": 997,
                        "src": "2638:23:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 992,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2638:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 995,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "price",
                        "nodeType": "VariableDeclaration",
                        "scope": 997,
                        "src": "2671:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 994,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2671:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2597:92:7"
                  },
                  "src": "2583:107:7"
                },
                {
                  "anonymous": false,
                  "id": 1005,
                  "name": "LockRound",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1004,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 999,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nodeType": "VariableDeclaration",
                        "scope": 1005,
                        "src": "2720:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 998,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2720:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1001,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1005,
                        "src": "2751:23:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1000,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2751:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1003,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "price",
                        "nodeType": "VariableDeclaration",
                        "scope": 1005,
                        "src": "2784:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 1002,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2784:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2710:92:7"
                  },
                  "src": "2695:108:7"
                },
                {
                  "anonymous": false,
                  "id": 1009,
                  "name": "NewAdminAddress",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1008,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1007,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "admin",
                        "nodeType": "VariableDeclaration",
                        "scope": 1009,
                        "src": "2831:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1006,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2831:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2830:15:7"
                  },
                  "src": "2809:37:7"
                },
                {
                  "anonymous": false,
                  "id": 1015,
                  "name": "NewBufferAndIntervalSeconds",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1014,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1011,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "bufferSeconds",
                        "nodeType": "VariableDeclaration",
                        "scope": 1015,
                        "src": "2894:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1010,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2894:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1013,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "intervalSeconds",
                        "nodeType": "VariableDeclaration",
                        "scope": 1015,
                        "src": "2925:23:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1012,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2925:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2884:70:7"
                  },
                  "src": "2851:104:7"
                },
                {
                  "anonymous": false,
                  "id": 1021,
                  "name": "NewMinBetAmount",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1020,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1017,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nodeType": "VariableDeclaration",
                        "scope": 1021,
                        "src": "2982:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1016,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2982:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1019,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "minBetAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1021,
                        "src": "3005:20:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1018,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3005:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2981:45:7"
                  },
                  "src": "2960:67:7"
                },
                {
                  "anonymous": false,
                  "id": 1027,
                  "name": "NewTreasuryFee",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1026,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1023,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nodeType": "VariableDeclaration",
                        "scope": 1027,
                        "src": "3053:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1022,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3053:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1025,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "treasuryFee",
                        "nodeType": "VariableDeclaration",
                        "scope": 1027,
                        "src": "3076:19:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1024,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3076:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3052:44:7"
                  },
                  "src": "3032:65:7"
                },
                {
                  "anonymous": false,
                  "id": 1031,
                  "name": "NewOperatorAddress",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1030,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1029,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 1031,
                        "src": "3127:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1028,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3127:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3126:18:7"
                  },
                  "src": "3102:43:7"
                },
                {
                  "anonymous": false,
                  "id": 1035,
                  "name": "NewOracle",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1034,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1033,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "oracle",
                        "nodeType": "VariableDeclaration",
                        "scope": 1035,
                        "src": "3166:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1032,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3166:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3165:16:7"
                  },
                  "src": "3150:32:7"
                },
                {
                  "anonymous": false,
                  "id": 1039,
                  "name": "NewOracleUpdateAllowance",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1038,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1037,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "oracleUpdateAllowance",
                        "nodeType": "VariableDeclaration",
                        "scope": 1039,
                        "src": "3218:29:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1036,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3218:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3217:31:7"
                  },
                  "src": "3187:62:7"
                },
                {
                  "anonymous": false,
                  "id": 1043,
                  "name": "Pause",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1042,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1041,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nodeType": "VariableDeclaration",
                        "scope": 1043,
                        "src": "3267:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1040,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3267:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3266:23:7"
                  },
                  "src": "3255:35:7"
                },
                {
                  "anonymous": false,
                  "id": 1053,
                  "name": "RewardsCalculated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1052,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1045,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nodeType": "VariableDeclaration",
                        "scope": 1053,
                        "src": "3328:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1044,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3328:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1047,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "rewardBaseCalAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1053,
                        "src": "3359:27:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1046,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3359:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1049,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "rewardAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1053,
                        "src": "3396:20:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1048,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3396:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1051,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "treasuryAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1053,
                        "src": "3426:22:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1050,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3426:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3318:136:7"
                  },
                  "src": "3295:160:7"
                },
                {
                  "anonymous": false,
                  "id": 1057,
                  "name": "StartRound",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1056,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1055,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nodeType": "VariableDeclaration",
                        "scope": 1057,
                        "src": "3478:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1054,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3478:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3477:23:7"
                  },
                  "src": "3461:40:7"
                },
                {
                  "anonymous": false,
                  "id": 1063,
                  "name": "TokenRecovery",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1062,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1059,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1063,
                        "src": "3526:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1058,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3526:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1061,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1063,
                        "src": "3549:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1060,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3549:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3525:39:7"
                  },
                  "src": "3506:59:7"
                },
                {
                  "anonymous": false,
                  "id": 1067,
                  "name": "TreasuryClaim",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1066,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1065,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1067,
                        "src": "3590:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1064,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3590:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3589:16:7"
                  },
                  "src": "3570:36:7"
                },
                {
                  "anonymous": false,
                  "id": 1071,
                  "name": "Unpause",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1070,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1069,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nodeType": "VariableDeclaration",
                        "scope": 1071,
                        "src": "3625:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1068,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3625:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3624:23:7"
                  },
                  "src": "3611:37:7"
                },
                {
                  "body": {
                    "id": 1082,
                    "nodeType": "Block",
                    "src": "3675:76:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1077,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1074,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3693:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1075,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3693:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1076,
                                "name": "adminAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 887,
                                "src": "3707:12:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3693:26:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f742061646d696e",
                              "id": 1078,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3721:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fa7e120cf98867f00c0ac28b387a73caec64b93b1889065f7b4c5e5232c0bad6",
                                "typeString": "literal_string \"Not admin\""
                              },
                              "value": "Not admin"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fa7e120cf98867f00c0ac28b387a73caec64b93b1889065f7b4c5e5232c0bad6",
                                "typeString": "literal_string \"Not admin\""
                              }
                            ],
                            "id": 1073,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3685:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3685:48:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1080,
                        "nodeType": "ExpressionStatement",
                        "src": "3685:48:7"
                      },
                      {
                        "id": 1081,
                        "nodeType": "PlaceholderStatement",
                        "src": "3743:1:7"
                      }
                    ]
                  },
                  "id": 1083,
                  "name": "onlyAdmin",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1072,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3672:2:7"
                  },
                  "src": "3654:97:7",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1099,
                    "nodeType": "Block",
                    "src": "3788:152:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1094,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1089,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1086,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3819:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1087,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3819:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 1088,
                                  "name": "adminAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 887,
                                  "src": "3833:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "3819:26:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1093,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1090,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3849:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1091,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3849:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 1092,
                                  "name": "operatorAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 889,
                                  "src": "3863:15:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "3849:29:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3819:59:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f74206f70657261746f722f61646d696e",
                              "id": 1095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3892:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_49d662e2e497c75dff2142bf1640750ac7d04cac14a37cbabfe479aeb27de903",
                                "typeString": "literal_string \"Not operator/admin\""
                              },
                              "value": "Not operator/admin"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_49d662e2e497c75dff2142bf1640750ac7d04cac14a37cbabfe479aeb27de903",
                                "typeString": "literal_string \"Not operator/admin\""
                              }
                            ],
                            "id": 1085,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3798:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3798:124:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1097,
                        "nodeType": "ExpressionStatement",
                        "src": "3798:124:7"
                      },
                      {
                        "id": 1098,
                        "nodeType": "PlaceholderStatement",
                        "src": "3932:1:7"
                      }
                    ]
                  },
                  "id": 1100,
                  "name": "onlyAdminOrOperator",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1084,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3785:2:7"
                  },
                  "src": "3757:183:7",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1111,
                    "nodeType": "Block",
                    "src": "3970:82:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1103,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3988:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1104,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3988:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1105,
                                "name": "operatorAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 889,
                                "src": "4002:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3988:29:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f74206f70657261746f72",
                              "id": 1107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4019:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f62ead2258bbb12f965d46919f1c0f382053ba2024e91da3661aec8b15585f38",
                                "typeString": "literal_string \"Not operator\""
                              },
                              "value": "Not operator"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f62ead2258bbb12f965d46919f1c0f382053ba2024e91da3661aec8b15585f38",
                                "typeString": "literal_string \"Not operator\""
                              }
                            ],
                            "id": 1102,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3980:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3980:54:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1109,
                        "nodeType": "ExpressionStatement",
                        "src": "3980:54:7"
                      },
                      {
                        "id": 1110,
                        "nodeType": "PlaceholderStatement",
                        "src": "4044:1:7"
                      }
                    ]
                  },
                  "id": 1112,
                  "name": "onlyOperator",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1101,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3967:2:7"
                  },
                  "src": "3946:106:7",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1133,
                    "nodeType": "Block",
                    "src": "4081:157:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1119,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "4099:24:7",
                              "subExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1116,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4112:3:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1117,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4112:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1115,
                                  "name": "_isContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2822,
                                  "src": "4100:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (address) view returns (bool)"
                                  }
                                },
                                "id": 1118,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4100:23:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f6e7472616374206e6f7420616c6c6f776564",
                              "id": 1120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4125:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3121f7b79283aa0596509798902a70205287bb5aa7cf6024beaaf19d6d89ba68",
                                "typeString": "literal_string \"Contract not allowed\""
                              },
                              "value": "Contract not allowed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3121f7b79283aa0596509798902a70205287bb5aa7cf6024beaaf19d6d89ba68",
                                "typeString": "literal_string \"Contract not allowed\""
                              }
                            ],
                            "id": 1114,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4091:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4091:57:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1122,
                        "nodeType": "ExpressionStatement",
                        "src": "4091:57:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1124,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4166:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1125,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4166:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1126,
                                  "name": "tx",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -26,
                                  "src": "4180:2:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_transaction",
                                    "typeString": "tx"
                                  }
                                },
                                "id": 1127,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "origin",
                                "nodeType": "MemberAccess",
                                "src": "4180:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4166:23:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f787920636f6e7472616374206e6f7420616c6c6f776564",
                              "id": 1129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4191:28:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_805913a464b2b4d6ef9cb52137d9a1509b46d9c4cc7c32415f075bb6c16a902c",
                                "typeString": "literal_string \"Proxy contract not allowed\""
                              },
                              "value": "Proxy contract not allowed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_805913a464b2b4d6ef9cb52137d9a1509b46d9c4cc7c32415f075bb6c16a902c",
                                "typeString": "literal_string \"Proxy contract not allowed\""
                              }
                            ],
                            "id": 1123,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4158:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4158:62:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1131,
                        "nodeType": "ExpressionStatement",
                        "src": "4158:62:7"
                      },
                      {
                        "id": 1132,
                        "nodeType": "PlaceholderStatement",
                        "src": "4230:1:7"
                      }
                    ]
                  },
                  "id": 1134,
                  "name": "notContract",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1113,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4078:2:7"
                  },
                  "src": "4058:180:7",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1195,
                    "nodeType": "Block",
                    "src": "5015:436:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1157,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1155,
                                "name": "_treasuryFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1151,
                                "src": "5033:12:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 1156,
                                "name": "MAX_TREASURY_FEE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 908,
                                "src": "5049:16:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5033:32:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54726561737572792066656520746f6f2068696768",
                              "id": 1158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5067:23:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_11bdebae3580e3cc0aa83f4abe624d8a87da76af0e4eb2ea8382d5e81bd9d2ff",
                                "typeString": "literal_string \"Treasury fee too high\""
                              },
                              "value": "Treasury fee too high"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_11bdebae3580e3cc0aa83f4abe624d8a87da76af0e4eb2ea8382d5e81bd9d2ff",
                                "typeString": "literal_string \"Treasury fee too high\""
                              }
                            ],
                            "id": 1154,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5025:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5025:66:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1160,
                        "nodeType": "ExpressionStatement",
                        "src": "5025:66:7"
                      },
                      {
                        "expression": {
                          "id": 1165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1161,
                            "name": "oracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 879,
                            "src": "5102:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$2869",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1163,
                                "name": "_oracleAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1137,
                                "src": "5133:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1162,
                              "name": "AggregatorV3Interface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2869,
                              "src": "5111:21:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$2869_$",
                                "typeString": "type(contract AggregatorV3Interface)"
                              }
                            },
                            "id": 1164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5111:37:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$2869",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "src": "5102:46:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$2869",
                            "typeString": "contract AggregatorV3Interface"
                          }
                        },
                        "id": 1166,
                        "nodeType": "ExpressionStatement",
                        "src": "5102:46:7"
                      },
                      {
                        "expression": {
                          "id": 1169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1167,
                            "name": "adminAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 887,
                            "src": "5158:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1168,
                            "name": "_adminAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1139,
                            "src": "5173:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5158:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1170,
                        "nodeType": "ExpressionStatement",
                        "src": "5158:28:7"
                      },
                      {
                        "expression": {
                          "id": 1173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1171,
                            "name": "operatorAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 889,
                            "src": "5196:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1172,
                            "name": "_operatorAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1141,
                            "src": "5214:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5196:34:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1174,
                        "nodeType": "ExpressionStatement",
                        "src": "5196:34:7"
                      },
                      {
                        "expression": {
                          "id": 1177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1175,
                            "name": "intervalSeconds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 893,
                            "src": "5240:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1176,
                            "name": "_intervalSeconds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1143,
                            "src": "5258:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5240:34:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1178,
                        "nodeType": "ExpressionStatement",
                        "src": "5240:34:7"
                      },
                      {
                        "expression": {
                          "id": 1181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1179,
                            "name": "bufferSeconds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 891,
                            "src": "5284:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1180,
                            "name": "_bufferSeconds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1145,
                            "src": "5300:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5284:30:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1182,
                        "nodeType": "ExpressionStatement",
                        "src": "5284:30:7"
                      },
                      {
                        "expression": {
                          "id": 1185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1183,
                            "name": "minBetAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 895,
                            "src": "5324:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1184,
                            "name": "_minBetAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1147,
                            "src": "5339:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5324:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1186,
                        "nodeType": "ExpressionStatement",
                        "src": "5324:28:7"
                      },
                      {
                        "expression": {
                          "id": 1189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1187,
                            "name": "oracleUpdateAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 905,
                            "src": "5362:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1188,
                            "name": "_oracleUpdateAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1149,
                            "src": "5386:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5362:46:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1190,
                        "nodeType": "ExpressionStatement",
                        "src": "5362:46:7"
                      },
                      {
                        "expression": {
                          "id": 1193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1191,
                            "name": "treasuryFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 897,
                            "src": "5418:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1192,
                            "name": "_treasuryFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1151,
                            "src": "5432:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5418:26:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1194,
                        "nodeType": "ExpressionStatement",
                        "src": "5418:26:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1135,
                    "nodeType": "StructuredDocumentation",
                    "src": "4244:484:7",
                    "text": " @notice Constructor\n @param _oracleAddress: oracle address\n @param _adminAddress: admin address\n @param _operatorAddress: operator address\n @param _intervalSeconds: number of time within an interval\n @param _bufferSeconds: buffer of time for resolution of price\n @param _minBetAmount: minimum bet amounts (in wei)\n @param _oracleUpdateAllowance: oracle update allowance\n @param _treasuryFee: treasury fee (1000 = 10%)"
                  },
                  "id": 1196,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1152,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1137,
                        "mutability": "mutable",
                        "name": "_oracleAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 1196,
                        "src": "4754:22:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1136,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4754:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1139,
                        "mutability": "mutable",
                        "name": "_adminAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 1196,
                        "src": "4786:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1138,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4786:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1141,
                        "mutability": "mutable",
                        "name": "_operatorAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 1196,
                        "src": "4817:24:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1140,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4817:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1143,
                        "mutability": "mutable",
                        "name": "_intervalSeconds",
                        "nodeType": "VariableDeclaration",
                        "scope": 1196,
                        "src": "4851:24:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1142,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4851:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1145,
                        "mutability": "mutable",
                        "name": "_bufferSeconds",
                        "nodeType": "VariableDeclaration",
                        "scope": 1196,
                        "src": "4885:22:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1144,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4885:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1147,
                        "mutability": "mutable",
                        "name": "_minBetAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1196,
                        "src": "4917:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1146,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4917:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1149,
                        "mutability": "mutable",
                        "name": "_oracleUpdateAllowance",
                        "nodeType": "VariableDeclaration",
                        "scope": 1196,
                        "src": "4948:30:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1148,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4948:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1151,
                        "mutability": "mutable",
                        "name": "_treasuryFee",
                        "nodeType": "VariableDeclaration",
                        "scope": 1196,
                        "src": "4988:20:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1150,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4988:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4744:270:7"
                  },
                  "returnParameters": {
                    "id": 1153,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5015:0:7"
                  },
                  "scope": 2823,
                  "src": "4733:718:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1311,
                    "nodeType": "Block",
                    "src": "5665:856:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1209,
                                "name": "epoch",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1199,
                                "src": "5683:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1210,
                                "name": "currentEpoch",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 901,
                                "src": "5692:12:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5683:21:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "42657420697320746f6f206561726c792f6c617465",
                              "id": 1212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5706:23:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f0f9d6116fd050471235a880137dc204da2444049ba6e5a27070933145ecf8b2",
                                "typeString": "literal_string \"Bet is too early/late\""
                              },
                              "value": "Bet is too early/late"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f0f9d6116fd050471235a880137dc204da2444049ba6e5a27070933145ecf8b2",
                                "typeString": "literal_string \"Bet is too early/late\""
                              }
                            ],
                            "id": 1208,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5675:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5675:55:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1214,
                        "nodeType": "ExpressionStatement",
                        "src": "5675:55:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1217,
                                  "name": "epoch",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1199,
                                  "src": "5758:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1216,
                                "name": "_bettable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2740,
                                "src": "5748:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (uint256) view returns (bool)"
                                }
                              },
                              "id": 1218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5748:16:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "526f756e64206e6f74206265747461626c65",
                              "id": 1219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5766:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a2d0442ca18c3ecfac48145ee9309c30cdc48c9f8ead495b5b73042b901b9c63",
                                "typeString": "literal_string \"Round not bettable\""
                              },
                              "value": "Round not bettable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a2d0442ca18c3ecfac48145ee9309c30cdc48c9f8ead495b5b73042b901b9c63",
                                "typeString": "literal_string \"Round not bettable\""
                              }
                            ],
                            "id": 1215,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5740:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5740:47:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1221,
                        "nodeType": "ExpressionStatement",
                        "src": "5740:47:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1223,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5818:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1224,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "5818:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1225,
                                "name": "minBetAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 895,
                                "src": "5831:12:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5818:25:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "42657420616d6f756e74206d7573742062652067726561746572207468616e206d696e426574416d6f756e74",
                              "id": 1227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5857:46:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5fe536c9da26cf95bc38483dac26360eaee1c4fa3afa56386df6147c7417b834",
                                "typeString": "literal_string \"Bet amount must be greater than minBetAmount\""
                              },
                              "value": "Bet amount must be greater than minBetAmount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5fe536c9da26cf95bc38483dac26360eaee1c4fa3afa56386df6147c7417b834",
                                "typeString": "literal_string \"Bet amount must be greater than minBetAmount\""
                              }
                            ],
                            "id": 1222,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5797:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5797:116:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1229,
                        "nodeType": "ExpressionStatement",
                        "src": "5797:116:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 1231,
                                      "name": "ledger",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 915,
                                      "src": "5944:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_BetInfo_$965_storage_$_$",
                                        "typeString": "mapping(uint256 => mapping(address => struct MetaFlokiPrediction.BetInfo storage ref))"
                                      }
                                    },
                                    "id": 1233,
                                    "indexExpression": {
                                      "id": 1232,
                                      "name": "epoch",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1199,
                                      "src": "5951:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5944:13:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BetInfo_$965_storage_$",
                                      "typeString": "mapping(address => struct MetaFlokiPrediction.BetInfo storage ref)"
                                    }
                                  },
                                  "id": 1236,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1234,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5958:3:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1235,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5958:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5944:25:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_BetInfo_$965_storage",
                                    "typeString": "struct MetaFlokiPrediction.BetInfo storage ref"
                                  }
                                },
                                "id": 1237,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 962,
                                "src": "5944:32:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1238,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5980:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5944:37:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206f6e6c7920626574206f6e63652070657220726f756e64",
                              "id": 1240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5995:29:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dd575bd5a920bf4d27ada0ef8c9f7ed8b7e1c23b2b408d861af2e5d02b5f7232",
                                "typeString": "literal_string \"Can only bet once per round\""
                              },
                              "value": "Can only bet once per round"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dd575bd5a920bf4d27ada0ef8c9f7ed8b7e1c23b2b408d861af2e5d02b5f7232",
                                "typeString": "literal_string \"Can only bet once per round\""
                              }
                            ],
                            "id": 1230,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5923:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5923:111:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1242,
                        "nodeType": "ExpressionStatement",
                        "src": "5923:111:7"
                      },
                      {
                        "assignments": [
                          1244
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1244,
                            "mutability": "mutable",
                            "name": "amount",
                            "nodeType": "VariableDeclaration",
                            "scope": 1311,
                            "src": "6074:14:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1243,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6074:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1247,
                        "initialValue": {
                          "expression": {
                            "id": 1245,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6091:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "6091:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6074:26:7"
                      },
                      {
                        "assignments": [
                          1250
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1250,
                            "mutability": "mutable",
                            "name": "round",
                            "nodeType": "VariableDeclaration",
                            "scope": 1311,
                            "src": "6110:19:7",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                              "typeString": "struct MetaFlokiPrediction.Round"
                            },
                            "typeName": {
                              "id": 1249,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1248,
                                "name": "Round",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 957,
                                "src": "6110:5:7"
                              },
                              "referencedDeclaration": 957,
                              "src": "6110:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.Round"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1254,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1251,
                            "name": "rounds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 920,
                            "src": "6132:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$957_storage_$",
                              "typeString": "mapping(uint256 => struct MetaFlokiPrediction.Round storage ref)"
                            }
                          },
                          "id": 1253,
                          "indexExpression": {
                            "id": 1252,
                            "name": "epoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1199,
                            "src": "6139:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6132:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Round_$957_storage",
                            "typeString": "struct MetaFlokiPrediction.Round storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6110:35:7"
                      },
                      {
                        "expression": {
                          "id": 1262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1255,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1250,
                              "src": "6155:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                              }
                            },
                            "id": 1257,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "totalAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 946,
                            "src": "6155:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1258,
                                "name": "round",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1250,
                                "src": "6175:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                  "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                                }
                              },
                              "id": 1259,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 946,
                              "src": "6175:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1260,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1244,
                              "src": "6195:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6175:26:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6155:46:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1263,
                        "nodeType": "ExpressionStatement",
                        "src": "6155:46:7"
                      },
                      {
                        "expression": {
                          "id": 1271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1264,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1250,
                              "src": "6211:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                              }
                            },
                            "id": 1266,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "bearAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 950,
                            "src": "6211:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1267,
                                "name": "round",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1250,
                                "src": "6230:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                  "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                                }
                              },
                              "id": 1268,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "bearAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 950,
                              "src": "6230:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1269,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1244,
                              "src": "6249:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6230:25:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6211:44:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1272,
                        "nodeType": "ExpressionStatement",
                        "src": "6211:44:7"
                      },
                      {
                        "assignments": [
                          1275
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1275,
                            "mutability": "mutable",
                            "name": "betInfo",
                            "nodeType": "VariableDeclaration",
                            "scope": 1311,
                            "src": "6294:23:7",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BetInfo_$965_storage_ptr",
                              "typeString": "struct MetaFlokiPrediction.BetInfo"
                            },
                            "typeName": {
                              "id": 1274,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1273,
                                "name": "BetInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 965,
                                "src": "6294:7:7"
                              },
                              "referencedDeclaration": 965,
                              "src": "6294:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BetInfo_$965_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.BetInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1282,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1276,
                              "name": "ledger",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 915,
                              "src": "6320:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_BetInfo_$965_storage_$_$",
                                "typeString": "mapping(uint256 => mapping(address => struct MetaFlokiPrediction.BetInfo storage ref))"
                              }
                            },
                            "id": 1278,
                            "indexExpression": {
                              "id": 1277,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1199,
                              "src": "6327:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6320:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BetInfo_$965_storage_$",
                              "typeString": "mapping(address => struct MetaFlokiPrediction.BetInfo storage ref)"
                            }
                          },
                          "id": 1281,
                          "indexExpression": {
                            "expression": {
                              "id": 1279,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6334:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1280,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6334:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6320:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BetInfo_$965_storage",
                            "typeString": "struct MetaFlokiPrediction.BetInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6294:51:7"
                      },
                      {
                        "expression": {
                          "id": 1288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1283,
                              "name": "betInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1275,
                              "src": "6355:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BetInfo_$965_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.BetInfo storage pointer"
                              }
                            },
                            "id": 1285,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "position",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 960,
                            "src": "6355:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Position_$928",
                              "typeString": "enum MetaFlokiPrediction.Position"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1286,
                              "name": "Position",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 928,
                              "src": "6374:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Position_$928_$",
                                "typeString": "type(enum MetaFlokiPrediction.Position)"
                              }
                            },
                            "id": 1287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Bear",
                            "nodeType": "MemberAccess",
                            "src": "6374:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Position_$928",
                              "typeString": "enum MetaFlokiPrediction.Position"
                            }
                          },
                          "src": "6355:32:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Position_$928",
                            "typeString": "enum MetaFlokiPrediction.Position"
                          }
                        },
                        "id": 1289,
                        "nodeType": "ExpressionStatement",
                        "src": "6355:32:7"
                      },
                      {
                        "expression": {
                          "id": 1294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1290,
                              "name": "betInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1275,
                              "src": "6397:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BetInfo_$965_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.BetInfo storage pointer"
                              }
                            },
                            "id": 1292,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 962,
                            "src": "6397:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1293,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1244,
                            "src": "6414:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6397:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1295,
                        "nodeType": "ExpressionStatement",
                        "src": "6397:23:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1301,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1199,
                              "src": "6458:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 1296,
                                "name": "userRounds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 925,
                                "src": "6430:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                  "typeString": "mapping(address => uint256[] storage ref)"
                                }
                              },
                              "id": 1299,
                              "indexExpression": {
                                "expression": {
                                  "id": 1297,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "6441:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1298,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "6441:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6430:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 1300,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "6430:27:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6430:34:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1303,
                        "nodeType": "ExpressionStatement",
                        "src": "6430:34:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1305,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6488:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6488:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1307,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1199,
                              "src": "6500:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1308,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1244,
                              "src": "6507:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1304,
                            "name": "BetBear",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 973,
                            "src": "6480:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 1309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6480:34:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1310,
                        "nodeType": "EmitStatement",
                        "src": "6475:39:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1197,
                    "nodeType": "StructuredDocumentation",
                    "src": "5457:71:7",
                    "text": " @notice Bet bear position\n @param epoch: epoch"
                  },
                  "functionSelector": "aa6b873a",
                  "id": 1312,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1202,
                      "modifierName": {
                        "id": 1201,
                        "name": "whenNotPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 151,
                        "src": "5606:13:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5606:13:7"
                    },
                    {
                      "id": 1204,
                      "modifierName": {
                        "id": 1203,
                        "name": "nonReentrant",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 234,
                        "src": "5628:12:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5628:12:7"
                    },
                    {
                      "id": 1206,
                      "modifierName": {
                        "id": 1205,
                        "name": "notContract",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1134,
                        "src": "5649:11:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5649:11:7"
                    }
                  ],
                  "name": "betBear",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1200,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1199,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nodeType": "VariableDeclaration",
                        "scope": 1312,
                        "src": "5550:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1198,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5550:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5549:15:7"
                  },
                  "returnParameters": {
                    "id": 1207,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5665:0:7"
                  },
                  "scope": 2823,
                  "src": "5533:988:7",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1427,
                    "nodeType": "Block",
                    "src": "6735:856:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1327,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1325,
                                "name": "epoch",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1315,
                                "src": "6753:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1326,
                                "name": "currentEpoch",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 901,
                                "src": "6762:12:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6753:21:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "42657420697320746f6f206561726c792f6c617465",
                              "id": 1328,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6776:23:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f0f9d6116fd050471235a880137dc204da2444049ba6e5a27070933145ecf8b2",
                                "typeString": "literal_string \"Bet is too early/late\""
                              },
                              "value": "Bet is too early/late"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f0f9d6116fd050471235a880137dc204da2444049ba6e5a27070933145ecf8b2",
                                "typeString": "literal_string \"Bet is too early/late\""
                              }
                            ],
                            "id": 1324,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6745:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6745:55:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1330,
                        "nodeType": "ExpressionStatement",
                        "src": "6745:55:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1333,
                                  "name": "epoch",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1315,
                                  "src": "6828:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1332,
                                "name": "_bettable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2740,
                                "src": "6818:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (uint256) view returns (bool)"
                                }
                              },
                              "id": 1334,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6818:16:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "526f756e64206e6f74206265747461626c65",
                              "id": 1335,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6836:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a2d0442ca18c3ecfac48145ee9309c30cdc48c9f8ead495b5b73042b901b9c63",
                                "typeString": "literal_string \"Round not bettable\""
                              },
                              "value": "Round not bettable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a2d0442ca18c3ecfac48145ee9309c30cdc48c9f8ead495b5b73042b901b9c63",
                                "typeString": "literal_string \"Round not bettable\""
                              }
                            ],
                            "id": 1331,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6810:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6810:47:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1337,
                        "nodeType": "ExpressionStatement",
                        "src": "6810:47:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1342,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1339,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "6888:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1340,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "6888:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1341,
                                "name": "minBetAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 895,
                                "src": "6901:12:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6888:25:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "42657420616d6f756e74206d7573742062652067726561746572207468616e206d696e426574416d6f756e74",
                              "id": 1343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6927:46:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5fe536c9da26cf95bc38483dac26360eaee1c4fa3afa56386df6147c7417b834",
                                "typeString": "literal_string \"Bet amount must be greater than minBetAmount\""
                              },
                              "value": "Bet amount must be greater than minBetAmount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5fe536c9da26cf95bc38483dac26360eaee1c4fa3afa56386df6147c7417b834",
                                "typeString": "literal_string \"Bet amount must be greater than minBetAmount\""
                              }
                            ],
                            "id": 1338,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6867:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6867:116:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1345,
                        "nodeType": "ExpressionStatement",
                        "src": "6867:116:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1355,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 1347,
                                      "name": "ledger",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 915,
                                      "src": "7014:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_BetInfo_$965_storage_$_$",
                                        "typeString": "mapping(uint256 => mapping(address => struct MetaFlokiPrediction.BetInfo storage ref))"
                                      }
                                    },
                                    "id": 1349,
                                    "indexExpression": {
                                      "id": 1348,
                                      "name": "epoch",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1315,
                                      "src": "7021:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7014:13:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BetInfo_$965_storage_$",
                                      "typeString": "mapping(address => struct MetaFlokiPrediction.BetInfo storage ref)"
                                    }
                                  },
                                  "id": 1352,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1350,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "7028:3:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1351,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "7028:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7014:25:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_BetInfo_$965_storage",
                                    "typeString": "struct MetaFlokiPrediction.BetInfo storage ref"
                                  }
                                },
                                "id": 1353,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 962,
                                "src": "7014:32:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7050:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7014:37:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206f6e6c7920626574206f6e63652070657220726f756e64",
                              "id": 1356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7065:29:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dd575bd5a920bf4d27ada0ef8c9f7ed8b7e1c23b2b408d861af2e5d02b5f7232",
                                "typeString": "literal_string \"Can only bet once per round\""
                              },
                              "value": "Can only bet once per round"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dd575bd5a920bf4d27ada0ef8c9f7ed8b7e1c23b2b408d861af2e5d02b5f7232",
                                "typeString": "literal_string \"Can only bet once per round\""
                              }
                            ],
                            "id": 1346,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6993:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6993:111:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1358,
                        "nodeType": "ExpressionStatement",
                        "src": "6993:111:7"
                      },
                      {
                        "assignments": [
                          1360
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1360,
                            "mutability": "mutable",
                            "name": "amount",
                            "nodeType": "VariableDeclaration",
                            "scope": 1427,
                            "src": "7144:14:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1359,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7144:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1363,
                        "initialValue": {
                          "expression": {
                            "id": 1361,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7161:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "7161:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7144:26:7"
                      },
                      {
                        "assignments": [
                          1366
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1366,
                            "mutability": "mutable",
                            "name": "round",
                            "nodeType": "VariableDeclaration",
                            "scope": 1427,
                            "src": "7180:19:7",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                              "typeString": "struct MetaFlokiPrediction.Round"
                            },
                            "typeName": {
                              "id": 1365,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1364,
                                "name": "Round",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 957,
                                "src": "7180:5:7"
                              },
                              "referencedDeclaration": 957,
                              "src": "7180:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.Round"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1370,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1367,
                            "name": "rounds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 920,
                            "src": "7202:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$957_storage_$",
                              "typeString": "mapping(uint256 => struct MetaFlokiPrediction.Round storage ref)"
                            }
                          },
                          "id": 1369,
                          "indexExpression": {
                            "id": 1368,
                            "name": "epoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1315,
                            "src": "7209:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7202:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Round_$957_storage",
                            "typeString": "struct MetaFlokiPrediction.Round storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7180:35:7"
                      },
                      {
                        "expression": {
                          "id": 1378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1371,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1366,
                              "src": "7225:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                              }
                            },
                            "id": 1373,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "totalAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 946,
                            "src": "7225:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1374,
                                "name": "round",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1366,
                                "src": "7245:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                  "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                                }
                              },
                              "id": 1375,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 946,
                              "src": "7245:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1376,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1360,
                              "src": "7265:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7245:26:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7225:46:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1379,
                        "nodeType": "ExpressionStatement",
                        "src": "7225:46:7"
                      },
                      {
                        "expression": {
                          "id": 1387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1380,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1366,
                              "src": "7281:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                              }
                            },
                            "id": 1382,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "bullAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 948,
                            "src": "7281:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1383,
                                "name": "round",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1366,
                                "src": "7300:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                  "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                                }
                              },
                              "id": 1384,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "bullAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 948,
                              "src": "7300:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1385,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1360,
                              "src": "7319:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7300:25:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7281:44:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1388,
                        "nodeType": "ExpressionStatement",
                        "src": "7281:44:7"
                      },
                      {
                        "assignments": [
                          1391
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1391,
                            "mutability": "mutable",
                            "name": "betInfo",
                            "nodeType": "VariableDeclaration",
                            "scope": 1427,
                            "src": "7364:23:7",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BetInfo_$965_storage_ptr",
                              "typeString": "struct MetaFlokiPrediction.BetInfo"
                            },
                            "typeName": {
                              "id": 1390,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1389,
                                "name": "BetInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 965,
                                "src": "7364:7:7"
                              },
                              "referencedDeclaration": 965,
                              "src": "7364:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BetInfo_$965_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.BetInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1398,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1392,
                              "name": "ledger",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 915,
                              "src": "7390:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_BetInfo_$965_storage_$_$",
                                "typeString": "mapping(uint256 => mapping(address => struct MetaFlokiPrediction.BetInfo storage ref))"
                              }
                            },
                            "id": 1394,
                            "indexExpression": {
                              "id": 1393,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1315,
                              "src": "7397:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7390:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BetInfo_$965_storage_$",
                              "typeString": "mapping(address => struct MetaFlokiPrediction.BetInfo storage ref)"
                            }
                          },
                          "id": 1397,
                          "indexExpression": {
                            "expression": {
                              "id": 1395,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7404:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7404:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7390:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BetInfo_$965_storage",
                            "typeString": "struct MetaFlokiPrediction.BetInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7364:51:7"
                      },
                      {
                        "expression": {
                          "id": 1404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1399,
                              "name": "betInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1391,
                              "src": "7425:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BetInfo_$965_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.BetInfo storage pointer"
                              }
                            },
                            "id": 1401,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "position",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 960,
                            "src": "7425:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Position_$928",
                              "typeString": "enum MetaFlokiPrediction.Position"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1402,
                              "name": "Position",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 928,
                              "src": "7444:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Position_$928_$",
                                "typeString": "type(enum MetaFlokiPrediction.Position)"
                              }
                            },
                            "id": 1403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Bull",
                            "nodeType": "MemberAccess",
                            "src": "7444:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Position_$928",
                              "typeString": "enum MetaFlokiPrediction.Position"
                            }
                          },
                          "src": "7425:32:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Position_$928",
                            "typeString": "enum MetaFlokiPrediction.Position"
                          }
                        },
                        "id": 1405,
                        "nodeType": "ExpressionStatement",
                        "src": "7425:32:7"
                      },
                      {
                        "expression": {
                          "id": 1410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1406,
                              "name": "betInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1391,
                              "src": "7467:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BetInfo_$965_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.BetInfo storage pointer"
                              }
                            },
                            "id": 1408,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 962,
                            "src": "7467:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1409,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1360,
                            "src": "7484:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7467:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1411,
                        "nodeType": "ExpressionStatement",
                        "src": "7467:23:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1417,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1315,
                              "src": "7528:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 1412,
                                "name": "userRounds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 925,
                                "src": "7500:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                  "typeString": "mapping(address => uint256[] storage ref)"
                                }
                              },
                              "id": 1415,
                              "indexExpression": {
                                "expression": {
                                  "id": 1413,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "7511:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1414,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "7511:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7500:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 1416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "7500:27:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7500:34:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1419,
                        "nodeType": "ExpressionStatement",
                        "src": "7500:34:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1421,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7558:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7558:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1423,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1315,
                              "src": "7570:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1424,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1360,
                              "src": "7577:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1420,
                            "name": "BetBull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 981,
                            "src": "7550:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 1425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7550:34:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1426,
                        "nodeType": "EmitStatement",
                        "src": "7545:39:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1313,
                    "nodeType": "StructuredDocumentation",
                    "src": "6527:71:7",
                    "text": " @notice Bet bull position\n @param epoch: epoch"
                  },
                  "functionSelector": "57fb096f",
                  "id": 1428,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1318,
                      "modifierName": {
                        "id": 1317,
                        "name": "whenNotPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 151,
                        "src": "6676:13:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6676:13:7"
                    },
                    {
                      "id": 1320,
                      "modifierName": {
                        "id": 1319,
                        "name": "nonReentrant",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 234,
                        "src": "6698:12:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6698:12:7"
                    },
                    {
                      "id": 1322,
                      "modifierName": {
                        "id": 1321,
                        "name": "notContract",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1134,
                        "src": "6719:11:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6719:11:7"
                    }
                  ],
                  "name": "betBull",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1316,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1315,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nodeType": "VariableDeclaration",
                        "scope": 1428,
                        "src": "6620:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1314,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6620:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6619:15:7"
                  },
                  "returnParameters": {
                    "id": 1323,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6735:0:7"
                  },
                  "scope": 2823,
                  "src": "6603:988:7",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1594,
                    "nodeType": "Block",
                    "src": "7806:1463:7",
                    "statements": [
                      {
                        "assignments": [
                          1440
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1440,
                            "mutability": "mutable",
                            "name": "reward",
                            "nodeType": "VariableDeclaration",
                            "scope": 1594,
                            "src": "7816:14:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1439,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7816:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1441,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7816:14:7"
                      },
                      {
                        "body": {
                          "id": 1578,
                          "nodeType": "Block",
                          "src": "7907:1260:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1461,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 1454,
                                          "name": "rounds",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 920,
                                          "src": "7946:6:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$957_storage_$",
                                            "typeString": "mapping(uint256 => struct MetaFlokiPrediction.Round storage ref)"
                                          }
                                        },
                                        "id": 1458,
                                        "indexExpression": {
                                          "baseExpression": {
                                            "id": 1455,
                                            "name": "epochs",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1432,
                                            "src": "7953:6:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                              "typeString": "uint256[] calldata"
                                            }
                                          },
                                          "id": 1457,
                                          "indexExpression": {
                                            "id": 1456,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1443,
                                            "src": "7960:1:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "7953:9:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "7946:17:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Round_$957_storage",
                                          "typeString": "struct MetaFlokiPrediction.Round storage ref"
                                        }
                                      },
                                      "id": 1459,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "startTimestamp",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 932,
                                      "src": "7946:32:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 1460,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7982:1:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "7946:37:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "526f756e6420686173206e6f742073746172746564",
                                    "id": 1462,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8001:23:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_d1836faf5a24c20648fe1feea8bcbadf99f3e9a49b28354c8afadd4a78cb02f7",
                                      "typeString": "literal_string \"Round has not started\""
                                    },
                                    "value": "Round has not started"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_d1836faf5a24c20648fe1feea8bcbadf99f3e9a49b28354c8afadd4a78cb02f7",
                                      "typeString": "literal_string \"Round has not started\""
                                    }
                                  ],
                                  "id": 1453,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "7921:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1463,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7921:117:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1464,
                              "nodeType": "ExpressionStatement",
                              "src": "7921:117:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1474,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 1466,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -4,
                                        "src": "8077:5:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 1467,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "timestamp",
                                      "nodeType": "MemberAccess",
                                      "src": "8077:15:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 1468,
                                          "name": "rounds",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 920,
                                          "src": "8095:6:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$957_storage_$",
                                            "typeString": "mapping(uint256 => struct MetaFlokiPrediction.Round storage ref)"
                                          }
                                        },
                                        "id": 1472,
                                        "indexExpression": {
                                          "baseExpression": {
                                            "id": 1469,
                                            "name": "epochs",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1432,
                                            "src": "8102:6:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                              "typeString": "uint256[] calldata"
                                            }
                                          },
                                          "id": 1471,
                                          "indexExpression": {
                                            "id": 1470,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1443,
                                            "src": "8109:1:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "8102:9:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "8095:17:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Round_$957_storage",
                                          "typeString": "struct MetaFlokiPrediction.Round storage ref"
                                        }
                                      },
                                      "id": 1473,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "closeTimestamp",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 936,
                                      "src": "8095:32:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "8077:50:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "526f756e6420686173206e6f7420656e646564",
                                    "id": 1475,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8145:21:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_620bac5ce7ce07e7a24266f5d1f82fa5a6fdb12107b06bacff04582c4c3dd298",
                                      "typeString": "literal_string \"Round has not ended\""
                                    },
                                    "value": "Round has not ended"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_620bac5ce7ce07e7a24266f5d1f82fa5a6fdb12107b06bacff04582c4c3dd298",
                                      "typeString": "literal_string \"Round has not ended\""
                                    }
                                  ],
                                  "id": 1465,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "8052:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1476,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8052:128:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1477,
                              "nodeType": "ExpressionStatement",
                              "src": "8052:128:7"
                            },
                            {
                              "assignments": [
                                1479
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1479,
                                  "mutability": "mutable",
                                  "name": "addedReward",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1578,
                                  "src": "8195:19:7",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1478,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8195:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1481,
                              "initialValue": {
                                "hexValue": "30",
                                "id": 1480,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8217:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8195:23:7"
                            },
                            {
                              "condition": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1482,
                                    "name": "rounds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 920,
                                    "src": "8279:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$957_storage_$",
                                      "typeString": "mapping(uint256 => struct MetaFlokiPrediction.Round storage ref)"
                                    }
                                  },
                                  "id": 1486,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 1483,
                                      "name": "epochs",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1432,
                                      "src": "8286:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                        "typeString": "uint256[] calldata"
                                      }
                                    },
                                    "id": 1485,
                                    "indexExpression": {
                                      "id": 1484,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1443,
                                      "src": "8293:1:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8286:9:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8279:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Round_$957_storage",
                                    "typeString": "struct MetaFlokiPrediction.Round storage ref"
                                  }
                                },
                                "id": 1487,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "oracleCalled",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 956,
                                "src": "8279:30:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 1551,
                                "nodeType": "Block",
                                "src": "8774:228:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "baseExpression": {
                                                "id": 1530,
                                                "name": "epochs",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1432,
                                                "src": "8832:6:7",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                                  "typeString": "uint256[] calldata"
                                                }
                                              },
                                              "id": 1532,
                                              "indexExpression": {
                                                "id": 1531,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1443,
                                                "src": "8839:1:7",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "8832:9:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            {
                                              "expression": {
                                                "id": 1533,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -15,
                                                "src": "8843:3:7",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 1534,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "src": "8843:10:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 1529,
                                            "name": "refundable",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2287,
                                            "src": "8821:10:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                                              "typeString": "function (uint256,address) view returns (bool)"
                                            }
                                          },
                                          "id": 1535,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "8821:33:7",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        {
                                          "hexValue": "4e6f7420656c696769626c6520666f7220726566756e64",
                                          "id": 1536,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "8876:25:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_10916da313aec2d89ae884214021eae2adcdb0000848c813099dbdefabcb1887",
                                            "typeString": "literal_string \"Not eligible for refund\""
                                          },
                                          "value": "Not eligible for refund"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_10916da313aec2d89ae884214021eae2adcdb0000848c813099dbdefabcb1887",
                                            "typeString": "literal_string \"Not eligible for refund\""
                                          }
                                        ],
                                        "id": 1528,
                                        "name": "require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -18,
                                          -18
                                        ],
                                        "referencedDeclaration": -18,
                                        "src": "8792:7:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (bool,string memory) pure"
                                        }
                                      },
                                      "id": 1537,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8792:127:7",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1538,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8792:127:7"
                                  },
                                  {
                                    "expression": {
                                      "id": 1549,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 1539,
                                        "name": "addedReward",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1479,
                                        "src": "8937:11:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "id": 1540,
                                              "name": "ledger",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 915,
                                              "src": "8951:6:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_BetInfo_$965_storage_$_$",
                                                "typeString": "mapping(uint256 => mapping(address => struct MetaFlokiPrediction.BetInfo storage ref))"
                                              }
                                            },
                                            "id": 1544,
                                            "indexExpression": {
                                              "baseExpression": {
                                                "id": 1541,
                                                "name": "epochs",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1432,
                                                "src": "8958:6:7",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                                  "typeString": "uint256[] calldata"
                                                }
                                              },
                                              "id": 1543,
                                              "indexExpression": {
                                                "id": 1542,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1443,
                                                "src": "8965:1:7",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "8958:9:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "8951:17:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BetInfo_$965_storage_$",
                                              "typeString": "mapping(address => struct MetaFlokiPrediction.BetInfo storage ref)"
                                            }
                                          },
                                          "id": 1547,
                                          "indexExpression": {
                                            "expression": {
                                              "id": 1545,
                                              "name": "msg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -15,
                                              "src": "8969:3:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                              }
                                            },
                                            "id": 1546,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "8969:10:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "8951:29:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_BetInfo_$965_storage",
                                            "typeString": "struct MetaFlokiPrediction.BetInfo storage ref"
                                          }
                                        },
                                        "id": 1548,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "amount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 962,
                                        "src": "8951:36:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "8937:50:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1550,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8937:50:7"
                                  }
                                ]
                              },
                              "id": 1552,
                              "nodeType": "IfStatement",
                              "src": "8275:727:7",
                              "trueBody": {
                                "id": 1527,
                                "nodeType": "Block",
                                "src": "8311:397:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "baseExpression": {
                                                "id": 1490,
                                                "name": "epochs",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1432,
                                                "src": "8368:6:7",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                                  "typeString": "uint256[] calldata"
                                                }
                                              },
                                              "id": 1492,
                                              "indexExpression": {
                                                "id": 1491,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1443,
                                                "src": "8375:1:7",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "8368:9:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            {
                                              "expression": {
                                                "id": 1493,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -15,
                                                "src": "8379:3:7",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 1494,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "src": "8379:10:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 1489,
                                            "name": "claimable",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2239,
                                            "src": "8358:9:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                                              "typeString": "function (uint256,address) view returns (bool)"
                                            }
                                          },
                                          "id": 1495,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "8358:32:7",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        {
                                          "hexValue": "4e6f7420656c696769626c6520666f7220636c61696d",
                                          "id": 1496,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "8412:24:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_4485251d168175c070f4245faf8e035abbbbeb2b93ec5dd30a17635d7bf82fa6",
                                            "typeString": "literal_string \"Not eligible for claim\""
                                          },
                                          "value": "Not eligible for claim"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_4485251d168175c070f4245faf8e035abbbbeb2b93ec5dd30a17635d7bf82fa6",
                                            "typeString": "literal_string \"Not eligible for claim\""
                                          }
                                        ],
                                        "id": 1488,
                                        "name": "require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -18,
                                          -18
                                        ],
                                        "referencedDeclaration": -18,
                                        "src": "8329:7:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (bool,string memory) pure"
                                        }
                                      },
                                      "id": 1497,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8329:125:7",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1498,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8329:125:7"
                                  },
                                  {
                                    "assignments": [
                                      1501
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 1501,
                                        "mutability": "mutable",
                                        "name": "round",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1527,
                                        "src": "8472:18:7",
                                        "stateVariable": false,
                                        "storageLocation": "memory",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Round_$957_memory_ptr",
                                          "typeString": "struct MetaFlokiPrediction.Round"
                                        },
                                        "typeName": {
                                          "id": 1500,
                                          "nodeType": "UserDefinedTypeName",
                                          "pathNode": {
                                            "id": 1499,
                                            "name": "Round",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 957,
                                            "src": "8472:5:7"
                                          },
                                          "referencedDeclaration": 957,
                                          "src": "8472:5:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                            "typeString": "struct MetaFlokiPrediction.Round"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 1507,
                                    "initialValue": {
                                      "baseExpression": {
                                        "id": 1502,
                                        "name": "rounds",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 920,
                                        "src": "8493:6:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$957_storage_$",
                                          "typeString": "mapping(uint256 => struct MetaFlokiPrediction.Round storage ref)"
                                        }
                                      },
                                      "id": 1506,
                                      "indexExpression": {
                                        "baseExpression": {
                                          "id": 1503,
                                          "name": "epochs",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1432,
                                          "src": "8500:6:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                            "typeString": "uint256[] calldata"
                                          }
                                        },
                                        "id": 1505,
                                        "indexExpression": {
                                          "id": 1504,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1443,
                                          "src": "8507:1:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "8500:9:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8493:17:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Round_$957_storage",
                                        "typeString": "struct MetaFlokiPrediction.Round storage ref"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "8472:38:7"
                                  },
                                  {
                                    "expression": {
                                      "id": 1525,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 1508,
                                        "name": "addedReward",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1479,
                                        "src": "8528:11:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1524,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 1520,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "baseExpression": {
                                                    "baseExpression": {
                                                      "id": 1509,
                                                      "name": "ledger",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 915,
                                                      "src": "8563:6:7",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_BetInfo_$965_storage_$_$",
                                                        "typeString": "mapping(uint256 => mapping(address => struct MetaFlokiPrediction.BetInfo storage ref))"
                                                      }
                                                    },
                                                    "id": 1513,
                                                    "indexExpression": {
                                                      "baseExpression": {
                                                        "id": 1510,
                                                        "name": "epochs",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1432,
                                                        "src": "8570:6:7",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                                          "typeString": "uint256[] calldata"
                                                        }
                                                      },
                                                      "id": 1512,
                                                      "indexExpression": {
                                                        "id": 1511,
                                                        "name": "i",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1443,
                                                        "src": "8577:1:7",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "IndexAccess",
                                                      "src": "8570:9:7",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "8563:17:7",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BetInfo_$965_storage_$",
                                                      "typeString": "mapping(address => struct MetaFlokiPrediction.BetInfo storage ref)"
                                                    }
                                                  },
                                                  "id": 1516,
                                                  "indexExpression": {
                                                    "expression": {
                                                      "id": 1514,
                                                      "name": "msg",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": -15,
                                                      "src": "8581:3:7",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                      }
                                                    },
                                                    "id": 1515,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "8581:10:7",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "8563:29:7",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_BetInfo_$965_storage",
                                                    "typeString": "struct MetaFlokiPrediction.BetInfo storage ref"
                                                  }
                                                },
                                                "id": 1517,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "amount",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 962,
                                                "src": "8563:36:7",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "expression": {
                                                  "id": 1518,
                                                  "name": "round",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1501,
                                                  "src": "8626:5:7",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Round_$957_memory_ptr",
                                                    "typeString": "struct MetaFlokiPrediction.Round memory"
                                                  }
                                                },
                                                "id": 1519,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "rewardAmount",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 954,
                                                "src": "8626:18:7",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "8563:81:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 1521,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "8562:83:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 1522,
                                            "name": "round",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1501,
                                            "src": "8668:5:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Round_$957_memory_ptr",
                                              "typeString": "struct MetaFlokiPrediction.Round memory"
                                            }
                                          },
                                          "id": 1523,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "rewardBaseCalAmount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 952,
                                          "src": "8668:25:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "8562:131:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "8528:165:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1526,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8528:165:7"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "id": 1563,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 1553,
                                        "name": "ledger",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 915,
                                        "src": "9016:6:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_BetInfo_$965_storage_$_$",
                                          "typeString": "mapping(uint256 => mapping(address => struct MetaFlokiPrediction.BetInfo storage ref))"
                                        }
                                      },
                                      "id": 1559,
                                      "indexExpression": {
                                        "baseExpression": {
                                          "id": 1554,
                                          "name": "epochs",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1432,
                                          "src": "9023:6:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                            "typeString": "uint256[] calldata"
                                          }
                                        },
                                        "id": 1556,
                                        "indexExpression": {
                                          "id": 1555,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1443,
                                          "src": "9030:1:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "9023:9:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9016:17:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BetInfo_$965_storage_$",
                                        "typeString": "mapping(address => struct MetaFlokiPrediction.BetInfo storage ref)"
                                      }
                                    },
                                    "id": 1560,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 1557,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "9034:3:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 1558,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "9034:10:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9016:29:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BetInfo_$965_storage",
                                      "typeString": "struct MetaFlokiPrediction.BetInfo storage ref"
                                    }
                                  },
                                  "id": 1561,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "claimed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 964,
                                  "src": "9016:37:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 1562,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9056:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "9016:44:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1564,
                              "nodeType": "ExpressionStatement",
                              "src": "9016:44:7"
                            },
                            {
                              "expression": {
                                "id": 1567,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1565,
                                  "name": "reward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1440,
                                  "src": "9074:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 1566,
                                  "name": "addedReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1479,
                                  "src": "9084:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9074:21:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1568,
                              "nodeType": "ExpressionStatement",
                              "src": "9074:21:7"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1570,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "9121:3:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1571,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "9121:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1572,
                                      "name": "epochs",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1432,
                                      "src": "9133:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                        "typeString": "uint256[] calldata"
                                      }
                                    },
                                    "id": 1574,
                                    "indexExpression": {
                                      "id": 1573,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1443,
                                      "src": "9140:1:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9133:9:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1575,
                                    "name": "addedReward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1479,
                                    "src": "9144:11:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1569,
                                  "name": "Claim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 989,
                                  "src": "9115:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256,uint256)"
                                  }
                                },
                                "id": 1576,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9115:41:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1577,
                              "nodeType": "EmitStatement",
                              "src": "9110:46:7"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1446,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1443,
                            "src": "7883:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1447,
                              "name": "epochs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1432,
                              "src": "7887:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 1448,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "7887:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7883:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1579,
                        "initializationExpression": {
                          "assignments": [
                            1443
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1443,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "scope": 1579,
                              "src": "7868:9:7",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1442,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7868:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1445,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7880:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "7868:13:7"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "7902:3:7",
                            "subExpression": {
                              "id": 1450,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1443,
                              "src": "7902:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1452,
                          "nodeType": "ExpressionStatement",
                          "src": "7902:3:7"
                        },
                        "nodeType": "ForStatement",
                        "src": "7863:1304:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1580,
                            "name": "reward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1440,
                            "src": "9181:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9190:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9181:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1593,
                        "nodeType": "IfStatement",
                        "src": "9177:86:7",
                        "trueBody": {
                          "id": 1592,
                          "nodeType": "Block",
                          "src": "9193:70:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1586,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "9232:3:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1587,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "9232:10:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1585,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9224:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1584,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9224:7:7",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1588,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9224:19:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1589,
                                    "name": "reward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1440,
                                    "src": "9245:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1583,
                                  "name": "_safeTransferOne",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2643,
                                  "src": "9207:16:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 1590,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9207:45:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1591,
                              "nodeType": "ExpressionStatement",
                              "src": "9207:45:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1429,
                    "nodeType": "StructuredDocumentation",
                    "src": "7597:100:7",
                    "text": " @notice Claim reward for an array of epochs\n @param epochs: array of epochs"
                  },
                  "functionSelector": "6ba4c138",
                  "id": 1595,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1435,
                      "modifierName": {
                        "id": 1434,
                        "name": "nonReentrant",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 234,
                        "src": "7769:12:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7769:12:7"
                    },
                    {
                      "id": 1437,
                      "modifierName": {
                        "id": 1436,
                        "name": "notContract",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1134,
                        "src": "7790:11:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7790:11:7"
                    }
                  ],
                  "name": "claim",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1433,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1432,
                        "mutability": "mutable",
                        "name": "epochs",
                        "nodeType": "VariableDeclaration",
                        "scope": 1595,
                        "src": "7717:25:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1430,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7717:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1431,
                          "nodeType": "ArrayTypeName",
                          "src": "7717:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7716:27:7"
                  },
                  "returnParameters": {
                    "id": 1438,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7806:0:7"
                  },
                  "scope": 2823,
                  "src": "7702:1567:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1654,
                    "nodeType": "Block",
                    "src": "9463:680:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1606,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1604,
                                "name": "genesisStartOnce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 885,
                                "src": "9494:16:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "id": 1605,
                                "name": "genesisLockOnce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 882,
                                "src": "9514:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "9494:35:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206f6e6c792072756e2061667465722067656e657369735374617274526f756e6420616e642067656e657369734c6f636b526f756e6420697320747269676765726564",
                              "id": 1607,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9543:72:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b0f2a84e88f57bf6d829bd69a411a43d04b00c018b197d9d18656699d1a2cb4f",
                                "typeString": "literal_string \"Can only run after genesisStartRound and genesisLockRound is triggered\""
                              },
                              "value": "Can only run after genesisStartRound and genesisLockRound is triggered"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b0f2a84e88f57bf6d829bd69a411a43d04b00c018b197d9d18656699d1a2cb4f",
                                "typeString": "literal_string \"Can only run after genesisStartRound and genesisLockRound is triggered\""
                              }
                            ],
                            "id": 1603,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9473:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9473:152:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1609,
                        "nodeType": "ExpressionStatement",
                        "src": "9473:152:7"
                      },
                      {
                        "assignments": [
                          1611,
                          1613
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1611,
                            "mutability": "mutable",
                            "name": "currentRoundId",
                            "nodeType": "VariableDeclaration",
                            "scope": 1654,
                            "src": "9637:21:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            },
                            "typeName": {
                              "id": 1610,
                              "name": "uint80",
                              "nodeType": "ElementaryTypeName",
                              "src": "9637:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1613,
                            "mutability": "mutable",
                            "name": "currentPrice",
                            "nodeType": "VariableDeclaration",
                            "scope": 1654,
                            "src": "9660:19:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "typeName": {
                              "id": 1612,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9660:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1616,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1614,
                            "name": "_getPriceFromOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2805,
                            "src": "9683:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint80_$_t_int256_$",
                              "typeString": "function () view returns (uint80,int256)"
                            }
                          },
                          "id": 1615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9683:21:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$",
                            "typeString": "tuple(uint80,int256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9636:68:7"
                      },
                      {
                        "expression": {
                          "id": 1622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1617,
                            "name": "oracleLatestRoundId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 903,
                            "src": "9715:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1620,
                                "name": "currentRoundId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1611,
                                "src": "9745:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              ],
                              "id": 1619,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9737:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1618,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "9737:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1621,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9737:23:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9715:45:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1623,
                        "nodeType": "ExpressionStatement",
                        "src": "9715:45:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1625,
                              "name": "currentEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 901,
                              "src": "9841:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1626,
                              "name": "currentRoundId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1611,
                              "src": "9855:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              }
                            },
                            {
                              "id": 1627,
                              "name": "currentPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1613,
                              "src": "9871:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 1624,
                            "name": "_safeLockRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2579,
                            "src": "9826:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_int256_$returns$__$",
                              "typeString": "function (uint256,uint256,int256)"
                            }
                          },
                          "id": 1628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9826:58:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1629,
                        "nodeType": "ExpressionStatement",
                        "src": "9826:58:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1631,
                                "name": "currentEpoch",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 901,
                                "src": "9908:12:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 1632,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9923:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "9908:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1634,
                              "name": "currentRoundId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1611,
                              "src": "9926:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              }
                            },
                            {
                              "id": 1635,
                              "name": "currentPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1613,
                              "src": "9942:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 1630,
                            "name": "_safeEndRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2499,
                            "src": "9894:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_int256_$returns$__$",
                              "typeString": "function (uint256,uint256,int256)"
                            }
                          },
                          "id": 1636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9894:61:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1637,
                        "nodeType": "ExpressionStatement",
                        "src": "9894:61:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1641,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1639,
                                "name": "currentEpoch",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 901,
                                "src": "9983:12:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 1640,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9998:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "9983:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1638,
                            "name": "_calculateRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2422,
                            "src": "9965:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9965:35:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1643,
                        "nodeType": "ExpressionStatement",
                        "src": "9965:35:7"
                      },
                      {
                        "expression": {
                          "id": 1648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1644,
                            "name": "currentEpoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 901,
                            "src": "10066:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1645,
                              "name": "currentEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 901,
                              "src": "10081:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10096:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "10081:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10066:31:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1649,
                        "nodeType": "ExpressionStatement",
                        "src": "10066:31:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1651,
                              "name": "currentEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 901,
                              "src": "10123:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1650,
                            "name": "_safeStartRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2620,
                            "src": "10107:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10107:29:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1653,
                        "nodeType": "ExpressionStatement",
                        "src": "10107:29:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1596,
                    "nodeType": "StructuredDocumentation",
                    "src": "9275:123:7",
                    "text": " @notice Start the next round n, lock price for round n-1, end round n-2\n @dev Callable by operator"
                  },
                  "functionSelector": "7b3205f5",
                  "id": 1655,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1599,
                      "modifierName": {
                        "id": 1598,
                        "name": "whenNotPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 151,
                        "src": "9436:13:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9436:13:7"
                    },
                    {
                      "id": 1601,
                      "modifierName": {
                        "id": 1600,
                        "name": "onlyOperator",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1112,
                        "src": "9450:12:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9450:12:7"
                    }
                  ],
                  "name": "executeRound",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1597,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9424:2:7"
                  },
                  "returnParameters": {
                    "id": 1602,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9463:0:7"
                  },
                  "scope": 2823,
                  "src": "9403:740:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1708,
                    "nodeType": "Block",
                    "src": "10296:515:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1664,
                              "name": "genesisStartOnce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 885,
                              "src": "10327:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206f6e6c792072756e2061667465722067656e657369735374617274526f756e6420697320747269676765726564",
                              "id": 1665,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10357:51:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_226e65b5af697b001702a7d9d66fa2076db3b23ec51e12a83cc0a19f174024ab",
                                "typeString": "literal_string \"Can only run after genesisStartRound is triggered\""
                              },
                              "value": "Can only run after genesisStartRound is triggered"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_226e65b5af697b001702a7d9d66fa2076db3b23ec51e12a83cc0a19f174024ab",
                                "typeString": "literal_string \"Can only run after genesisStartRound is triggered\""
                              }
                            ],
                            "id": 1663,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10306:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10306:112:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1667,
                        "nodeType": "ExpressionStatement",
                        "src": "10306:112:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "10436:16:7",
                              "subExpression": {
                                "id": 1669,
                                "name": "genesisLockOnce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 882,
                                "src": "10437:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206f6e6c792072756e2067656e657369734c6f636b526f756e64206f6e6365",
                              "id": 1671,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10454:36:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_54c1dd6be5b30f20d2093c3e980ed73015a2bbe4a9e8d6c4aca1b60af3f18649",
                                "typeString": "literal_string \"Can only run genesisLockRound once\""
                              },
                              "value": "Can only run genesisLockRound once"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_54c1dd6be5b30f20d2093c3e980ed73015a2bbe4a9e8d6c4aca1b60af3f18649",
                                "typeString": "literal_string \"Can only run genesisLockRound once\""
                              }
                            ],
                            "id": 1668,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10428:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10428:63:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1673,
                        "nodeType": "ExpressionStatement",
                        "src": "10428:63:7"
                      },
                      {
                        "assignments": [
                          1675,
                          1677
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1675,
                            "mutability": "mutable",
                            "name": "currentRoundId",
                            "nodeType": "VariableDeclaration",
                            "scope": 1708,
                            "src": "10503:21:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            },
                            "typeName": {
                              "id": 1674,
                              "name": "uint80",
                              "nodeType": "ElementaryTypeName",
                              "src": "10503:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1677,
                            "mutability": "mutable",
                            "name": "currentPrice",
                            "nodeType": "VariableDeclaration",
                            "scope": 1708,
                            "src": "10526:19:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "typeName": {
                              "id": 1676,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10526:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1680,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1678,
                            "name": "_getPriceFromOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2805,
                            "src": "10549:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint80_$_t_int256_$",
                              "typeString": "function () view returns (uint80,int256)"
                            }
                          },
                          "id": 1679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10549:21:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$",
                            "typeString": "tuple(uint80,int256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10502:68:7"
                      },
                      {
                        "expression": {
                          "id": 1686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1681,
                            "name": "oracleLatestRoundId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 903,
                            "src": "10581:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1684,
                                "name": "currentRoundId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1675,
                                "src": "10611:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              ],
                              "id": 1683,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10603:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1682,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "10603:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1685,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10603:23:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10581:45:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1687,
                        "nodeType": "ExpressionStatement",
                        "src": "10581:45:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1689,
                              "name": "currentEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 901,
                              "src": "10652:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1690,
                              "name": "currentRoundId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1675,
                              "src": "10666:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              }
                            },
                            {
                              "id": 1691,
                              "name": "currentPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1677,
                              "src": "10682:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 1688,
                            "name": "_safeLockRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2579,
                            "src": "10637:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_int256_$returns$__$",
                              "typeString": "function (uint256,uint256,int256)"
                            }
                          },
                          "id": 1692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10637:58:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1693,
                        "nodeType": "ExpressionStatement",
                        "src": "10637:58:7"
                      },
                      {
                        "expression": {
                          "id": 1698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1694,
                            "name": "currentEpoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 901,
                            "src": "10706:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1695,
                              "name": "currentEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 901,
                              "src": "10721:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1696,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10736:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "10721:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10706:31:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1699,
                        "nodeType": "ExpressionStatement",
                        "src": "10706:31:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1701,
                              "name": "currentEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 901,
                              "src": "10759:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1700,
                            "name": "_startRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2701,
                            "src": "10747:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10747:25:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1703,
                        "nodeType": "ExpressionStatement",
                        "src": "10747:25:7"
                      },
                      {
                        "expression": {
                          "id": 1706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1704,
                            "name": "genesisLockOnce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 882,
                            "src": "10782:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1705,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10800:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "10782:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1707,
                        "nodeType": "ExpressionStatement",
                        "src": "10782:22:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1656,
                    "nodeType": "StructuredDocumentation",
                    "src": "10149:78:7",
                    "text": " @notice Lock genesis round\n @dev Callable by operator"
                  },
                  "functionSelector": "d9d55eac",
                  "id": 1709,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1659,
                      "modifierName": {
                        "id": 1658,
                        "name": "whenNotPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 151,
                        "src": "10269:13:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "10269:13:7"
                    },
                    {
                      "id": 1661,
                      "modifierName": {
                        "id": 1660,
                        "name": "onlyOperator",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1112,
                        "src": "10283:12:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "10283:12:7"
                    }
                  ],
                  "name": "genesisLockRound",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1657,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10257:2:7"
                  },
                  "returnParameters": {
                    "id": 1662,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10296:0:7"
                  },
                  "scope": 2823,
                  "src": "10232:579:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1737,
                    "nodeType": "Block",
                    "src": "10975:192:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1719,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "10993:17:7",
                              "subExpression": {
                                "id": 1718,
                                "name": "genesisStartOnce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 885,
                                "src": "10994:16:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206f6e6c792072756e2067656e657369735374617274526f756e64206f6e6365",
                              "id": 1720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11012:37:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a9ea304ddc1d813a52e1a9668db582745527adccdd0906ce8d85b183192c0132",
                                "typeString": "literal_string \"Can only run genesisStartRound once\""
                              },
                              "value": "Can only run genesisStartRound once"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a9ea304ddc1d813a52e1a9668db582745527adccdd0906ce8d85b183192c0132",
                                "typeString": "literal_string \"Can only run genesisStartRound once\""
                              }
                            ],
                            "id": 1717,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10985:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10985:65:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1722,
                        "nodeType": "ExpressionStatement",
                        "src": "10985:65:7"
                      },
                      {
                        "expression": {
                          "id": 1727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1723,
                            "name": "currentEpoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 901,
                            "src": "11061:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1724,
                              "name": "currentEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 901,
                              "src": "11076:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11091:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "11076:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11061:31:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1728,
                        "nodeType": "ExpressionStatement",
                        "src": "11061:31:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1730,
                              "name": "currentEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 901,
                              "src": "11114:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1729,
                            "name": "_startRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2701,
                            "src": "11102:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11102:25:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1732,
                        "nodeType": "ExpressionStatement",
                        "src": "11102:25:7"
                      },
                      {
                        "expression": {
                          "id": 1735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1733,
                            "name": "genesisStartOnce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 885,
                            "src": "11137:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1734,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11156:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "11137:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1736,
                        "nodeType": "ExpressionStatement",
                        "src": "11137:23:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1710,
                    "nodeType": "StructuredDocumentation",
                    "src": "10817:88:7",
                    "text": " @notice Start genesis round\n @dev Callable by admin or operator"
                  },
                  "functionSelector": "452fd75a",
                  "id": 1738,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1713,
                      "modifierName": {
                        "id": 1712,
                        "name": "whenNotPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 151,
                        "src": "10948:13:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "10948:13:7"
                    },
                    {
                      "id": 1715,
                      "modifierName": {
                        "id": 1714,
                        "name": "onlyOperator",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1112,
                        "src": "10962:12:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "10962:12:7"
                    }
                  ],
                  "name": "genesisStartRound",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1711,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10936:2:7"
                  },
                  "returnParameters": {
                    "id": 1716,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10975:0:7"
                  },
                  "scope": 2823,
                  "src": "10910:257:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1753,
                    "nodeType": "Block",
                    "src": "11359:60:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1746,
                            "name": "_pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 178,
                            "src": "11369:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11369:8:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1748,
                        "nodeType": "ExpressionStatement",
                        "src": "11369:8:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1750,
                              "name": "currentEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 901,
                              "src": "11399:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1749,
                            "name": "Pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1043,
                            "src": "11393:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11393:19:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1752,
                        "nodeType": "EmitStatement",
                        "src": "11388:24:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1739,
                    "nodeType": "StructuredDocumentation",
                    "src": "11173:121:7",
                    "text": " @notice called by the admin to pause, triggers stopped state\n @dev Callable by admin or operator"
                  },
                  "functionSelector": "8456cb59",
                  "id": 1754,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1742,
                      "modifierName": {
                        "id": 1741,
                        "name": "whenNotPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 151,
                        "src": "11325:13:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "11325:13:7"
                    },
                    {
                      "id": 1744,
                      "modifierName": {
                        "id": 1743,
                        "name": "onlyAdminOrOperator",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1100,
                        "src": "11339:19:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "11339:19:7"
                    }
                  ],
                  "name": "pause",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1740,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11313:2:7"
                  },
                  "returnParameters": {
                    "id": 1745,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11359:0:7"
                  },
                  "scope": 2823,
                  "src": "11299:120:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1779,
                    "nodeType": "Block",
                    "src": "11573:206:7",
                    "statements": [
                      {
                        "assignments": [
                          1763
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1763,
                            "mutability": "mutable",
                            "name": "currentTreasuryAmount",
                            "nodeType": "VariableDeclaration",
                            "scope": 1779,
                            "src": "11583:29:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1762,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11583:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1765,
                        "initialValue": {
                          "id": 1764,
                          "name": "treasuryAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "11615:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11583:46:7"
                      },
                      {
                        "expression": {
                          "id": 1768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1766,
                            "name": "treasuryAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 899,
                            "src": "11639:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11656:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11639:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1769,
                        "nodeType": "ExpressionStatement",
                        "src": "11639:18:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1771,
                              "name": "adminAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 887,
                              "src": "11684:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1772,
                              "name": "currentTreasuryAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1763,
                              "src": "11698:21:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1770,
                            "name": "_safeTransferOne",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2643,
                            "src": "11667:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11667:53:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1774,
                        "nodeType": "ExpressionStatement",
                        "src": "11667:53:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1776,
                              "name": "currentTreasuryAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1763,
                              "src": "11750:21:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1775,
                            "name": "TreasuryClaim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1067,
                            "src": "11736:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11736:36:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1778,
                        "nodeType": "EmitStatement",
                        "src": "11731:41:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1755,
                    "nodeType": "StructuredDocumentation",
                    "src": "11425:86:7",
                    "text": " @notice Claim all rewards in treasury\n @dev Callable by admin"
                  },
                  "functionSelector": "003bdc74",
                  "id": 1780,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1758,
                      "modifierName": {
                        "id": 1757,
                        "name": "nonReentrant",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 234,
                        "src": "11550:12:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "11550:12:7"
                    },
                    {
                      "id": 1760,
                      "modifierName": {
                        "id": 1759,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1083,
                        "src": "11563:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "11563:9:7"
                    }
                  ],
                  "name": "claimTreasury",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1756,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11538:2:7"
                  },
                  "returnParameters": {
                    "id": 1761,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11573:0:7"
                  },
                  "scope": 2823,
                  "src": "11516:263:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1803,
                    "nodeType": "Block",
                    "src": "12013:131:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1788,
                            "name": "genesisStartOnce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 885,
                            "src": "12023:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 1789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12042:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "12023:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1791,
                        "nodeType": "ExpressionStatement",
                        "src": "12023:24:7"
                      },
                      {
                        "expression": {
                          "id": 1794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1792,
                            "name": "genesisLockOnce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 882,
                            "src": "12057:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 1793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12075:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "12057:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1795,
                        "nodeType": "ExpressionStatement",
                        "src": "12057:23:7"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1796,
                            "name": "_unpause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 194,
                            "src": "12090:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12090:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1798,
                        "nodeType": "ExpressionStatement",
                        "src": "12090:10:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1800,
                              "name": "currentEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 901,
                              "src": "12124:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1799,
                            "name": "Unpause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1071,
                            "src": "12116:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12116:21:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1802,
                        "nodeType": "EmitStatement",
                        "src": "12111:26:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1781,
                    "nodeType": "StructuredDocumentation",
                    "src": "11785:174:7",
                    "text": " @notice called by the admin to unpause, returns to normal state\n Reset genesis state. Once paused, the rounds would need to be kickstarted by genesis"
                  },
                  "functionSelector": "3f4ba83a",
                  "id": 1804,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1784,
                      "modifierName": {
                        "id": 1783,
                        "name": "whenPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 162,
                        "src": "11992:10:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "11992:10:7"
                    },
                    {
                      "id": 1786,
                      "modifierName": {
                        "id": 1785,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1083,
                        "src": "12003:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12003:9:7"
                    }
                  ],
                  "name": "unpause",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1782,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11980:2:7"
                  },
                  "returnParameters": {
                    "id": 1787,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12013:0:7"
                  },
                  "scope": 2823,
                  "src": "11964:180:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1836,
                    "nodeType": "Block",
                    "src": "12387:307:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1819,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1817,
                                "name": "_bufferSeconds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1807,
                                "src": "12418:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 1818,
                                "name": "_intervalSeconds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1809,
                                "src": "12435:16:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12418:33:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6275666665725365636f6e6473206d75737420626520696e666572696f7220746f20696e74657276616c5365636f6e6473",
                              "id": 1820,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12465:51:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_33274a361372ebeacba5c8e2184d7f229ddb12fab7235d1315991afd5a00ecae",
                                "typeString": "literal_string \"bufferSeconds must be inferior to intervalSeconds\""
                              },
                              "value": "bufferSeconds must be inferior to intervalSeconds"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_33274a361372ebeacba5c8e2184d7f229ddb12fab7235d1315991afd5a00ecae",
                                "typeString": "literal_string \"bufferSeconds must be inferior to intervalSeconds\""
                              }
                            ],
                            "id": 1816,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12397:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12397:129:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1822,
                        "nodeType": "ExpressionStatement",
                        "src": "12397:129:7"
                      },
                      {
                        "expression": {
                          "id": 1825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1823,
                            "name": "bufferSeconds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 891,
                            "src": "12536:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1824,
                            "name": "_bufferSeconds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1807,
                            "src": "12552:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12536:30:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1826,
                        "nodeType": "ExpressionStatement",
                        "src": "12536:30:7"
                      },
                      {
                        "expression": {
                          "id": 1829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1827,
                            "name": "intervalSeconds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 893,
                            "src": "12576:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1828,
                            "name": "_intervalSeconds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1809,
                            "src": "12594:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12576:34:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1830,
                        "nodeType": "ExpressionStatement",
                        "src": "12576:34:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1832,
                              "name": "_bufferSeconds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1807,
                              "src": "12654:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1833,
                              "name": "_intervalSeconds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1809,
                              "src": "12670:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1831,
                            "name": "NewBufferAndIntervalSeconds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1015,
                            "src": "12626:27:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 1834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12626:61:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1835,
                        "nodeType": "EmitStatement",
                        "src": "12621:66:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1805,
                    "nodeType": "StructuredDocumentation",
                    "src": "12150:93:7",
                    "text": " @notice Set buffer and interval (in seconds)\n @dev Callable by admin"
                  },
                  "functionSelector": "890dc766",
                  "id": 1837,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1812,
                      "modifierName": {
                        "id": 1811,
                        "name": "whenPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 162,
                        "src": "12366:10:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12366:10:7"
                    },
                    {
                      "id": 1814,
                      "modifierName": {
                        "id": 1813,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1083,
                        "src": "12377:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12377:9:7"
                    }
                  ],
                  "name": "setBufferAndIntervalSeconds",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1810,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1807,
                        "mutability": "mutable",
                        "name": "_bufferSeconds",
                        "nodeType": "VariableDeclaration",
                        "scope": 1837,
                        "src": "12294:22:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1806,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12294:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1809,
                        "mutability": "mutable",
                        "name": "_intervalSeconds",
                        "nodeType": "VariableDeclaration",
                        "scope": 1837,
                        "src": "12326:24:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1808,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12326:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12284:72:7"
                  },
                  "returnParameters": {
                    "id": 1815,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12387:0:7"
                  },
                  "scope": 2823,
                  "src": "12248:446:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1863,
                    "nodeType": "Block",
                    "src": "12884:166:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1850,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1848,
                                "name": "_minBetAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1840,
                                "src": "12902:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1849,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12919:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "12902:18:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d757374206265207375706572696f7220746f2030",
                              "id": 1851,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12922:23:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b0163f2fb50c6c5784d12ab9af56eb359b1d810de577e2657eccb92b9a70f495",
                                "typeString": "literal_string \"Must be superior to 0\""
                              },
                              "value": "Must be superior to 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b0163f2fb50c6c5784d12ab9af56eb359b1d810de577e2657eccb92b9a70f495",
                                "typeString": "literal_string \"Must be superior to 0\""
                              }
                            ],
                            "id": 1847,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12894:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12894:52:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1853,
                        "nodeType": "ExpressionStatement",
                        "src": "12894:52:7"
                      },
                      {
                        "expression": {
                          "id": 1856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1854,
                            "name": "minBetAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 895,
                            "src": "12956:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1855,
                            "name": "_minBetAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1840,
                            "src": "12971:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12956:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1857,
                        "nodeType": "ExpressionStatement",
                        "src": "12956:28:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1859,
                              "name": "currentEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 901,
                              "src": "13016:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1860,
                              "name": "minBetAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 895,
                              "src": "13030:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1858,
                            "name": "NewMinBetAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1021,
                            "src": "13000:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 1861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13000:43:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1862,
                        "nodeType": "EmitStatement",
                        "src": "12995:48:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1838,
                    "nodeType": "StructuredDocumentation",
                    "src": "12700:73:7",
                    "text": " @notice Set minBetAmount\n @dev Callable by admin"
                  },
                  "functionSelector": "6c188593",
                  "id": 1864,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1843,
                      "modifierName": {
                        "id": 1842,
                        "name": "whenPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 162,
                        "src": "12851:10:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12851:10:7"
                    },
                    {
                      "id": 1845,
                      "modifierName": {
                        "id": 1844,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1083,
                        "src": "12870:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12870:9:7"
                    }
                  ],
                  "name": "setMinBetAmount",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1841,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1840,
                        "mutability": "mutable",
                        "name": "_minBetAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1864,
                        "src": "12803:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1839,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12803:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12802:23:7"
                  },
                  "returnParameters": {
                    "id": 1846,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12884:0:7"
                  },
                  "scope": 2823,
                  "src": "12778:272:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1890,
                    "nodeType": "Block",
                    "src": "13204:178:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1878,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1873,
                                "name": "_operatorAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1867,
                                "src": "13222:16:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1876,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13250:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1875,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "13242:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1874,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13242:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1877,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13242:10:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "13222:30:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e6e6f74206265207a65726f2061646472657373",
                              "id": 1879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13254:24:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
                                "typeString": "literal_string \"Cannot be zero address\""
                              },
                              "value": "Cannot be zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
                                "typeString": "literal_string \"Cannot be zero address\""
                              }
                            ],
                            "id": 1872,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13214:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13214:65:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1881,
                        "nodeType": "ExpressionStatement",
                        "src": "13214:65:7"
                      },
                      {
                        "expression": {
                          "id": 1884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1882,
                            "name": "operatorAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 889,
                            "src": "13289:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1883,
                            "name": "_operatorAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1867,
                            "src": "13307:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "13289:34:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1885,
                        "nodeType": "ExpressionStatement",
                        "src": "13289:34:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1887,
                              "name": "_operatorAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1867,
                              "src": "13358:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1886,
                            "name": "NewOperatorAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1031,
                            "src": "13339:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13339:36:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1889,
                        "nodeType": "EmitStatement",
                        "src": "13334:41:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1865,
                    "nodeType": "StructuredDocumentation",
                    "src": "13056:77:7",
                    "text": " @notice Set operator address\n @dev Callable by admin"
                  },
                  "functionSelector": "b3ab15fb",
                  "id": 1891,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1870,
                      "modifierName": {
                        "id": 1869,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1083,
                        "src": "13194:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13194:9:7"
                    }
                  ],
                  "name": "setOperator",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1868,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1867,
                        "mutability": "mutable",
                        "name": "_operatorAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 1891,
                        "src": "13159:24:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1866,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13159:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13158:26:7"
                  },
                  "returnParameters": {
                    "id": 1871,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13204:0:7"
                  },
                  "scope": 2823,
                  "src": "13138:244:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1930,
                    "nodeType": "Block",
                    "src": "13534:308:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1907,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1902,
                                "name": "_oracle",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1894,
                                "src": "13552:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1905,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13571:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1904,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "13563:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1903,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13563:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1906,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13563:10:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "13552:21:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e6e6f74206265207a65726f2061646472657373",
                              "id": 1908,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13575:24:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
                                "typeString": "literal_string \"Cannot be zero address\""
                              },
                              "value": "Cannot be zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
                                "typeString": "literal_string \"Cannot be zero address\""
                              }
                            ],
                            "id": 1901,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13544:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13544:56:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1910,
                        "nodeType": "ExpressionStatement",
                        "src": "13544:56:7"
                      },
                      {
                        "expression": {
                          "id": 1913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1911,
                            "name": "oracleLatestRoundId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 903,
                            "src": "13610:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13632:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "13610:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1914,
                        "nodeType": "ExpressionStatement",
                        "src": "13610:23:7"
                      },
                      {
                        "expression": {
                          "id": 1919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1915,
                            "name": "oracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 879,
                            "src": "13643:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$2869",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1917,
                                "name": "_oracle",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1894,
                                "src": "13674:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1916,
                              "name": "AggregatorV3Interface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2869,
                              "src": "13652:21:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$2869_$",
                                "typeString": "type(contract AggregatorV3Interface)"
                              }
                            },
                            "id": 1918,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13652:30:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$2869",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "src": "13643:39:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$2869",
                            "typeString": "contract AggregatorV3Interface"
                          }
                        },
                        "id": 1920,
                        "nodeType": "ExpressionStatement",
                        "src": "13643:39:7"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1921,
                              "name": "oracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 879,
                              "src": "13777:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$2869",
                                "typeString": "contract AggregatorV3Interface"
                              }
                            },
                            "id": 1923,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "latestRoundData",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2868,
                            "src": "13777:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                              "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                            }
                          },
                          "id": 1924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13777:24:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                            "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                          }
                        },
                        "id": 1925,
                        "nodeType": "ExpressionStatement",
                        "src": "13777:24:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1927,
                              "name": "_oracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1894,
                              "src": "13827:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1926,
                            "name": "NewOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1035,
                            "src": "13817:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13817:18:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1929,
                        "nodeType": "EmitStatement",
                        "src": "13812:23:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1892,
                    "nodeType": "StructuredDocumentation",
                    "src": "13388:75:7",
                    "text": " @notice Set Oracle address\n @dev Callable by admin"
                  },
                  "functionSelector": "7adbf973",
                  "id": 1931,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1897,
                      "modifierName": {
                        "id": 1896,
                        "name": "whenPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 162,
                        "src": "13513:10:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13513:10:7"
                    },
                    {
                      "id": 1899,
                      "modifierName": {
                        "id": 1898,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1083,
                        "src": "13524:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13524:9:7"
                    }
                  ],
                  "name": "setOracle",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1895,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1894,
                        "mutability": "mutable",
                        "name": "_oracle",
                        "nodeType": "VariableDeclaration",
                        "scope": 1931,
                        "src": "13487:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1893,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13487:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13486:17:7"
                  },
                  "returnParameters": {
                    "id": 1900,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13534:0:7"
                  },
                  "scope": 2823,
                  "src": "13468:374:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1949,
                    "nodeType": "Block",
                    "src": "14061:127:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1941,
                            "name": "oracleUpdateAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 905,
                            "src": "14071:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1942,
                            "name": "_oracleUpdateAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1934,
                            "src": "14095:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14071:46:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1944,
                        "nodeType": "ExpressionStatement",
                        "src": "14071:46:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1946,
                              "name": "_oracleUpdateAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1934,
                              "src": "14158:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1945,
                            "name": "NewOracleUpdateAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1039,
                            "src": "14133:24:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14133:48:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1948,
                        "nodeType": "EmitStatement",
                        "src": "14128:53:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1932,
                    "nodeType": "StructuredDocumentation",
                    "src": "13848:84:7",
                    "text": " @notice Set oracle update allowance\n @dev Callable by admin"
                  },
                  "functionSelector": "cf2f5039",
                  "id": 1950,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1937,
                      "modifierName": {
                        "id": 1936,
                        "name": "whenPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 162,
                        "src": "14028:10:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14028:10:7"
                    },
                    {
                      "id": 1939,
                      "modifierName": {
                        "id": 1938,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1083,
                        "src": "14047:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14047:9:7"
                    }
                  ],
                  "name": "setOracleUpdateAllowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1935,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1934,
                        "mutability": "mutable",
                        "name": "_oracleUpdateAllowance",
                        "nodeType": "VariableDeclaration",
                        "scope": 1950,
                        "src": "13971:30:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1933,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13971:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13970:32:7"
                  },
                  "returnParameters": {
                    "id": 1940,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14061:0:7"
                  },
                  "scope": 2823,
                  "src": "13937:251:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1976,
                    "nodeType": "Block",
                    "src": "14376:176:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1963,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1961,
                                "name": "_treasuryFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1953,
                                "src": "14394:12:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 1962,
                                "name": "MAX_TREASURY_FEE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 908,
                                "src": "14410:16:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "14394:32:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54726561737572792066656520746f6f2068696768",
                              "id": 1964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14428:23:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_11bdebae3580e3cc0aa83f4abe624d8a87da76af0e4eb2ea8382d5e81bd9d2ff",
                                "typeString": "literal_string \"Treasury fee too high\""
                              },
                              "value": "Treasury fee too high"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_11bdebae3580e3cc0aa83f4abe624d8a87da76af0e4eb2ea8382d5e81bd9d2ff",
                                "typeString": "literal_string \"Treasury fee too high\""
                              }
                            ],
                            "id": 1960,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14386:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14386:66:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1966,
                        "nodeType": "ExpressionStatement",
                        "src": "14386:66:7"
                      },
                      {
                        "expression": {
                          "id": 1969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1967,
                            "name": "treasuryFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 897,
                            "src": "14462:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1968,
                            "name": "_treasuryFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1953,
                            "src": "14476:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14462:26:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1970,
                        "nodeType": "ExpressionStatement",
                        "src": "14462:26:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1972,
                              "name": "currentEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 901,
                              "src": "14519:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1973,
                              "name": "treasuryFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 897,
                              "src": "14533:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1971,
                            "name": "NewTreasuryFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1027,
                            "src": "14504:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 1974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14504:41:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1975,
                        "nodeType": "EmitStatement",
                        "src": "14499:46:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1951,
                    "nodeType": "StructuredDocumentation",
                    "src": "14194:73:7",
                    "text": " @notice Set treasury fee\n @dev Callable by admin"
                  },
                  "functionSelector": "77e741c7",
                  "id": 1977,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1956,
                      "modifierName": {
                        "id": 1955,
                        "name": "whenPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 162,
                        "src": "14343:10:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14343:10:7"
                    },
                    {
                      "id": 1958,
                      "modifierName": {
                        "id": 1957,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1083,
                        "src": "14362:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14362:9:7"
                    }
                  ],
                  "name": "setTreasuryFee",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1954,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1953,
                        "mutability": "mutable",
                        "name": "_treasuryFee",
                        "nodeType": "VariableDeclaration",
                        "scope": 1977,
                        "src": "14296:20:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1952,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14296:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14295:22:7"
                  },
                  "returnParameters": {
                    "id": 1959,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14376:0:7"
                  },
                  "scope": 2823,
                  "src": "14272:280:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2004,
                    "nodeType": "Block",
                    "src": "14835:120:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1993,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "14881:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1994,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "14881:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1992,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14873:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1991,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14873:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1995,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14873:19:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1996,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1982,
                              "src": "14894:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1988,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1980,
                                  "src": "14852:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1987,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 313,
                                "src": "14845:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$313_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1989,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14845:14:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$313",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1990,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 344,
                            "src": "14845:27:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$313_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$313_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 1997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14845:57:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1998,
                        "nodeType": "ExpressionStatement",
                        "src": "14845:57:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2000,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1980,
                              "src": "14932:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2001,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1982,
                              "src": "14940:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1999,
                            "name": "TokenRecovery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1063,
                            "src": "14918:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14918:30:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2003,
                        "nodeType": "EmitStatement",
                        "src": "14913:35:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1978,
                    "nodeType": "StructuredDocumentation",
                    "src": "14558:198:7",
                    "text": " @notice It allows the owner to recover tokens sent to the contract by mistake\n @param _token: token address\n @param _amount: token amount\n @dev Callable by owner"
                  },
                  "functionSelector": "b29a8140",
                  "id": 2005,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1985,
                      "modifierName": {
                        "id": 1984,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 46,
                        "src": "14825:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14825:9:7"
                    }
                  ],
                  "name": "recoverToken",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1983,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1980,
                        "mutability": "mutable",
                        "name": "_token",
                        "nodeType": "VariableDeclaration",
                        "scope": 2005,
                        "src": "14783:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1979,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14783:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1982,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2005,
                        "src": "14799:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1981,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14799:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14782:33:7"
                  },
                  "returnParameters": {
                    "id": 1986,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14835:0:7"
                  },
                  "scope": 2823,
                  "src": "14761:194:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2013,
                    "nodeType": "Block",
                    "src": "15020:39:7",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 2010,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "15037:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 2011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "15037:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2009,
                        "id": 2012,
                        "nodeType": "Return",
                        "src": "15030:22:7"
                      }
                    ]
                  },
                  "functionSelector": "796b89b9",
                  "id": 2014,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBlockTimestamp",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2006,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14987:2:7"
                  },
                  "returnParameters": {
                    "id": 2009,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2008,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2014,
                        "src": "15011:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2007,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15011:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15010:9:7"
                  },
                  "scope": 2823,
                  "src": "14961:98:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2040,
                    "nodeType": "Block",
                    "src": "15204:163:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2028,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2023,
                                "name": "_adminAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2017,
                                "src": "15222:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2026,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15247:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2025,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "15239:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2024,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15239:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2027,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15239:10:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "15222:27:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e6e6f74206265207a65726f2061646472657373",
                              "id": 2029,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15251:24:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
                                "typeString": "literal_string \"Cannot be zero address\""
                              },
                              "value": "Cannot be zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
                                "typeString": "literal_string \"Cannot be zero address\""
                              }
                            ],
                            "id": 2022,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "15214:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15214:62:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2031,
                        "nodeType": "ExpressionStatement",
                        "src": "15214:62:7"
                      },
                      {
                        "expression": {
                          "id": 2034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2032,
                            "name": "adminAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 887,
                            "src": "15286:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2033,
                            "name": "_adminAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2017,
                            "src": "15301:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "15286:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2035,
                        "nodeType": "ExpressionStatement",
                        "src": "15286:28:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2037,
                              "name": "_adminAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2017,
                              "src": "15346:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2036,
                            "name": "NewAdminAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1009,
                            "src": "15330:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 2038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15330:30:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2039,
                        "nodeType": "EmitStatement",
                        "src": "15325:35:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2015,
                    "nodeType": "StructuredDocumentation",
                    "src": "15065:74:7",
                    "text": " @notice Set admin address\n @dev Callable by owner"
                  },
                  "functionSelector": "704b6c02",
                  "id": 2041,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2020,
                      "modifierName": {
                        "id": 2019,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 46,
                        "src": "15194:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "15194:9:7"
                    }
                  ],
                  "name": "setAdmin",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2018,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2017,
                        "mutability": "mutable",
                        "name": "_adminAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 2041,
                        "src": "15162:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2016,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15162:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15161:23:7"
                  },
                  "returnParameters": {
                    "id": 2021,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15204:0:7"
                  },
                  "scope": 2823,
                  "src": "15144:223:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2149,
                    "nodeType": "Block",
                    "src": "15804:491:7",
                    "statements": [
                      {
                        "assignments": [
                          2061
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2061,
                            "mutability": "mutable",
                            "name": "length",
                            "nodeType": "VariableDeclaration",
                            "scope": 2149,
                            "src": "15814:14:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2060,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15814:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2063,
                        "initialValue": {
                          "id": 2062,
                          "name": "size",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2048,
                          "src": "15831:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15814:21:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2064,
                            "name": "length",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2061,
                            "src": "15850:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 2065,
                                  "name": "userRounds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 925,
                                  "src": "15859:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                    "typeString": "mapping(address => uint256[] storage ref)"
                                  }
                                },
                                "id": 2067,
                                "indexExpression": {
                                  "id": 2066,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2044,
                                  "src": "15870:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "15859:16:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 2068,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "15859:23:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 2069,
                              "name": "cursor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2046,
                              "src": "15885:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15859:32:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15850:41:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2082,
                        "nodeType": "IfStatement",
                        "src": "15846:113:7",
                        "trueBody": {
                          "id": 2081,
                          "nodeType": "Block",
                          "src": "15893:66:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 2079,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2072,
                                  "name": "length",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2061,
                                  "src": "15907:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2078,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 2073,
                                        "name": "userRounds",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 925,
                                        "src": "15916:10:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                          "typeString": "mapping(address => uint256[] storage ref)"
                                        }
                                      },
                                      "id": 2075,
                                      "indexExpression": {
                                        "id": 2074,
                                        "name": "user",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2044,
                                        "src": "15927:4:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "15916:16:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                        "typeString": "uint256[] storage ref"
                                      }
                                    },
                                    "id": 2076,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "15916:23:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 2077,
                                    "name": "cursor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2046,
                                    "src": "15942:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "15916:32:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15907:41:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2080,
                              "nodeType": "ExpressionStatement",
                              "src": "15907:41:7"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          2087
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2087,
                            "mutability": "mutable",
                            "name": "values",
                            "nodeType": "VariableDeclaration",
                            "scope": 2149,
                            "src": "15969:23:7",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2085,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "15969:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2086,
                              "nodeType": "ArrayTypeName",
                              "src": "15969:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2093,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2091,
                              "name": "length",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2061,
                              "src": "16009:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2090,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "15995:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2088,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "15999:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2089,
                              "nodeType": "ArrayTypeName",
                              "src": "15999:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 2092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15995:21:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15969:47:7"
                      },
                      {
                        "assignments": [
                          2098
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2098,
                            "mutability": "mutable",
                            "name": "betInfo",
                            "nodeType": "VariableDeclaration",
                            "scope": 2149,
                            "src": "16026:24:7",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_BetInfo_$965_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct MetaFlokiPrediction.BetInfo[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2096,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2095,
                                  "name": "BetInfo",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 965,
                                  "src": "16026:7:7"
                                },
                                "referencedDeclaration": 965,
                                "src": "16026:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BetInfo_$965_storage_ptr",
                                  "typeString": "struct MetaFlokiPrediction.BetInfo"
                                }
                              },
                              "id": 2097,
                              "nodeType": "ArrayTypeName",
                              "src": "16026:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_BetInfo_$965_storage_$dyn_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.BetInfo[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2105,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2103,
                              "name": "length",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2061,
                              "src": "16067:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "16053:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_BetInfo_$965_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct MetaFlokiPrediction.BetInfo memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2100,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2099,
                                  "name": "BetInfo",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 965,
                                  "src": "16057:7:7"
                                },
                                "referencedDeclaration": 965,
                                "src": "16057:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BetInfo_$965_storage_ptr",
                                  "typeString": "struct MetaFlokiPrediction.BetInfo"
                                }
                              },
                              "id": 2101,
                              "nodeType": "ArrayTypeName",
                              "src": "16057:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_BetInfo_$965_storage_$dyn_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.BetInfo[]"
                              }
                            }
                          },
                          "id": 2104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16053:21:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_BetInfo_$965_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct MetaFlokiPrediction.BetInfo memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16026:48:7"
                      },
                      {
                        "body": {
                          "id": 2140,
                          "nodeType": "Block",
                          "src": "16122:115:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 2126,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2116,
                                    "name": "values",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2087,
                                    "src": "16136:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 2118,
                                  "indexExpression": {
                                    "id": 2117,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2107,
                                    "src": "16143:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "16136:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 2119,
                                      "name": "userRounds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 925,
                                      "src": "16148:10:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                        "typeString": "mapping(address => uint256[] storage ref)"
                                      }
                                    },
                                    "id": 2121,
                                    "indexExpression": {
                                      "id": 2120,
                                      "name": "user",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2044,
                                      "src": "16159:4:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "16148:16:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 2125,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2124,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2122,
                                      "name": "cursor",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2046,
                                      "src": "16165:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 2123,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2107,
                                      "src": "16174:1:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "16165:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16148:28:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16136:40:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2127,
                              "nodeType": "ExpressionStatement",
                              "src": "16136:40:7"
                            },
                            {
                              "expression": {
                                "id": 2138,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2128,
                                    "name": "betInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2098,
                                    "src": "16190:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_BetInfo_$965_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct MetaFlokiPrediction.BetInfo memory[] memory"
                                    }
                                  },
                                  "id": 2130,
                                  "indexExpression": {
                                    "id": 2129,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2107,
                                    "src": "16198:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "16190:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_BetInfo_$965_memory_ptr",
                                    "typeString": "struct MetaFlokiPrediction.BetInfo memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 2131,
                                      "name": "ledger",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 915,
                                      "src": "16203:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_BetInfo_$965_storage_$_$",
                                        "typeString": "mapping(uint256 => mapping(address => struct MetaFlokiPrediction.BetInfo storage ref))"
                                      }
                                    },
                                    "id": 2135,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 2132,
                                        "name": "values",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2087,
                                        "src": "16210:6:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 2134,
                                      "indexExpression": {
                                        "id": 2133,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2107,
                                        "src": "16217:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16210:9:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "16203:17:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BetInfo_$965_storage_$",
                                      "typeString": "mapping(address => struct MetaFlokiPrediction.BetInfo storage ref)"
                                    }
                                  },
                                  "id": 2137,
                                  "indexExpression": {
                                    "id": 2136,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2044,
                                    "src": "16221:4:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16203:23:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_BetInfo_$965_storage",
                                    "typeString": "struct MetaFlokiPrediction.BetInfo storage ref"
                                  }
                                },
                                "src": "16190:36:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BetInfo_$965_memory_ptr",
                                  "typeString": "struct MetaFlokiPrediction.BetInfo memory"
                                }
                              },
                              "id": 2139,
                              "nodeType": "ExpressionStatement",
                              "src": "16190:36:7"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2110,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2107,
                            "src": "16105:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 2111,
                            "name": "length",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2061,
                            "src": "16109:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16105:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2141,
                        "initializationExpression": {
                          "assignments": [
                            2107
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2107,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "scope": 2141,
                              "src": "16090:9:7",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2106,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "16090:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2109,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16102:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "16090:13:7"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 2114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "16117:3:7",
                            "subExpression": {
                              "id": 2113,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2107,
                              "src": "16117:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2115,
                          "nodeType": "ExpressionStatement",
                          "src": "16117:3:7"
                        },
                        "nodeType": "ForStatement",
                        "src": "16085:152:7"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 2142,
                              "name": "values",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2087,
                              "src": "16255:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 2143,
                              "name": "betInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2098,
                              "src": "16263:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_BetInfo_$965_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct MetaFlokiPrediction.BetInfo memory[] memory"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2144,
                                "name": "cursor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2046,
                                "src": "16272:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 2145,
                                "name": "length",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2061,
                                "src": "16281:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "16272:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 2147,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "16254:34:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_struct$_BetInfo_$965_memory_ptr_$dyn_memory_ptr_$_t_uint256_$",
                            "typeString": "tuple(uint256[] memory,struct MetaFlokiPrediction.BetInfo memory[] memory,uint256)"
                          }
                        },
                        "functionReturnParameters": 2059,
                        "id": 2148,
                        "nodeType": "Return",
                        "src": "16247:41:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2042,
                    "nodeType": "StructuredDocumentation",
                    "src": "15373:187:7",
                    "text": " @notice Returns round epochs and bet information for a user that has participated\n @param user: user address\n @param cursor: cursor\n @param size: size"
                  },
                  "functionSelector": "951fd600",
                  "id": 2150,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUserRounds",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2049,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2044,
                        "mutability": "mutable",
                        "name": "user",
                        "nodeType": "VariableDeclaration",
                        "scope": 2150,
                        "src": "15597:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2043,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15597:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2046,
                        "mutability": "mutable",
                        "name": "cursor",
                        "nodeType": "VariableDeclaration",
                        "scope": 2150,
                        "src": "15619:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2045,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15619:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2048,
                        "mutability": "mutable",
                        "name": "size",
                        "nodeType": "VariableDeclaration",
                        "scope": 2150,
                        "src": "15643:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2047,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15643:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15587:74:7"
                  },
                  "returnParameters": {
                    "id": 2059,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2052,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2150,
                        "src": "15722:16:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2050,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "15722:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2051,
                          "nodeType": "ArrayTypeName",
                          "src": "15722:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2056,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2150,
                        "src": "15752:16:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_BetInfo_$965_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct MetaFlokiPrediction.BetInfo[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2054,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2053,
                              "name": "BetInfo",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 965,
                              "src": "15752:7:7"
                            },
                            "referencedDeclaration": 965,
                            "src": "15752:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BetInfo_$965_storage_ptr",
                              "typeString": "struct MetaFlokiPrediction.BetInfo"
                            }
                          },
                          "id": 2055,
                          "nodeType": "ArrayTypeName",
                          "src": "15752:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_BetInfo_$965_storage_$dyn_storage_ptr",
                            "typeString": "struct MetaFlokiPrediction.BetInfo[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2058,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2150,
                        "src": "15782:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2057,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15782:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15708:91:7"
                  },
                  "scope": 2823,
                  "src": "15565:730:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2163,
                    "nodeType": "Block",
                    "src": "16468:47:7",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2158,
                              "name": "userRounds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 925,
                              "src": "16485:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                "typeString": "mapping(address => uint256[] storage ref)"
                              }
                            },
                            "id": 2160,
                            "indexExpression": {
                              "id": 2159,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2153,
                              "src": "16496:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16485:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 2161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "16485:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2157,
                        "id": 2162,
                        "nodeType": "Return",
                        "src": "16478:30:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2151,
                    "nodeType": "StructuredDocumentation",
                    "src": "16301:87:7",
                    "text": " @notice Returns round epochs length\n @param user: user address"
                  },
                  "functionSelector": "273867d4",
                  "id": 2164,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUserRoundsLength",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2154,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2153,
                        "mutability": "mutable",
                        "name": "user",
                        "nodeType": "VariableDeclaration",
                        "scope": 2164,
                        "src": "16422:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2152,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16422:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16421:14:7"
                  },
                  "returnParameters": {
                    "id": 2157,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2156,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2164,
                        "src": "16459:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2155,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16459:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16458:9:7"
                  },
                  "scope": 2823,
                  "src": "16393:122:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2238,
                    "nodeType": "Block",
                    "src": "16746:526:7",
                    "statements": [
                      {
                        "assignments": [
                          2176
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2176,
                            "mutability": "mutable",
                            "name": "betInfo",
                            "nodeType": "VariableDeclaration",
                            "scope": 2238,
                            "src": "16756:22:7",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BetInfo_$965_memory_ptr",
                              "typeString": "struct MetaFlokiPrediction.BetInfo"
                            },
                            "typeName": {
                              "id": 2175,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2174,
                                "name": "BetInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 965,
                                "src": "16756:7:7"
                              },
                              "referencedDeclaration": 965,
                              "src": "16756:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BetInfo_$965_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.BetInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2182,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2177,
                              "name": "ledger",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 915,
                              "src": "16781:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_BetInfo_$965_storage_$_$",
                                "typeString": "mapping(uint256 => mapping(address => struct MetaFlokiPrediction.BetInfo storage ref))"
                              }
                            },
                            "id": 2179,
                            "indexExpression": {
                              "id": 2178,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2167,
                              "src": "16788:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16781:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BetInfo_$965_storage_$",
                              "typeString": "mapping(address => struct MetaFlokiPrediction.BetInfo storage ref)"
                            }
                          },
                          "id": 2181,
                          "indexExpression": {
                            "id": 2180,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2169,
                            "src": "16795:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16781:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BetInfo_$965_storage",
                            "typeString": "struct MetaFlokiPrediction.BetInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16756:44:7"
                      },
                      {
                        "assignments": [
                          2185
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2185,
                            "mutability": "mutable",
                            "name": "round",
                            "nodeType": "VariableDeclaration",
                            "scope": 2238,
                            "src": "16810:18:7",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Round_$957_memory_ptr",
                              "typeString": "struct MetaFlokiPrediction.Round"
                            },
                            "typeName": {
                              "id": 2184,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2183,
                                "name": "Round",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 957,
                                "src": "16810:5:7"
                              },
                              "referencedDeclaration": 957,
                              "src": "16810:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.Round"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2189,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2186,
                            "name": "rounds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 920,
                            "src": "16831:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$957_storage_$",
                              "typeString": "mapping(uint256 => struct MetaFlokiPrediction.Round storage ref)"
                            }
                          },
                          "id": 2188,
                          "indexExpression": {
                            "id": 2187,
                            "name": "epoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2167,
                            "src": "16838:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16831:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Round_$957_storage",
                            "typeString": "struct MetaFlokiPrediction.Round storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16810:34:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 2194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2190,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2185,
                              "src": "16858:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$957_memory_ptr",
                                "typeString": "struct MetaFlokiPrediction.Round memory"
                              }
                            },
                            "id": 2191,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lockPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 938,
                            "src": "16858:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 2192,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2185,
                              "src": "16877:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$957_memory_ptr",
                                "typeString": "struct MetaFlokiPrediction.Round memory"
                              }
                            },
                            "id": 2193,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "closePrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 940,
                            "src": "16877:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "16858:35:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2198,
                        "nodeType": "IfStatement",
                        "src": "16854:78:7",
                        "trueBody": {
                          "id": 2197,
                          "nodeType": "Block",
                          "src": "16895:37:7",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 2195,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16916:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 2173,
                              "id": 2196,
                              "nodeType": "Return",
                              "src": "16909:12:7"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2205,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2199,
                                  "name": "round",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2185,
                                  "src": "16960:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Round_$957_memory_ptr",
                                    "typeString": "struct MetaFlokiPrediction.Round memory"
                                  }
                                },
                                "id": 2200,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "oracleCalled",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 956,
                                "src": "16960:18:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2204,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2201,
                                    "name": "betInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2176,
                                    "src": "16994:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BetInfo_$965_memory_ptr",
                                      "typeString": "struct MetaFlokiPrediction.BetInfo memory"
                                    }
                                  },
                                  "id": 2202,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 962,
                                  "src": "16994:14:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2203,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17012:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "16994:19:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "16960:53:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "id": 2208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "17029:16:7",
                              "subExpression": {
                                "expression": {
                                  "id": 2206,
                                  "name": "betInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2176,
                                  "src": "17030:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_BetInfo_$965_memory_ptr",
                                    "typeString": "struct MetaFlokiPrediction.BetInfo memory"
                                  }
                                },
                                "id": 2207,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "claimed",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 964,
                                "src": "17030:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "16960:85:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 2234,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 2220,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        },
                                        "id": 2214,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 2210,
                                            "name": "round",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2185,
                                            "src": "17063:5:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Round_$957_memory_ptr",
                                              "typeString": "struct MetaFlokiPrediction.Round memory"
                                            }
                                          },
                                          "id": 2211,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "closePrice",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 940,
                                          "src": "17063:16:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 2212,
                                            "name": "round",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2185,
                                            "src": "17082:5:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Round_$957_memory_ptr",
                                              "typeString": "struct MetaFlokiPrediction.Round memory"
                                            }
                                          },
                                          "id": 2213,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "lockPrice",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 938,
                                          "src": "17082:15:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        },
                                        "src": "17063:34:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&&",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_enum$_Position_$928",
                                          "typeString": "enum MetaFlokiPrediction.Position"
                                        },
                                        "id": 2219,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 2215,
                                            "name": "betInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2176,
                                            "src": "17117:7:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_BetInfo_$965_memory_ptr",
                                              "typeString": "struct MetaFlokiPrediction.BetInfo memory"
                                            }
                                          },
                                          "id": 2216,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "position",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 960,
                                          "src": "17117:16:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Position_$928",
                                            "typeString": "enum MetaFlokiPrediction.Position"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 2217,
                                            "name": "Position",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 928,
                                            "src": "17137:8:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_Position_$928_$",
                                              "typeString": "type(enum MetaFlokiPrediction.Position)"
                                            }
                                          },
                                          "id": 2218,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "Bull",
                                          "nodeType": "MemberAccess",
                                          "src": "17137:13:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Position_$928",
                                            "typeString": "enum MetaFlokiPrediction.Position"
                                          }
                                        },
                                        "src": "17117:33:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "17063:87:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "id": 2221,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "17062:89:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 2232,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        },
                                        "id": 2226,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 2222,
                                            "name": "round",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2185,
                                            "src": "17172:5:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Round_$957_memory_ptr",
                                              "typeString": "struct MetaFlokiPrediction.Round memory"
                                            }
                                          },
                                          "id": 2223,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "closePrice",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 940,
                                          "src": "17172:16:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 2224,
                                            "name": "round",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2185,
                                            "src": "17191:5:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Round_$957_memory_ptr",
                                              "typeString": "struct MetaFlokiPrediction.Round memory"
                                            }
                                          },
                                          "id": 2225,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "lockPrice",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 938,
                                          "src": "17191:15:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        },
                                        "src": "17172:34:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&&",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_enum$_Position_$928",
                                          "typeString": "enum MetaFlokiPrediction.Position"
                                        },
                                        "id": 2231,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 2227,
                                            "name": "betInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2176,
                                            "src": "17230:7:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_BetInfo_$965_memory_ptr",
                                              "typeString": "struct MetaFlokiPrediction.BetInfo memory"
                                            }
                                          },
                                          "id": 2228,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "position",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 960,
                                          "src": "17230:16:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Position_$928",
                                            "typeString": "enum MetaFlokiPrediction.Position"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 2229,
                                            "name": "Position",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 928,
                                            "src": "17250:8:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_Position_$928_$",
                                              "typeString": "type(enum MetaFlokiPrediction.Position)"
                                            }
                                          },
                                          "id": 2230,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "Bear",
                                          "nodeType": "MemberAccess",
                                          "src": "17250:13:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Position_$928",
                                            "typeString": "enum MetaFlokiPrediction.Position"
                                          }
                                        },
                                        "src": "17230:33:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "17172:91:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "id": 2233,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "17171:93:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "17062:202:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 2235,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "17061:204:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "16960:305:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 2173,
                        "id": 2237,
                        "nodeType": "Return",
                        "src": "16941:324:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2165,
                    "nodeType": "StructuredDocumentation",
                    "src": "16521:145:7",
                    "text": " @notice Get the claimable stats of specific epoch and user account\n @param epoch: epoch\n @param user: user address"
                  },
                  "functionSelector": "a0c7f71c",
                  "id": 2239,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "claimable",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2170,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2167,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nodeType": "VariableDeclaration",
                        "scope": 2239,
                        "src": "16690:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2166,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16690:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2169,
                        "mutability": "mutable",
                        "name": "user",
                        "nodeType": "VariableDeclaration",
                        "scope": 2239,
                        "src": "16705:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2168,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16705:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16689:29:7"
                  },
                  "returnParameters": {
                    "id": 2173,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2172,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2239,
                        "src": "16740:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2171,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "16740:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16739:6:7"
                  },
                  "scope": 2823,
                  "src": "16671:601:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2286,
                    "nodeType": "Block",
                    "src": "17533:290:7",
                    "statements": [
                      {
                        "assignments": [
                          2251
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2251,
                            "mutability": "mutable",
                            "name": "betInfo",
                            "nodeType": "VariableDeclaration",
                            "scope": 2286,
                            "src": "17543:22:7",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BetInfo_$965_memory_ptr",
                              "typeString": "struct MetaFlokiPrediction.BetInfo"
                            },
                            "typeName": {
                              "id": 2250,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2249,
                                "name": "BetInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 965,
                                "src": "17543:7:7"
                              },
                              "referencedDeclaration": 965,
                              "src": "17543:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BetInfo_$965_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.BetInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2257,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2252,
                              "name": "ledger",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 915,
                              "src": "17568:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_BetInfo_$965_storage_$_$",
                                "typeString": "mapping(uint256 => mapping(address => struct MetaFlokiPrediction.BetInfo storage ref))"
                              }
                            },
                            "id": 2254,
                            "indexExpression": {
                              "id": 2253,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2242,
                              "src": "17575:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17568:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BetInfo_$965_storage_$",
                              "typeString": "mapping(address => struct MetaFlokiPrediction.BetInfo storage ref)"
                            }
                          },
                          "id": 2256,
                          "indexExpression": {
                            "id": 2255,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2244,
                            "src": "17582:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17568:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BetInfo_$965_storage",
                            "typeString": "struct MetaFlokiPrediction.BetInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17543:44:7"
                      },
                      {
                        "assignments": [
                          2260
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2260,
                            "mutability": "mutable",
                            "name": "round",
                            "nodeType": "VariableDeclaration",
                            "scope": 2286,
                            "src": "17597:18:7",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Round_$957_memory_ptr",
                              "typeString": "struct MetaFlokiPrediction.Round"
                            },
                            "typeName": {
                              "id": 2259,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2258,
                                "name": "Round",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 957,
                                "src": "17597:5:7"
                              },
                              "referencedDeclaration": 957,
                              "src": "17597:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.Round"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2264,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2261,
                            "name": "rounds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 920,
                            "src": "17618:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$957_storage_$",
                              "typeString": "mapping(uint256 => struct MetaFlokiPrediction.Round storage ref)"
                            }
                          },
                          "id": 2263,
                          "indexExpression": {
                            "id": 2262,
                            "name": "epoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2242,
                            "src": "17625:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17618:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Round_$957_storage",
                            "typeString": "struct MetaFlokiPrediction.Round storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17597:34:7"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2271,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "17660:19:7",
                                "subExpression": {
                                  "expression": {
                                    "id": 2265,
                                    "name": "round",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2260,
                                    "src": "17661:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Round_$957_memory_ptr",
                                      "typeString": "struct MetaFlokiPrediction.Round memory"
                                    }
                                  },
                                  "id": 2266,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "oracleCalled",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 956,
                                  "src": "17661:18:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "id": 2270,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "17695:16:7",
                                "subExpression": {
                                  "expression": {
                                    "id": 2268,
                                    "name": "betInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2251,
                                    "src": "17696:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BetInfo_$965_memory_ptr",
                                      "typeString": "struct MetaFlokiPrediction.BetInfo memory"
                                    }
                                  },
                                  "id": 2269,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "claimed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 964,
                                  "src": "17696:15:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "17660:51:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2278,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2272,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "17727:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2273,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "17727:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2277,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2274,
                                    "name": "round",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2260,
                                    "src": "17745:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Round_$957_memory_ptr",
                                      "typeString": "struct MetaFlokiPrediction.Round memory"
                                    }
                                  },
                                  "id": 2275,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "closeTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 936,
                                  "src": "17745:20:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 2276,
                                  "name": "bufferSeconds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 891,
                                  "src": "17768:13:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "17745:36:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "17727:54:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "17660:121:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2280,
                                "name": "betInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2251,
                                "src": "17797:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BetInfo_$965_memory_ptr",
                                  "typeString": "struct MetaFlokiPrediction.BetInfo memory"
                                }
                              },
                              "id": 2281,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 962,
                              "src": "17797:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2282,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17815:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "17797:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "17660:156:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 2248,
                        "id": 2285,
                        "nodeType": "Return",
                        "src": "17641:175:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2240,
                    "nodeType": "StructuredDocumentation",
                    "src": "17278:146:7",
                    "text": " @notice Get the refundable stats of specific epoch and user account\n @param epoch: epoch\n @param user: user address"
                  },
                  "functionSelector": "7bf41254",
                  "id": 2287,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "refundable",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2245,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2242,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nodeType": "VariableDeclaration",
                        "scope": 2287,
                        "src": "17449:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2241,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17449:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2244,
                        "mutability": "mutable",
                        "name": "user",
                        "nodeType": "VariableDeclaration",
                        "scope": 2287,
                        "src": "17464:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2243,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17464:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17448:29:7"
                  },
                  "returnParameters": {
                    "id": 2248,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2247,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2287,
                        "src": "17523:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2246,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "17523:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17522:6:7"
                  },
                  "scope": 2823,
                  "src": "17429:394:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2421,
                    "nodeType": "Block",
                    "src": "17966:1314:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2299,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2294,
                                      "name": "rounds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 920,
                                      "src": "17997:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$957_storage_$",
                                        "typeString": "mapping(uint256 => struct MetaFlokiPrediction.Round storage ref)"
                                      }
                                    },
                                    "id": 2296,
                                    "indexExpression": {
                                      "id": 2295,
                                      "name": "epoch",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2290,
                                      "src": "18004:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "17997:13:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Round_$957_storage",
                                      "typeString": "struct MetaFlokiPrediction.Round storage ref"
                                    }
                                  },
                                  "id": 2297,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "rewardBaseCalAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 952,
                                  "src": "17997:33:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2298,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "18034:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "17997:38:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2305,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2300,
                                      "name": "rounds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 920,
                                      "src": "18055:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$957_storage_$",
                                        "typeString": "mapping(uint256 => struct MetaFlokiPrediction.Round storage ref)"
                                      }
                                    },
                                    "id": 2302,
                                    "indexExpression": {
                                      "id": 2301,
                                      "name": "epoch",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2290,
                                      "src": "18062:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "18055:13:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Round_$957_storage",
                                      "typeString": "struct MetaFlokiPrediction.Round storage ref"
                                    }
                                  },
                                  "id": 2303,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "rewardAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 954,
                                  "src": "18055:26:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2304,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "18085:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "18055:31:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "17997:89:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "526577617264732063616c63756c61746564",
                              "id": 2307,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18100:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5d7676630e3121bb49b4e3f5dacd5e86304058e320b99ad1413edecdac7e31f1",
                                "typeString": "literal_string \"Rewards calculated\""
                              },
                              "value": "Rewards calculated"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5d7676630e3121bb49b4e3f5dacd5e86304058e320b99ad1413edecdac7e31f1",
                                "typeString": "literal_string \"Rewards calculated\""
                              }
                            ],
                            "id": 2293,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "17976:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17976:154:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2309,
                        "nodeType": "ExpressionStatement",
                        "src": "17976:154:7"
                      },
                      {
                        "assignments": [
                          2312
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2312,
                            "mutability": "mutable",
                            "name": "round",
                            "nodeType": "VariableDeclaration",
                            "scope": 2421,
                            "src": "18140:19:7",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                              "typeString": "struct MetaFlokiPrediction.Round"
                            },
                            "typeName": {
                              "id": 2311,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2310,
                                "name": "Round",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 957,
                                "src": "18140:5:7"
                              },
                              "referencedDeclaration": 957,
                              "src": "18140:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.Round"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2316,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2313,
                            "name": "rounds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 920,
                            "src": "18162:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$957_storage_$",
                              "typeString": "mapping(uint256 => struct MetaFlokiPrediction.Round storage ref)"
                            }
                          },
                          "id": 2315,
                          "indexExpression": {
                            "id": 2314,
                            "name": "epoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2290,
                            "src": "18169:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "18162:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Round_$957_storage",
                            "typeString": "struct MetaFlokiPrediction.Round storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18140:35:7"
                      },
                      {
                        "assignments": [
                          2318
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2318,
                            "mutability": "mutable",
                            "name": "rewardBaseCalAmount",
                            "nodeType": "VariableDeclaration",
                            "scope": 2421,
                            "src": "18185:27:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2317,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "18185:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2319,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18185:27:7"
                      },
                      {
                        "assignments": [
                          2321
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2321,
                            "mutability": "mutable",
                            "name": "treasuryAmt",
                            "nodeType": "VariableDeclaration",
                            "scope": 2421,
                            "src": "18222:19:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2320,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "18222:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2322,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18222:19:7"
                      },
                      {
                        "assignments": [
                          2324
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2324,
                            "mutability": "mutable",
                            "name": "rewardAmount",
                            "nodeType": "VariableDeclaration",
                            "scope": 2421,
                            "src": "18251:20:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2323,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "18251:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2325,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18251:20:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 2330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2326,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2312,
                              "src": "18307:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                              }
                            },
                            "id": 2327,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "closePrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 940,
                            "src": "18307:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "expression": {
                              "id": 2328,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2312,
                              "src": "18326:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                              }
                            },
                            "id": 2329,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lockPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 938,
                            "src": "18326:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "18307:34:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 2358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2354,
                                "name": "round",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2312,
                                "src": "18574:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                  "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                                }
                              },
                              "id": 2355,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "closePrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 940,
                              "src": "18574:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "expression": {
                                "id": 2356,
                                "name": "round",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2312,
                                "src": "18593:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                  "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                                }
                              },
                              "id": 2357,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lockPrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 938,
                              "src": "18593:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "src": "18574:34:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 2395,
                            "nodeType": "Block",
                            "src": "18838:123:7",
                            "statements": [
                              {
                                "expression": {
                                  "id": 2384,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 2382,
                                    "name": "rewardBaseCalAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2318,
                                    "src": "18852:19:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "30",
                                    "id": 2383,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "18874:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "18852:23:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2385,
                                "nodeType": "ExpressionStatement",
                                "src": "18852:23:7"
                              },
                              {
                                "expression": {
                                  "id": 2388,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 2386,
                                    "name": "rewardAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2324,
                                    "src": "18889:12:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "30",
                                    "id": 2387,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "18904:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "18889:16:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2389,
                                "nodeType": "ExpressionStatement",
                                "src": "18889:16:7"
                              },
                              {
                                "expression": {
                                  "id": 2393,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 2390,
                                    "name": "treasuryAmt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2321,
                                    "src": "18919:11:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "expression": {
                                      "id": 2391,
                                      "name": "round",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2312,
                                      "src": "18933:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                        "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                                      }
                                    },
                                    "id": 2392,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "totalAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 946,
                                    "src": "18933:17:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "18919:31:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2394,
                                "nodeType": "ExpressionStatement",
                                "src": "18919:31:7"
                              }
                            ]
                          },
                          "id": 2396,
                          "nodeType": "IfStatement",
                          "src": "18570:391:7",
                          "trueBody": {
                            "id": 2381,
                            "nodeType": "Block",
                            "src": "18610:192:7",
                            "statements": [
                              {
                                "expression": {
                                  "id": 2362,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 2359,
                                    "name": "rewardBaseCalAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2318,
                                    "src": "18624:19:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "expression": {
                                      "id": 2360,
                                      "name": "round",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2312,
                                      "src": "18646:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                        "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                                      }
                                    },
                                    "id": 2361,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "bearAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 950,
                                    "src": "18646:16:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "18624:38:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2363,
                                "nodeType": "ExpressionStatement",
                                "src": "18624:38:7"
                              },
                              {
                                "expression": {
                                  "id": 2372,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 2364,
                                    "name": "treasuryAmt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2321,
                                    "src": "18676:11:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2371,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 2368,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 2365,
                                              "name": "round",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2312,
                                              "src": "18691:5:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                                "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                                              }
                                            },
                                            "id": 2366,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "totalAmount",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 946,
                                            "src": "18691:17:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "id": 2367,
                                            "name": "treasuryFee",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 897,
                                            "src": "18711:11:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "18691:31:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 2369,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "18690:33:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "hexValue": "3130303030",
                                      "id": 2370,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "18726:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10000_by_1",
                                        "typeString": "int_const 10000"
                                      },
                                      "value": "10000"
                                    },
                                    "src": "18690:41:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "18676:55:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2373,
                                "nodeType": "ExpressionStatement",
                                "src": "18676:55:7"
                              },
                              {
                                "expression": {
                                  "id": 2379,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 2374,
                                    "name": "rewardAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2324,
                                    "src": "18745:12:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2378,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2375,
                                        "name": "round",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2312,
                                        "src": "18760:5:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                          "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                                        }
                                      },
                                      "id": 2376,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "totalAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 946,
                                      "src": "18760:17:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 2377,
                                      "name": "treasuryAmt",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2321,
                                      "src": "18780:11:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "18760:31:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "18745:46:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2380,
                                "nodeType": "ExpressionStatement",
                                "src": "18745:46:7"
                              }
                            ]
                          }
                        },
                        "id": 2397,
                        "nodeType": "IfStatement",
                        "src": "18303:658:7",
                        "trueBody": {
                          "id": 2353,
                          "nodeType": "Block",
                          "src": "18343:192:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 2334,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2331,
                                  "name": "rewardBaseCalAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2318,
                                  "src": "18357:19:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 2332,
                                    "name": "round",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2312,
                                    "src": "18379:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                      "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                                    }
                                  },
                                  "id": 2333,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "bullAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 948,
                                  "src": "18379:16:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "18357:38:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2335,
                              "nodeType": "ExpressionStatement",
                              "src": "18357:38:7"
                            },
                            {
                              "expression": {
                                "id": 2344,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2336,
                                  "name": "treasuryAmt",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2321,
                                  "src": "18409:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2343,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2340,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 2337,
                                            "name": "round",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2312,
                                            "src": "18424:5:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                              "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                                            }
                                          },
                                          "id": 2338,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "totalAmount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 946,
                                          "src": "18424:17:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "id": 2339,
                                          "name": "treasuryFee",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 897,
                                          "src": "18444:11:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "18424:31:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2341,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "18423:33:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "hexValue": "3130303030",
                                    "id": 2342,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "18459:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10000_by_1",
                                      "typeString": "int_const 10000"
                                    },
                                    "value": "10000"
                                  },
                                  "src": "18423:41:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "18409:55:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2345,
                              "nodeType": "ExpressionStatement",
                              "src": "18409:55:7"
                            },
                            {
                              "expression": {
                                "id": 2351,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2346,
                                  "name": "rewardAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2324,
                                  "src": "18478:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2350,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 2347,
                                      "name": "round",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2312,
                                      "src": "18493:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                        "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                                      }
                                    },
                                    "id": 2348,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "totalAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 946,
                                    "src": "18493:17:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 2349,
                                    "name": "treasuryAmt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2321,
                                    "src": "18513:11:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "18493:31:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "18478:46:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2352,
                              "nodeType": "ExpressionStatement",
                              "src": "18478:46:7"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 2402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2398,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2312,
                              "src": "18970:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                              }
                            },
                            "id": 2400,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "rewardBaseCalAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 952,
                            "src": "18970:25:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2401,
                            "name": "rewardBaseCalAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2318,
                            "src": "18998:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18970:47:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2403,
                        "nodeType": "ExpressionStatement",
                        "src": "18970:47:7"
                      },
                      {
                        "expression": {
                          "id": 2408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2404,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2312,
                              "src": "19027:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                              }
                            },
                            "id": 2406,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "rewardAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 954,
                            "src": "19027:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2407,
                            "name": "rewardAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2324,
                            "src": "19048:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19027:33:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2409,
                        "nodeType": "ExpressionStatement",
                        "src": "19027:33:7"
                      },
                      {
                        "expression": {
                          "id": 2412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2410,
                            "name": "treasuryAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 899,
                            "src": "19098:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 2411,
                            "name": "treasuryAmt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2321,
                            "src": "19116:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19098:29:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2413,
                        "nodeType": "ExpressionStatement",
                        "src": "19098:29:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2415,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2290,
                              "src": "19174:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2416,
                              "name": "rewardBaseCalAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2318,
                              "src": "19193:19:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2417,
                              "name": "rewardAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2324,
                              "src": "19226:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2418,
                              "name": "treasuryAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2321,
                              "src": "19252:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2414,
                            "name": "RewardsCalculated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1053,
                            "src": "19143:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,uint256)"
                            }
                          },
                          "id": 2419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19143:130:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2420,
                        "nodeType": "EmitStatement",
                        "src": "19138:135:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2288,
                    "nodeType": "StructuredDocumentation",
                    "src": "17829:81:7",
                    "text": " @notice Calculate rewards for round\n @param epoch: epoch"
                  },
                  "id": 2422,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_calculateRewards",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2291,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2290,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nodeType": "VariableDeclaration",
                        "scope": 2422,
                        "src": "17942:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2289,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17942:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17941:15:7"
                  },
                  "returnParameters": {
                    "id": 2292,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17966:0:7"
                  },
                  "scope": 2823,
                  "src": "17915:1365:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2498,
                    "nodeType": "Block",
                    "src": "19533:650:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2438,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2433,
                                    "name": "rounds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 920,
                                    "src": "19564:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$957_storage_$",
                                      "typeString": "mapping(uint256 => struct MetaFlokiPrediction.Round storage ref)"
                                    }
                                  },
                                  "id": 2435,
                                  "indexExpression": {
                                    "id": 2434,
                                    "name": "epoch",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2425,
                                    "src": "19571:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "19564:13:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Round_$957_storage",
                                    "typeString": "struct MetaFlokiPrediction.Round storage ref"
                                  }
                                },
                                "id": 2436,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lockTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 934,
                                "src": "19564:27:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2437,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19595:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "19564:32:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206f6e6c7920656e6420726f756e6420616674657220726f756e6420686173206c6f636b6564",
                              "id": 2439,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19610:43:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a41dd959f6b8d59908b2f9cf13a8d0d10d9949d4d11b448e785beca06fef42a1",
                                "typeString": "literal_string \"Can only end round after round has locked\""
                              },
                              "value": "Can only end round after round has locked"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a41dd959f6b8d59908b2f9cf13a8d0d10d9949d4d11b448e785beca06fef42a1",
                                "typeString": "literal_string \"Can only end round after round has locked\""
                              }
                            ],
                            "id": 2432,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "19543:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19543:120:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2441,
                        "nodeType": "ExpressionStatement",
                        "src": "19543:120:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2443,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "19694:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2444,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "19694:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2445,
                                    "name": "rounds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 920,
                                    "src": "19713:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$957_storage_$",
                                      "typeString": "mapping(uint256 => struct MetaFlokiPrediction.Round storage ref)"
                                    }
                                  },
                                  "id": 2447,
                                  "indexExpression": {
                                    "id": 2446,
                                    "name": "epoch",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2425,
                                    "src": "19720:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "19713:13:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Round_$957_storage",
                                    "typeString": "struct MetaFlokiPrediction.Round storage ref"
                                  }
                                },
                                "id": 2448,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "closeTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 936,
                                "src": "19713:28:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "19694:47:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206f6e6c7920656e6420726f756e6420616674657220636c6f736554696d657374616d70",
                              "id": 2450,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19755:41:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5aeb1b443dcf74ebb83f5c8c495d0ea37b2ffe70aeaa05c678145c1dbd7a2459",
                                "typeString": "literal_string \"Can only end round after closeTimestamp\""
                              },
                              "value": "Can only end round after closeTimestamp"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5aeb1b443dcf74ebb83f5c8c495d0ea37b2ffe70aeaa05c678145c1dbd7a2459",
                                "typeString": "literal_string \"Can only end round after closeTimestamp\""
                              }
                            ],
                            "id": 2442,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "19673:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19673:133:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2452,
                        "nodeType": "ExpressionStatement",
                        "src": "19673:133:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2462,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2454,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "19837:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2455,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "19837:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2461,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2456,
                                      "name": "rounds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 920,
                                      "src": "19856:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$957_storage_$",
                                        "typeString": "mapping(uint256 => struct MetaFlokiPrediction.Round storage ref)"
                                      }
                                    },
                                    "id": 2458,
                                    "indexExpression": {
                                      "id": 2457,
                                      "name": "epoch",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2425,
                                      "src": "19863:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "19856:13:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Round_$957_storage",
                                      "typeString": "struct MetaFlokiPrediction.Round storage ref"
                                    }
                                  },
                                  "id": 2459,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "closeTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 936,
                                  "src": "19856:28:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 2460,
                                  "name": "bufferSeconds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 891,
                                  "src": "19887:13:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "19856:44:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "19837:63:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206f6e6c7920656e6420726f756e642077697468696e206275666665725365636f6e6473",
                              "id": 2463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19914:41:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_305b29a5e5f4ae7fa6be0480743fbd9163344a67bcc8501056392462fe190019",
                                "typeString": "literal_string \"Can only end round within bufferSeconds\""
                              },
                              "value": "Can only end round within bufferSeconds"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_305b29a5e5f4ae7fa6be0480743fbd9163344a67bcc8501056392462fe190019",
                                "typeString": "literal_string \"Can only end round within bufferSeconds\""
                              }
                            ],
                            "id": 2453,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "19816:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19816:149:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2465,
                        "nodeType": "ExpressionStatement",
                        "src": "19816:149:7"
                      },
                      {
                        "assignments": [
                          2468
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2468,
                            "mutability": "mutable",
                            "name": "round",
                            "nodeType": "VariableDeclaration",
                            "scope": 2498,
                            "src": "19975:19:7",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                              "typeString": "struct MetaFlokiPrediction.Round"
                            },
                            "typeName": {
                              "id": 2467,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2466,
                                "name": "Round",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 957,
                                "src": "19975:5:7"
                              },
                              "referencedDeclaration": 957,
                              "src": "19975:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.Round"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2472,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2469,
                            "name": "rounds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 920,
                            "src": "19997:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$957_storage_$",
                              "typeString": "mapping(uint256 => struct MetaFlokiPrediction.Round storage ref)"
                            }
                          },
                          "id": 2471,
                          "indexExpression": {
                            "id": 2470,
                            "name": "epoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2425,
                            "src": "20004:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "19997:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Round_$957_storage",
                            "typeString": "struct MetaFlokiPrediction.Round storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19975:35:7"
                      },
                      {
                        "expression": {
                          "id": 2477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2473,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2468,
                              "src": "20020:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                              }
                            },
                            "id": 2475,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "closePrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 940,
                            "src": "20020:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2476,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2429,
                            "src": "20039:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "20020:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 2478,
                        "nodeType": "ExpressionStatement",
                        "src": "20020:24:7"
                      },
                      {
                        "expression": {
                          "id": 2483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2479,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2468,
                              "src": "20054:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                              }
                            },
                            "id": 2481,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "closeOracleId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 944,
                            "src": "20054:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2482,
                            "name": "roundId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2427,
                            "src": "20076:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20054:29:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2484,
                        "nodeType": "ExpressionStatement",
                        "src": "20054:29:7"
                      },
                      {
                        "expression": {
                          "id": 2489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2485,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2468,
                              "src": "20093:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                              }
                            },
                            "id": 2487,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "oracleCalled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 956,
                            "src": "20093:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 2488,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20114:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "20093:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2490,
                        "nodeType": "ExpressionStatement",
                        "src": "20093:25:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2492,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2425,
                              "src": "20143:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2493,
                              "name": "roundId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2427,
                              "src": "20150:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2494,
                                "name": "round",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2468,
                                "src": "20159:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                  "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                                }
                              },
                              "id": 2495,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "closePrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 940,
                              "src": "20159:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 2491,
                            "name": "EndRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 997,
                            "src": "20134:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_int256_$returns$__$",
                              "typeString": "function (uint256,uint256,int256)"
                            }
                          },
                          "id": 2496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20134:42:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2497,
                        "nodeType": "EmitStatement",
                        "src": "20129:47:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2423,
                    "nodeType": "StructuredDocumentation",
                    "src": "19286:134:7",
                    "text": " @notice End round\n @param epoch: epoch\n @param roundId: roundId\n @param price: price of the round"
                  },
                  "id": 2499,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_safeEndRound",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2430,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2425,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nodeType": "VariableDeclaration",
                        "scope": 2499,
                        "src": "19457:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2424,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19457:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2427,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nodeType": "VariableDeclaration",
                        "scope": 2499,
                        "src": "19480:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2426,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19480:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2429,
                        "mutability": "mutable",
                        "name": "price",
                        "nodeType": "VariableDeclaration",
                        "scope": 2499,
                        "src": "19505:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2428,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19505:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19447:76:7"
                  },
                  "returnParameters": {
                    "id": 2431,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "19533:0:7"
                  },
                  "scope": 2823,
                  "src": "19425:758:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2578,
                    "nodeType": "Block",
                    "src": "20438:681:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2515,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2510,
                                    "name": "rounds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 920,
                                    "src": "20469:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$957_storage_$",
                                      "typeString": "mapping(uint256 => struct MetaFlokiPrediction.Round storage ref)"
                                    }
                                  },
                                  "id": 2512,
                                  "indexExpression": {
                                    "id": 2511,
                                    "name": "epoch",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2502,
                                    "src": "20476:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "20469:13:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Round_$957_storage",
                                    "typeString": "struct MetaFlokiPrediction.Round storage ref"
                                  }
                                },
                                "id": 2513,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "startTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 932,
                                "src": "20469:28:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2514,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "20501:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "20469:33:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206f6e6c79206c6f636b20726f756e6420616674657220726f756e64206861732073746172746564",
                              "id": 2516,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20516:45:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_16f79d9e996c484c6ab868c786817e96a6590ee714435b79b344480dba01cfa6",
                                "typeString": "literal_string \"Can only lock round after round has started\""
                              },
                              "value": "Can only lock round after round has started"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_16f79d9e996c484c6ab868c786817e96a6590ee714435b79b344480dba01cfa6",
                                "typeString": "literal_string \"Can only lock round after round has started\""
                              }
                            ],
                            "id": 2509,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "20448:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20448:123:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2518,
                        "nodeType": "ExpressionStatement",
                        "src": "20448:123:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2526,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2520,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "20602:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2521,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "20602:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2522,
                                    "name": "rounds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 920,
                                    "src": "20621:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$957_storage_$",
                                      "typeString": "mapping(uint256 => struct MetaFlokiPrediction.Round storage ref)"
                                    }
                                  },
                                  "id": 2524,
                                  "indexExpression": {
                                    "id": 2523,
                                    "name": "epoch",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2502,
                                    "src": "20628:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "20621:13:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Round_$957_storage",
                                    "typeString": "struct MetaFlokiPrediction.Round storage ref"
                                  }
                                },
                                "id": 2525,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lockTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 934,
                                "src": "20621:27:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "20602:46:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206f6e6c79206c6f636b20726f756e64206166746572206c6f636b54696d657374616d70",
                              "id": 2527,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20662:41:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4615b616084e6afd7e2bfca1c1e6bf78f2c06f5fdc371de5a933a8c06c2f3c13",
                                "typeString": "literal_string \"Can only lock round after lockTimestamp\""
                              },
                              "value": "Can only lock round after lockTimestamp"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4615b616084e6afd7e2bfca1c1e6bf78f2c06f5fdc371de5a933a8c06c2f3c13",
                                "typeString": "literal_string \"Can only lock round after lockTimestamp\""
                              }
                            ],
                            "id": 2519,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "20581:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20581:132:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2529,
                        "nodeType": "ExpressionStatement",
                        "src": "20581:132:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2539,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2531,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "20744:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2532,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "20744:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2538,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2533,
                                      "name": "rounds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 920,
                                      "src": "20763:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$957_storage_$",
                                        "typeString": "mapping(uint256 => struct MetaFlokiPrediction.Round storage ref)"
                                      }
                                    },
                                    "id": 2535,
                                    "indexExpression": {
                                      "id": 2534,
                                      "name": "epoch",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2502,
                                      "src": "20770:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "20763:13:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Round_$957_storage",
                                      "typeString": "struct MetaFlokiPrediction.Round storage ref"
                                    }
                                  },
                                  "id": 2536,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "lockTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 934,
                                  "src": "20763:27:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 2537,
                                  "name": "bufferSeconds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 891,
                                  "src": "20793:13:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "20763:43:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "20744:62:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206f6e6c79206c6f636b20726f756e642077697468696e206275666665725365636f6e6473",
                              "id": 2540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20820:42:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_65d9ebfb7b417d357c54ae150ee53f546dcdaa39c58b14378727fa7829cd41f8",
                                "typeString": "literal_string \"Can only lock round within bufferSeconds\""
                              },
                              "value": "Can only lock round within bufferSeconds"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_65d9ebfb7b417d357c54ae150ee53f546dcdaa39c58b14378727fa7829cd41f8",
                                "typeString": "literal_string \"Can only lock round within bufferSeconds\""
                              }
                            ],
                            "id": 2530,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "20723:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20723:149:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2542,
                        "nodeType": "ExpressionStatement",
                        "src": "20723:149:7"
                      },
                      {
                        "assignments": [
                          2545
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2545,
                            "mutability": "mutable",
                            "name": "round",
                            "nodeType": "VariableDeclaration",
                            "scope": 2578,
                            "src": "20882:19:7",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                              "typeString": "struct MetaFlokiPrediction.Round"
                            },
                            "typeName": {
                              "id": 2544,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2543,
                                "name": "Round",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 957,
                                "src": "20882:5:7"
                              },
                              "referencedDeclaration": 957,
                              "src": "20882:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.Round"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2549,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2546,
                            "name": "rounds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 920,
                            "src": "20904:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$957_storage_$",
                              "typeString": "mapping(uint256 => struct MetaFlokiPrediction.Round storage ref)"
                            }
                          },
                          "id": 2548,
                          "indexExpression": {
                            "id": 2547,
                            "name": "epoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2502,
                            "src": "20911:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20904:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Round_$957_storage",
                            "typeString": "struct MetaFlokiPrediction.Round storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20882:35:7"
                      },
                      {
                        "expression": {
                          "id": 2557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2550,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2545,
                              "src": "20927:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                              }
                            },
                            "id": 2552,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "closeTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 936,
                            "src": "20927:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2556,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2553,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "20950:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2554,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "20950:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 2555,
                              "name": "intervalSeconds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 893,
                              "src": "20968:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "20950:33:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20927:56:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2558,
                        "nodeType": "ExpressionStatement",
                        "src": "20927:56:7"
                      },
                      {
                        "expression": {
                          "id": 2563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2559,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2545,
                              "src": "20993:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                              }
                            },
                            "id": 2561,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lockPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 938,
                            "src": "20993:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2562,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2506,
                            "src": "21011:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "20993:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 2564,
                        "nodeType": "ExpressionStatement",
                        "src": "20993:23:7"
                      },
                      {
                        "expression": {
                          "id": 2569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2565,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2545,
                              "src": "21026:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                              }
                            },
                            "id": 2567,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lockOracleId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 942,
                            "src": "21026:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2568,
                            "name": "roundId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2504,
                            "src": "21047:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21026:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2570,
                        "nodeType": "ExpressionStatement",
                        "src": "21026:28:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2572,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2502,
                              "src": "21080:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2573,
                              "name": "roundId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2504,
                              "src": "21087:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2574,
                                "name": "round",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2545,
                                "src": "21096:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                  "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                                }
                              },
                              "id": 2575,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lockPrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 938,
                              "src": "21096:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 2571,
                            "name": "LockRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1005,
                            "src": "21070:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_int256_$returns$__$",
                              "typeString": "function (uint256,uint256,int256)"
                            }
                          },
                          "id": 2576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21070:42:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2577,
                        "nodeType": "EmitStatement",
                        "src": "21065:47:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2500,
                    "nodeType": "StructuredDocumentation",
                    "src": "20189:135:7",
                    "text": " @notice Lock round\n @param epoch: epoch\n @param roundId: roundId\n @param price: price of the round"
                  },
                  "id": 2579,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_safeLockRound",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2507,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2502,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nodeType": "VariableDeclaration",
                        "scope": 2579,
                        "src": "20362:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2501,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20362:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2504,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nodeType": "VariableDeclaration",
                        "scope": 2579,
                        "src": "20385:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2503,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20385:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2506,
                        "mutability": "mutable",
                        "name": "price",
                        "nodeType": "VariableDeclaration",
                        "scope": 2579,
                        "src": "20410:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2505,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20410:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20352:76:7"
                  },
                  "returnParameters": {
                    "id": 2508,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "20438:0:7"
                  },
                  "scope": 2823,
                  "src": "20329:790:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2619,
                    "nodeType": "Block",
                    "src": "21279:460:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2586,
                              "name": "genesisStartOnce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 885,
                              "src": "21310:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206f6e6c792072756e2061667465722067656e657369735374617274526f756e6420697320747269676765726564",
                              "id": 2587,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21340:51:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_226e65b5af697b001702a7d9d66fa2076db3b23ec51e12a83cc0a19f174024ab",
                                "typeString": "literal_string \"Can only run after genesisStartRound is triggered\""
                              },
                              "value": "Can only run after genesisStartRound is triggered"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_226e65b5af697b001702a7d9d66fa2076db3b23ec51e12a83cc0a19f174024ab",
                                "typeString": "literal_string \"Can only run after genesisStartRound is triggered\""
                              }
                            ],
                            "id": 2585,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "21289:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21289:112:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2589,
                        "nodeType": "ExpressionStatement",
                        "src": "21289:112:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2598,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2591,
                                    "name": "rounds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 920,
                                    "src": "21432:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$957_storage_$",
                                      "typeString": "mapping(uint256 => struct MetaFlokiPrediction.Round storage ref)"
                                    }
                                  },
                                  "id": 2595,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2594,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2592,
                                      "name": "epoch",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2582,
                                      "src": "21439:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "32",
                                      "id": 2593,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "21447:1:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    },
                                    "src": "21439:9:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "21432:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Round_$957_storage",
                                    "typeString": "struct MetaFlokiPrediction.Round storage ref"
                                  }
                                },
                                "id": 2596,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "closeTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 936,
                                "src": "21432:32:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2597,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21468:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "21432:37:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206f6e6c7920737461727420726f756e6420616674657220726f756e64206e2d322068617320656e646564",
                              "id": 2599,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21483:48:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_25e36640e6894539ca9141c17c2fb43b389e358f68c3c034f58f90400971fe8d",
                                "typeString": "literal_string \"Can only start round after round n-2 has ended\""
                              },
                              "value": "Can only start round after round n-2 has ended"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_25e36640e6894539ca9141c17c2fb43b389e358f68c3c034f58f90400971fe8d",
                                "typeString": "literal_string \"Can only start round after round n-2 has ended\""
                              }
                            ],
                            "id": 2590,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "21411:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21411:130:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2601,
                        "nodeType": "ExpressionStatement",
                        "src": "21411:130:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2611,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2603,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "21572:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2604,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "21572:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2605,
                                    "name": "rounds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 920,
                                    "src": "21591:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$957_storage_$",
                                      "typeString": "mapping(uint256 => struct MetaFlokiPrediction.Round storage ref)"
                                    }
                                  },
                                  "id": 2609,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2608,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2606,
                                      "name": "epoch",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2582,
                                      "src": "21598:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "32",
                                      "id": 2607,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "21606:1:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    },
                                    "src": "21598:9:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "21591:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Round_$957_storage",
                                    "typeString": "struct MetaFlokiPrediction.Round storage ref"
                                  }
                                },
                                "id": 2610,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "closeTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 936,
                                "src": "21591:32:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "21572:51:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e206f6e6c79207374617274206e657720726f756e6420616674657220726f756e64206e2d3220636c6f736554696d657374616d70",
                              "id": 2612,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21637:57:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_48314e39a2428c78f4a19c0e2084c27c66b28314dadb8ba08949064279800d81",
                                "typeString": "literal_string \"Can only start new round after round n-2 closeTimestamp\""
                              },
                              "value": "Can only start new round after round n-2 closeTimestamp"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_48314e39a2428c78f4a19c0e2084c27c66b28314dadb8ba08949064279800d81",
                                "typeString": "literal_string \"Can only start new round after round n-2 closeTimestamp\""
                              }
                            ],
                            "id": 2602,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "21551:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21551:153:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2614,
                        "nodeType": "ExpressionStatement",
                        "src": "21551:153:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2616,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2582,
                              "src": "21726:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2615,
                            "name": "_startRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2701,
                            "src": "21714:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21714:18:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2618,
                        "nodeType": "ExpressionStatement",
                        "src": "21714:18:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2580,
                    "nodeType": "StructuredDocumentation",
                    "src": "21125:100:7",
                    "text": " @notice Start round\n Previous round n-2 must end\n @param epoch: epoch"
                  },
                  "id": 2620,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_safeStartRound",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2583,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2582,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nodeType": "VariableDeclaration",
                        "scope": 2620,
                        "src": "21255:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2581,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "21255:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "21254:15:7"
                  },
                  "returnParameters": {
                    "id": 2584,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "21279:0:7"
                  },
                  "scope": 2823,
                  "src": "21230:509:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2642,
                    "nodeType": "Block",
                    "src": "21963:126:7",
                    "statements": [
                      {
                        "assignments": [
                          2629,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2629,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 2642,
                            "src": "21974:12:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2628,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "21974:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 2636,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 2634,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22014:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 2630,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2623,
                                "src": "21992:2:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2631,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "21992:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 2633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 2632,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2625,
                                "src": "22007:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "21992:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 2635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21992:25:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21973:44:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2638,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2629,
                              "src": "22035:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5472616e7366657248656c7065723a204f6e655f5452414e534645525f4641494c4544",
                              "id": 2639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22044:37:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9467863e3764bbf747d24553c19d99fc49cca97052f5c00c2434168c38e42324",
                                "typeString": "literal_string \"TransferHelper: One_TRANSFER_FAILED\""
                              },
                              "value": "TransferHelper: One_TRANSFER_FAILED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9467863e3764bbf747d24553c19d99fc49cca97052f5c00c2434168c38e42324",
                                "typeString": "literal_string \"TransferHelper: One_TRANSFER_FAILED\""
                              }
                            ],
                            "id": 2637,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "22027:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22027:55:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2641,
                        "nodeType": "ExpressionStatement",
                        "src": "22027:55:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2621,
                    "nodeType": "StructuredDocumentation",
                    "src": "21745:151:7",
                    "text": " @notice Transfer One in a safe way\n @param to: address to transfer One to\n @param value: One amount to transfer (in wei)"
                  },
                  "id": 2643,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_safeTransferOne",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2626,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2623,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 2643,
                        "src": "21927:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2622,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "21927:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2625,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 2643,
                        "src": "21939:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2624,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "21939:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "21926:27:7"
                  },
                  "returnParameters": {
                    "id": 2627,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "21963:0:7"
                  },
                  "scope": 2823,
                  "src": "21901:188:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2700,
                    "nodeType": "Block",
                    "src": "22245:330:7",
                    "statements": [
                      {
                        "assignments": [
                          2651
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2651,
                            "mutability": "mutable",
                            "name": "round",
                            "nodeType": "VariableDeclaration",
                            "scope": 2700,
                            "src": "22255:19:7",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                              "typeString": "struct MetaFlokiPrediction.Round"
                            },
                            "typeName": {
                              "id": 2650,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2649,
                                "name": "Round",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 957,
                                "src": "22255:5:7"
                              },
                              "referencedDeclaration": 957,
                              "src": "22255:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.Round"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2655,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2652,
                            "name": "rounds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 920,
                            "src": "22277:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$957_storage_$",
                              "typeString": "mapping(uint256 => struct MetaFlokiPrediction.Round storage ref)"
                            }
                          },
                          "id": 2654,
                          "indexExpression": {
                            "id": 2653,
                            "name": "epoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2646,
                            "src": "22284:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "22277:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Round_$957_storage",
                            "typeString": "struct MetaFlokiPrediction.Round storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22255:35:7"
                      },
                      {
                        "expression": {
                          "id": 2661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2656,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2651,
                              "src": "22300:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                              }
                            },
                            "id": 2658,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "startTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 932,
                            "src": "22300:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2659,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "22323:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "22323:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22300:38:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2662,
                        "nodeType": "ExpressionStatement",
                        "src": "22300:38:7"
                      },
                      {
                        "expression": {
                          "id": 2670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2663,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2651,
                              "src": "22348:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                              }
                            },
                            "id": 2665,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lockTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 934,
                            "src": "22348:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2666,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "22370:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "22370:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 2668,
                              "name": "intervalSeconds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 893,
                              "src": "22388:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "22370:33:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22348:55:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2671,
                        "nodeType": "ExpressionStatement",
                        "src": "22348:55:7"
                      },
                      {
                        "expression": {
                          "id": 2682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2672,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2651,
                              "src": "22413:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                              }
                            },
                            "id": 2674,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "closeTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 936,
                            "src": "22413:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2675,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "22436:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2676,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "22436:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2679,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32",
                                    "id": 2677,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "22455:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 2678,
                                    "name": "intervalSeconds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 893,
                                    "src": "22459:15:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "22455:19:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2680,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "22454:21:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "22436:39:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22413:62:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2683,
                        "nodeType": "ExpressionStatement",
                        "src": "22413:62:7"
                      },
                      {
                        "expression": {
                          "id": 2688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2684,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2651,
                              "src": "22485:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                              }
                            },
                            "id": 2686,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "epoch",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 930,
                            "src": "22485:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2687,
                            "name": "epoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2646,
                            "src": "22499:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22485:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2689,
                        "nodeType": "ExpressionStatement",
                        "src": "22485:19:7"
                      },
                      {
                        "expression": {
                          "id": 2694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2690,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2651,
                              "src": "22514:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$957_storage_ptr",
                                "typeString": "struct MetaFlokiPrediction.Round storage pointer"
                              }
                            },
                            "id": 2692,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "totalAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 946,
                            "src": "22514:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 2693,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22534:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "22514:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2695,
                        "nodeType": "ExpressionStatement",
                        "src": "22514:21:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2697,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2646,
                              "src": "22562:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2696,
                            "name": "StartRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1057,
                            "src": "22551:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22551:17:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2699,
                        "nodeType": "EmitStatement",
                        "src": "22546:22:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2644,
                    "nodeType": "StructuredDocumentation",
                    "src": "22095:100:7",
                    "text": " @notice Start round\n Previous round n-2 must end\n @param epoch: epoch"
                  },
                  "id": 2701,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_startRound",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2647,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2646,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nodeType": "VariableDeclaration",
                        "scope": 2701,
                        "src": "22221:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2645,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "22221:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "22220:15:7"
                  },
                  "returnParameters": {
                    "id": 2648,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "22245:0:7"
                  },
                  "scope": 2823,
                  "src": "22200:375:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2739,
                    "nodeType": "Block",
                    "src": "22840:240:7",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2714,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2709,
                                      "name": "rounds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 920,
                                      "src": "22869:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$957_storage_$",
                                        "typeString": "mapping(uint256 => struct MetaFlokiPrediction.Round storage ref)"
                                      }
                                    },
                                    "id": 2711,
                                    "indexExpression": {
                                      "id": 2710,
                                      "name": "epoch",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2704,
                                      "src": "22876:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "22869:13:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Round_$957_storage",
                                      "typeString": "struct MetaFlokiPrediction.Round storage ref"
                                    }
                                  },
                                  "id": 2712,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "startTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 932,
                                  "src": "22869:28:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2713,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "22901:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "22869:33:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2720,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2715,
                                      "name": "rounds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 920,
                                      "src": "22918:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$957_storage_$",
                                        "typeString": "mapping(uint256 => struct MetaFlokiPrediction.Round storage ref)"
                                      }
                                    },
                                    "id": 2717,
                                    "indexExpression": {
                                      "id": 2716,
                                      "name": "epoch",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2704,
                                      "src": "22925:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "22918:13:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Round_$957_storage",
                                      "typeString": "struct MetaFlokiPrediction.Round storage ref"
                                    }
                                  },
                                  "id": 2718,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "lockTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 934,
                                  "src": "22918:27:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2719,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "22949:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "22918:32:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "22869:81:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2728,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2722,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "22966:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2723,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "22966:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2724,
                                    "name": "rounds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 920,
                                    "src": "22984:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$957_storage_$",
                                      "typeString": "mapping(uint256 => struct MetaFlokiPrediction.Round storage ref)"
                                    }
                                  },
                                  "id": 2726,
                                  "indexExpression": {
                                    "id": 2725,
                                    "name": "epoch",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2704,
                                    "src": "22991:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "22984:13:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Round_$957_storage",
                                    "typeString": "struct MetaFlokiPrediction.Round storage ref"
                                  }
                                },
                                "id": 2727,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "startTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 932,
                                "src": "22984:28:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "22966:46:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "22869:143:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2736,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2730,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "23028:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "23028:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 2732,
                                  "name": "rounds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 920,
                                  "src": "23046:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$957_storage_$",
                                    "typeString": "mapping(uint256 => struct MetaFlokiPrediction.Round storage ref)"
                                  }
                                },
                                "id": 2734,
                                "indexExpression": {
                                  "id": 2733,
                                  "name": "epoch",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2704,
                                  "src": "23053:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "23046:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Round_$957_storage",
                                  "typeString": "struct MetaFlokiPrediction.Round storage ref"
                                }
                              },
                              "id": 2735,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lockTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 934,
                              "src": "23046:27:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "23028:45:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "22869:204:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 2708,
                        "id": 2738,
                        "nodeType": "Return",
                        "src": "22850:223:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2702,
                    "nodeType": "StructuredDocumentation",
                    "src": "22581:191:7",
                    "text": " @notice Determine if a round is valid for receiving bets\n Round must have started and locked\n Current timestamp must be within startTimestamp and closeTimestamp"
                  },
                  "id": 2740,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_bettable",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2705,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2704,
                        "mutability": "mutable",
                        "name": "epoch",
                        "nodeType": "VariableDeclaration",
                        "scope": 2740,
                        "src": "22796:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2703,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "22796:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "22795:15:7"
                  },
                  "returnParameters": {
                    "id": 2708,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2707,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2740,
                        "src": "22834:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2706,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "22834:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "22833:6:7"
                  },
                  "scope": 2823,
                  "src": "22777:303:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2757,
                    "nodeType": "Block",
                    "src": "23157:115:7",
                    "statements": [
                      {
                        "assignments": [
                          2748,
                          null,
                          null,
                          null,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2748,
                            "mutability": "mutable",
                            "name": "roundId",
                            "nodeType": "VariableDeclaration",
                            "scope": 2757,
                            "src": "23168:14:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            },
                            "typeName": {
                              "id": 2747,
                              "name": "uint80",
                              "nodeType": "ElementaryTypeName",
                              "src": "23168:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              }
                            },
                            "visibility": "internal"
                          },
                          null,
                          null,
                          null,
                          null
                        ],
                        "id": 2752,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2749,
                              "name": "oracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 879,
                              "src": "23194:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$2869",
                                "typeString": "contract AggregatorV3Interface"
                              }
                            },
                            "id": 2750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "latestRoundData",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2868,
                            "src": "23194:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                              "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                            }
                          },
                          "id": 2751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23194:24:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                            "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "23167:51:7"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 2753,
                              "name": "roundId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2748,
                              "src": "23236:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              }
                            },
                            {
                              "id": 2754,
                              "name": "oracleLatestRoundId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 903,
                              "src": "23245:19:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 2755,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "23235:30:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint80_$_t_uint256_$",
                            "typeString": "tuple(uint80,uint256)"
                          }
                        },
                        "functionReturnParameters": 2746,
                        "id": 2756,
                        "nodeType": "Return",
                        "src": "23228:37:7"
                      }
                    ]
                  },
                  "functionSelector": "29b72441",
                  "id": 2758,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLatestOracleRounds",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2741,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "23116:2:7"
                  },
                  "returnParameters": {
                    "id": 2746,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2743,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2758,
                        "src": "23140:6:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 2742,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "23140:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2745,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2758,
                        "src": "23148:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2744,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "23148:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "23139:17:7"
                  },
                  "scope": 2823,
                  "src": "23086:186:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2804,
                    "nodeType": "Block",
                    "src": "23498:517:7",
                    "statements": [
                      {
                        "assignments": [
                          2767
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2767,
                            "mutability": "mutable",
                            "name": "leastAllowedTimestamp",
                            "nodeType": "VariableDeclaration",
                            "scope": 2804,
                            "src": "23508:29:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2766,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "23508:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2772,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2768,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "23540:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "23540:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 2770,
                            "name": "oracleUpdateAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 905,
                            "src": "23558:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23540:39:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "23508:71:7"
                      },
                      {
                        "assignments": [
                          2774,
                          2776,
                          null,
                          2778,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2774,
                            "mutability": "mutable",
                            "name": "roundId",
                            "nodeType": "VariableDeclaration",
                            "scope": 2804,
                            "src": "23590:14:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            },
                            "typeName": {
                              "id": 2773,
                              "name": "uint80",
                              "nodeType": "ElementaryTypeName",
                              "src": "23590:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2776,
                            "mutability": "mutable",
                            "name": "price",
                            "nodeType": "VariableDeclaration",
                            "scope": 2804,
                            "src": "23606:12:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "typeName": {
                              "id": 2775,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "23606:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "visibility": "internal"
                          },
                          null,
                          {
                            "constant": false,
                            "id": 2778,
                            "mutability": "mutable",
                            "name": "timestamp",
                            "nodeType": "VariableDeclaration",
                            "scope": 2804,
                            "src": "23622:17:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2777,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "23622:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 2782,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2779,
                              "name": "oracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 879,
                              "src": "23645:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$2869",
                                "typeString": "contract AggregatorV3Interface"
                              }
                            },
                            "id": 2780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "latestRoundData",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2868,
                            "src": "23645:35:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                              "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                            }
                          },
                          "id": 2781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23645:37:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                            "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "23589:93:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2784,
                                "name": "timestamp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2778,
                                "src": "23713:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 2785,
                                "name": "leastAllowedTimestamp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2767,
                                "src": "23726:21:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "23713:34:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f7261636c6520757064617465206578636565646564206d61782074696d657374616d7020616c6c6f77616e6365",
                              "id": 2787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23761:48:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f33570aeabdc7840b27baeee2ba18f1f51901a851210e95175d48a2543a633e7",
                                "typeString": "literal_string \"Oracle update exceeded max timestamp allowance\""
                              },
                              "value": "Oracle update exceeded max timestamp allowance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f33570aeabdc7840b27baeee2ba18f1f51901a851210e95175d48a2543a633e7",
                                "typeString": "literal_string \"Oracle update exceeded max timestamp allowance\""
                              }
                            ],
                            "id": 2783,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "23692:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23692:127:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2789,
                        "nodeType": "ExpressionStatement",
                        "src": "23692:127:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2796,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 2793,
                                    "name": "roundId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2774,
                                    "src": "23858:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint80",
                                      "typeString": "uint80"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint80",
                                      "typeString": "uint80"
                                    }
                                  ],
                                  "id": 2792,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "23850:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 2791,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "23850:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2794,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23850:16:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "id": 2795,
                                "name": "oracleLatestRoundId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 903,
                                "src": "23869:19:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "23850:38:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f7261636c652075706461746520726f756e644964206d757374206265206c6172676572207468616e206f7261636c654c6174657374526f756e644964",
                              "id": 2797,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23902:63:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_26bf7200ac9064fd4cd504d65207afe4b5d3eae2249dd8e9100c923d5898f73e",
                                "typeString": "literal_string \"Oracle update roundId must be larger than oracleLatestRoundId\""
                              },
                              "value": "Oracle update roundId must be larger than oracleLatestRoundId"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_26bf7200ac9064fd4cd504d65207afe4b5d3eae2249dd8e9100c923d5898f73e",
                                "typeString": "literal_string \"Oracle update roundId must be larger than oracleLatestRoundId\""
                              }
                            ],
                            "id": 2790,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "23829:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23829:146:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2799,
                        "nodeType": "ExpressionStatement",
                        "src": "23829:146:7"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 2800,
                              "name": "roundId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2774,
                              "src": "23993:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              }
                            },
                            {
                              "id": 2801,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2776,
                              "src": "24002:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "id": 2802,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "23992:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$",
                            "typeString": "tuple(uint80,int256)"
                          }
                        },
                        "functionReturnParameters": 2765,
                        "id": 2803,
                        "nodeType": "Return",
                        "src": "23985:23:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2759,
                    "nodeType": "StructuredDocumentation",
                    "src": "23278:145:7",
                    "text": " @notice Get latest recorded price from oracle\n If it falls below allowed buffer or has not updated, it would be invalid."
                  },
                  "id": 2805,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getPriceFromOracle",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2760,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "23456:2:7"
                  },
                  "returnParameters": {
                    "id": 2765,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2762,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2805,
                        "src": "23482:6:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 2761,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "23482:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2764,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2805,
                        "src": "23490:6:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2763,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "23490:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "23481:16:7"
                  },
                  "scope": 2823,
                  "src": "23428:587:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2821,
                    "nodeType": "Block",
                    "src": "24199:124:7",
                    "statements": [
                      {
                        "assignments": [
                          2814
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2814,
                            "mutability": "mutable",
                            "name": "size",
                            "nodeType": "VariableDeclaration",
                            "scope": 2821,
                            "src": "24209:12:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2813,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "24209:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2815,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "24209:12:7"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "24240:52:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "24254:28:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "account",
                                    "nodeType": "YulIdentifier",
                                    "src": "24274:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "extcodesize",
                                  "nodeType": "YulIdentifier",
                                  "src": "24262:11:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24262:20:7"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "24254:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 2808,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "24274:7:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 2814,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "24254:4:7",
                            "valueSize": 1
                          }
                        ],
                        "id": 2816,
                        "nodeType": "InlineAssembly",
                        "src": "24231:61:7"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2817,
                            "name": "size",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2814,
                            "src": "24308:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "24315:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "24308:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 2812,
                        "id": 2820,
                        "nodeType": "Return",
                        "src": "24301:15:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2806,
                    "nodeType": "StructuredDocumentation",
                    "src": "24021:106:7",
                    "text": " @notice Returns true if `account` is a contract.\n @param account: account address"
                  },
                  "id": 2822,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_isContract",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2809,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2808,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 2822,
                        "src": "24153:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2807,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "24153:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "24152:17:7"
                  },
                  "returnParameters": {
                    "id": 2812,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2811,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2822,
                        "src": "24193:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2810,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "24193:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "24192:6:7"
                  },
                  "scope": 2823,
                  "src": "24132:191:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 2824,
              "src": "466:23859:7"
            }
          ],
          "src": "37:24289:7"
        },
        "id": 7
      },
      "contracts/interfaces/AggregatorV3Interface.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/AggregatorV3Interface.sol",
          "exportedSymbols": {
            "AggregatorV3Interface": [
              2869
            ]
          },
          "id": 2870,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2825,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:8"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 2869,
              "linearizedBaseContracts": [
                2869
              ],
              "name": "AggregatorV3Interface",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "313ce567",
                  "id": 2830,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2826,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "111:2:8"
                  },
                  "returnParameters": {
                    "id": 2829,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2828,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2830,
                        "src": "156:5:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 2827,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "156:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "148:19:8"
                  },
                  "scope": 2869,
                  "src": "94:74:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "7284e416",
                  "id": 2835,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "description",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2831,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "192:2:8"
                  },
                  "returnParameters": {
                    "id": 2834,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2833,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2835,
                        "src": "237:13:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2832,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "237:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "229:27:8"
                  },
                  "scope": 2869,
                  "src": "172:85:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "54fd4d50",
                  "id": 2840,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "version",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2836,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "277:2:8"
                  },
                  "returnParameters": {
                    "id": 2839,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2838,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2840,
                        "src": "322:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2837,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "322:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "314:21:8"
                  },
                  "scope": 2869,
                  "src": "261:75:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "9a6fc8f5",
                  "id": 2855,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRoundData",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2843,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2842,
                        "mutability": "mutable",
                        "name": "_roundId",
                        "nodeType": "VariableDeclaration",
                        "scope": 2855,
                        "src": "578:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 2841,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "578:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "572:25:8"
                  },
                  "returnParameters": {
                    "id": 2854,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2845,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nodeType": "VariableDeclaration",
                        "scope": 2855,
                        "src": "640:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 2844,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "640:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2847,
                        "mutability": "mutable",
                        "name": "answer",
                        "nodeType": "VariableDeclaration",
                        "scope": 2855,
                        "src": "662:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2846,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "662:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2849,
                        "mutability": "mutable",
                        "name": "startedAt",
                        "nodeType": "VariableDeclaration",
                        "scope": 2855,
                        "src": "683:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2848,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "683:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2851,
                        "mutability": "mutable",
                        "name": "updatedAt",
                        "nodeType": "VariableDeclaration",
                        "scope": 2855,
                        "src": "708:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2850,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "708:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2853,
                        "mutability": "mutable",
                        "name": "answeredInRound",
                        "nodeType": "VariableDeclaration",
                        "scope": 2855,
                        "src": "733:22:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 2852,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "733:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "632:129:8"
                  },
                  "scope": 2869,
                  "src": "551:211:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "feaf968c",
                  "id": 2868,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "latestRoundData",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2856,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "790:2:8"
                  },
                  "returnParameters": {
                    "id": 2867,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2858,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nodeType": "VariableDeclaration",
                        "scope": 2868,
                        "src": "835:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 2857,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "835:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2860,
                        "mutability": "mutable",
                        "name": "answer",
                        "nodeType": "VariableDeclaration",
                        "scope": 2868,
                        "src": "857:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2859,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "857:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2862,
                        "mutability": "mutable",
                        "name": "startedAt",
                        "nodeType": "VariableDeclaration",
                        "scope": 2868,
                        "src": "878:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2861,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "878:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2864,
                        "mutability": "mutable",
                        "name": "updatedAt",
                        "nodeType": "VariableDeclaration",
                        "scope": 2868,
                        "src": "903:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2863,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "903:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2866,
                        "mutability": "mutable",
                        "name": "answeredInRound",
                        "nodeType": "VariableDeclaration",
                        "scope": 2868,
                        "src": "928:22:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 2865,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "928:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "827:129:8"
                  },
                  "scope": 2869,
                  "src": "766:191:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2870,
              "src": "57:903:8"
            }
          ],
          "src": "32:929:8"
        },
        "id": 8
      }
    }
  }
}
